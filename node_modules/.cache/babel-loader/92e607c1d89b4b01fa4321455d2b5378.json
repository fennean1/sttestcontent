{"ast":null,"code":"var _jsxFileName = \"/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/components/FactorBlocks.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport { Button, Icon, Row, Col } from \"react-materialize\";\nimport { Switch, Route } from \"react-router-dom\";\nconst CORAL = \"#FF4848\";\nconst BLUE = \"#51D0FF\";\nconst GREEN = \"#7ADA64\";\nconst PURPLE = \"#B478FF\";\nconst YELLOW = \"#FFFD82\";\nconst ORANGE = \"#ffb84d\";\nconst PINK = \"#ff66ff\";\nconst RED = \"#ff3333\";\nconst BROWN = \"#bf8040\";\nconst SEXY_GREEN = \"#669999\";\nconst STRONG_GREEN = \"#00b359\";\nconst STRONG_YELLOW = \"#ffff00\";\nconst BLUE_GREY = \"#8585ad\";\n\nclass FractionList extends Component {\n  constructor(props) {\n    super(props);\n    this.colors = [BLUE, GREEN, PURPLE, YELLOW, ORANGE, PINK, RED, BLUE_GREY, SEXY_GREEN, STRONG_GREEN, STRONG_YELLOW, BROWN];\n    this.colorIndex = 0;\n    this.state = {\n      whole: 24\n    };\n  }\n\n  returnNBlocks(n) {\n    let arr = [];\n\n    for (let i = 0; i < n; i++) {\n      arr.push(i);\n    }\n\n    let color = n > this.colors.length ? BLUE_GREY : this.colors[n - 1];\n    const liStyle = {\n      background: ORANGE,\n      margin: 2,\n      flexGrow: 1,\n      textAlign: \"center\",\n      verticalAlign: \"center\"\n    };\n    return arr.map(e => React.createElement(\"div\", {\n      className: \"grow\",\n      style: liStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.whole / n));\n  }\n\n  handleChange(event) {\n    this.setState({\n      whole: event.target.value\n    });\n  }\n\n  renderRows(n) {\n    if (isNaN(n)) {\n      return null;\n    } else {\n      let arr = [];\n      let testArr = [1, 2, 3];\n\n      for (let i = 0; i <= n; i++) {\n        arr.push(i);\n      }\n\n      return arr.map(e => React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.whole / e % 1 == 0 && this.returnNBlocks(e)));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"center\" //type=\"text\"\n      ,\n      value: this.state.whole,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.renderRows(this.state.whole)));\n  }\n\n}\n\nexport default FractionList;","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/components/FactorBlocks.js"],"names":["React","Component","Button","Icon","Row","Col","Switch","Route","CORAL","BLUE","GREEN","PURPLE","YELLOW","ORANGE","PINK","RED","BROWN","SEXY_GREEN","STRONG_GREEN","STRONG_YELLOW","BLUE_GREY","FractionList","constructor","props","colors","colorIndex","state","whole","returnNBlocks","n","arr","i","push","color","length","liStyle","background","margin","flexGrow","textAlign","verticalAlign","map","e","handleChange","event","setState","target","value","renderRows","isNaN","testArr","display","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport { Button, Icon, Row, Col } from \"react-materialize\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst CORAL = \"#FF4848\";\nconst BLUE = \"#51D0FF\";\nconst GREEN = \"#7ADA64\";\nconst PURPLE = \"#B478FF\";\nconst YELLOW = \"#FFFD82\";\nconst ORANGE = \"#ffb84d\";\nconst PINK = \"#ff66ff\";\nconst RED = \"#ff3333\";\nconst BROWN = \"#bf8040\";\nconst SEXY_GREEN = \"#669999\";\nconst STRONG_GREEN = \"#00b359\";\nconst STRONG_YELLOW = \"#ffff00\";\nconst BLUE_GREY = \"#8585ad\";\n\nclass FractionList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      BLUE,\n      GREEN,\n      PURPLE,\n      YELLOW,\n      ORANGE,\n      PINK,\n      RED,\n      BLUE_GREY,\n      SEXY_GREEN,\n      STRONG_GREEN,\n      STRONG_YELLOW,\n      BROWN\n    ];\n    this.colorIndex = 0;\n\n    this.state = {\n      whole: 24\n    };\n  }\n\n  returnNBlocks(n) {\n    let arr = [];\n    for (let i = 0; i < n; i++) {\n      arr.push(i);\n    }\n\n    let color = n > this.colors.length ? BLUE_GREY : this.colors[n - 1];\n\n    const liStyle = {\n      background: ORANGE,\n      margin: 2,\n      flexGrow: 1,\n      textAlign: \"center\",\n      verticalAlign: \"center\"\n    };\n\n    return arr.map(e => (\n      <div className=\"grow\" style={liStyle}>\n        {this.state.whole / n}\n      </div>\n    ));\n  }\n\n  handleChange(event) {\n    this.setState({ whole: event.target.value });\n  }\n\n  renderRows(n) {\n    if (isNaN(n)) {\n      return null;\n    } else {\n      let arr = [];\n      let testArr = [1, 2, 3];\n      for (let i = 0; i <= n; i++) {\n        arr.push(i);\n      }\n      return arr.map(e => (\n        <div style={{ display: \"flex\" }}>\n          {(this.state.whole / e) % 1 == 0 && this.returnNBlocks(e)}\n        </div>\n      ));\n    }\n  }\n  render() {\n    return (\n      <div>\n        <input\n          className=\"center\"\n          //type=\"text\"\n          value={this.state.whole}\n          onChange={this.handleChange.bind(this)}\n        />\n        <div className=\"scroller\">{this.renderRows(this.state.whole)}</div>\n      </div>\n    );\n  }\n}\n\nexport default FractionList;\n"]},"metadata":{},"sourceType":"module"}