{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { SSL_OP_TLS_BLOCK_PADDING_BUG, SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from \"constants\";\nimport { number } from \"prop-types\";\nimport { tsExpressionWithTypeArguments, thisExpression } from \"@babel/types\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const LINE_PERCENTAGE = 0.8;\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN); // Initial State\n\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 20\n  };\n  let FirstRow;\n  var Rows = [FirstRow]; // Layout Parameters\n\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let H_W_RATIO = setup.height / setup.width;\n  let LANDSCAPE = H_W_RATIO < 3 / 4;\n  let ARENA_WIDTH = LANDSCAPE ? 4 / 3 * setup.height : setup.width;\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3 / 4 * setup.width;\n  let LINE_WIDTH = LINE_PERCENTAGE * WINDOW_WIDTH;\n  let LINE_THICKNESS = LINE_WIDTH / 200;\n  let TICK_THICKNESS = 2 * LINE_THICKNESS / 3;\n  let MAJOR_TICK_HEIGHT = LINE_WIDTH / 20;\n  let MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT / 2;\n  let DX = LINE_WIDTH / state.lineMax;\n  let LINE_START = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n  let STRIP_HEIGHT = LINE_WIDTH / 12; // Reference to entities.\n\n  let backGround;\n  let numberLine;\n  let pinA;\n  let pinB;\n  let stripA;\n  let stripB;\n  let stripBLabel;\n  let stripALabel;\n  let incButton;\n  let decButton;\n  let activePin; // Constructors (should not be called on re-draw)\n\n  function makeNumberLine() {\n    this.tickSpan = 1;\n    this.labelSpan = 1;\n    this.max = state.lineMax;\n    this.ticks = []; // size 120\n\n    this.labels = [];\n    this.line = new PIXI.Graphics();\n\n    this.init = n => {\n      this.line.lineStyle(LINE_THICKNESS, 0x000000);\n      this.line.x = ARENA_WIDTH / 2 - LINE_WIDTH / 2;\n      this.line.y = ARENA_HEIGHT / 2;\n      this.line.lineTo(LINE_WIDTH, 0);\n      this.draw();\n      app.stage.addChild(this.line);\n\n      for (let i = 0; i < 120; i++) {\n        let newTick = new PIXI.Graphics();\n        newTick.lineStyle(LINE_THICKNESS, 0x000000);\n        newTick.x = this.line.x;\n        newTick.y = this.line.y - LINE_THICKNESS / 2;\n        newTick.lineTo(0, MINOR_TICK_HEIGHT);\n        app.stage.addChild(newTick);\n        this.ticks.push(newTick); // Setup Labels Here\n\n        let newLabel = new PIXI.Text(i, {\n          fontFamily: \"Arial\",\n          fontSize: DX / 2,\n          fill: \"0x000000\",\n          align: \"center\"\n        });\n        newLabel.anchor.x = 0.5;\n        this.labels.push(newLabel);\n        newLabel.x = this.line.x + DX * i;\n        newLabel.y = this.line.y + MINOR_TICK_HEIGHT;\n        app.stage.addChild(newLabel);\n      }\n\n      this.increment(0);\n    };\n\n    this.getSetup = () => {// update tickspan etc. based on line max.\n    };\n\n    this.increment = inc => {\n      // Animation go here\n      this.max += inc; // Update State - (Context Specific)\n\n      state.lineMax = this.max;\n      updateLayoutParams();\n      this.ticks.forEach((e, i) => {\n        if (i > this.max) {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH + this.line.x\n          });\n        } else {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH / this.max * i + this.line.x\n          });\n        }\n      });\n      this.labels.forEach((e, i) => {\n        if (i > this.max) {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH + this.line.x\n          });\n          TweenLite.to(e, 0.5, {\n            alpha: 0\n          });\n        } else {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH / this.max * i + this.line.x\n          });\n          TweenLite.to(e, 0.5, {\n            alpha: 1\n          });\n        }\n      });\n    };\n\n    this.draw = () => {\n      this.line.width = LINE_WIDTH;\n      this.line.height = LINE_THICKNESS;\n      this.line.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n      this.line.y = WINDOW_HEIGHT / 2;\n      this.ticks.forEach((e, i) => {\n        e.width = TICK_THICKNESS;\n        e.height = MINOR_TICK_HEIGHT;\n        e.y = this.line.y - LINE_THICKNESS / 2;\n\n        if (i > this.max) {\n          e.x = LINE_WIDTH + this.line.x;\n        } else {\n          e.x = LINE_WIDTH / this.max * i + this.line.x;\n        }\n      });\n      this.labels.forEach((e, i) => {\n        e.y = this.line.y + MINOR_TICK_HEIGHT;\n        e.style.fontSize = DX / 2;\n\n        if (i > this.max) {\n          e.x = LINE_WIDTH + this.line.x;\n        } else {\n          e.x = LINE_WIDTH / this.max * i + this.line.x;\n        }\n      });\n    };\n\n    this.init();\n  }\n\n  function makeBackground() {\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH;\n    this.sprite.height = WINDOW_HEIGHT;\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup', globalPointerUp);\n    this.sprite.interactive = true;\n    app.stage.addChild(this.sprite);\n\n    this.draw = () => {\n      this.sprite.width = WINDOW_WIDTH;\n      this.sprite.height = WINDOW_HEIGHT;\n    };\n  }\n\n  function makePin(id) {\n    this.sprite = new PIXI.Sprite();\n    this.sprite.id = id;\n    this.sprite.texture = PIN_TEXTURE;\n    this.sprite.interactive = true;\n    this.sprite.anchor.x = 0.5;\n    this.sprite.on('pointerdown', onDragStart);\n    this.sprite.on('pointermove', onDragMove);\n    this.sprite.on('pointerup', onDragEnd);\n    this.sprite.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n    this.sprite.val = 8;\n    app.stage.addChild(this.sprite);\n\n    this.sprite.round = () => {\n      // Pre Computation\n      let rawLineX = this.sprite.x - numberLine.line.x;\n      let n = Math.round(rawLineX / DX); // Setting\n\n      this.sprite.x = numberLine.line.x + n * DX;\n      this.sprite.val = n; // There's gotta be a better pattern than this\n\n      if (this.sprite.id == 0) {\n        state.valA = this.sprite.val;\n      } else if (this.sprite.id == 1) {\n        state.valB = this.sprite.val;\n      }\n    };\n\n    this.draw = () => {\n      this.sprite.width = STRIP_HEIGHT;\n      this.sprite.height = STRIP_HEIGHT;\n      this.sprite.y = WINDOW_HEIGHT / 2 + MINOR_TICK_HEIGHT + DX / 2;\n      this.sprite.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2 + this.sprite.val * DX;\n    };\n\n    this.draw();\n  } // Pin Drag Functions\n\n\n  function onDragStart(event) {\n    app.stage.addChild(this);\n    this.deltaTouch = {\n      x: this.x - event.data.global.x,\n      y: this.y - event.data.global.y\n    };\n    this.dragging = true;\n    this.data = event.data;\n  }\n\n  function onDragEnd(event) {\n    this.dragging = false;\n    this.data = null;\n    this.round();\n    FirstRow.draw(this.x - LINE_START);\n  }\n\n  function onDragMove(event) {\n    if (this.dragging) {\n      let width = this.x - LINE_START;\n      FirstRow.draw(width);\n      let newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch.x; // Keep within number line bounds.\n\n      if (this.x < WINDOW_WIDTH / 2 - LINE_WIDTH / 2) {\n        this.dragging = false;\n        this.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n      } else if (this.x > WINDOW_WIDTH / 2 + LINE_WIDTH / 2) {\n        this.dragging = false;\n        this.x = WINDOW_WIDTH / 2 + LINE_WIDTH / 2;\n      }\n    }\n  }\n\n  function makeArrowButton(inc) {\n    let button = new PIXI.Sprite.from(CONST.ASSETS.ARROW);\n    button.inc = inc;\n    button.interactive = true;\n    button.anchor.set(0.5);\n    button.on('pointerdown', () => {\n      numberLine.increment(inc);\n      resize(null, false);\n    });\n    app.stage.addChild(button);\n\n    button.draw = () => {\n      if (button.inc == -5) {\n        button.width = STRIP_HEIGHT / 2;\n        button.height = STRIP_HEIGHT / 2;\n        button.x = WINDOW_WIDTH - 1.1 * button.width;\n        button.y = WINDOW_HEIGHT / 2 + 1 / 2 * button.width;\n        button.rotation = Math.PI;\n      } else if (button.inc == 5) {\n        button.width = STRIP_HEIGHT / 2;\n        button.height = STRIP_HEIGHT / 2;\n        button.x = WINDOW_WIDTH - 1.1 * button.width;\n        button.y = WINDOW_HEIGHT / 2 - 1 / 2 * button.width;\n      }\n    };\n\n    return button;\n  } //app.stage.on('pointermove',resizeLine)\n\n\n  function resizeLine(event) {\n    console.log(\"rezigin\");\n    FirstRow.draw(event.data.global.y);\n  } // app.stage.interactive = true\n\n\n  function Row(num, den, width) {\n    // Internal Params\n    let touching = true; // Default values\n\n    this.numerator = num;\n    this.denominator = den;\n    this.width = width;\n    this.container = new PIXI.Container();\n    this.container.width = width;\n    this.container.interactive = true;\n    this.sprites = [];\n\n    function getTexture(type) {\n      if (type == 'A') {\n        let A = new PIXI.Graphics();\n        A.lineStyle(3, 0x000000);\n        A.drawRoundedRect(0, 0, 50, 50, 1);\n        return app.renderer.generateTexture(A);\n      } else if (type == 'B') {\n        let A = new PIXI.Graphics();\n        A.lineStyle(3, 0x000000);\n        A.drawRoundedRect(0, 0, 50, 50, 1);\n        return app.renderer.generateTexture(A);\n      }\n    }\n\n    this.blockWidth = width / this.denominator;\n    this.leftWhisker = new PIXI.Graphics();\n    this.blockA = new PIXI.Graphics();\n    this.blockA.lineStyle(3, 0x000000);\n    this.blockA.drawRoundedRect(0, 0, this.blockWidth, 50, 1);\n    let A = app.renderer.generateTexture(this.blockA);\n    this.blockB = new PIXI.Graphics();\n    this.blockB.beginFill(0xff4772);\n    this.blockB.lineStyle(3, 0x000000);\n    this.blockB.drawRoundedRect(0, 0, this.blockWidth, 50, 1);\n    let B = app.renderer.generateTexture(this.blockB);\n\n    this.draw = width => {\n      this.blockWidth = width / this.denominator;\n      this.blockA.clear();\n      this.blockA.lineStyle(3, 0x000000);\n      this.blockA.drawRoundedRect(0, 0, this.blockWidth, 50, 1);\n      A = app.renderer.generateTexture(this.blockA);\n      this.blockB.clear();\n      this.blockB.beginFill(0xff4772);\n      this.blockB.lineStyle(3, 0x000000);\n      this.blockB.drawRoundedRect(0, 0, this.blockWidth, 50, 1);\n      B = app.renderer.generateTexture(this.blockB);\n\n      for (let i = 0; i < this.sprites.length; i++) {\n        if (this.sprites[i].active) {\n          this.sprites[i].texture = B;\n        } else {\n          this.sprites[i].texture = A;\n        }\n\n        this.sprites[i].x = LINE_START + this.blockWidth * i;\n      }\n    };\n\n    for (let i = 0; i < this.denominator; i++) {\n      console.log(\"balls\");\n      let s = new PIXI.Sprite.from(A);\n      s.on('pointerdown', spritePointerDown);\n      s.on('pointerup', spritePointerUp);\n      s.on('pointermove', spritePointerMoved);\n      s.interactive = true;\n      s.active = false;\n      s.x = i * LINE_WIDTH / this.denominator;\n      s.y = WINDOW_HEIGHT / 2 - 50;\n      this.sprites.push(s);\n      this.container.addChild(s);\n    } //  Attached methods\n\n\n    this.container.on('pointerdown', containerPointerDown);\n    this.container.on('pointerup', containerPointerUp);\n    this.container.on('pointermove', containerPointerMove); // Add children\n\n    app.stage.addChild(this.container);\n    this.width = this.container.width;\n\n    function spritePointerDown(event) {\n      this.touched = true;\n      this.dragged = false;\n    }\n\n    function spritePointerMoved(event) {\n      if (this.touched) {\n        console.log(\"pointermove\");\n        this.dragged = true;\n      }\n    }\n\n    function spritePointerUp(event) {\n      this.touched = false;\n      console.log('this.draggeed', this.dragged);\n\n      if (!this.dragged) {\n        this.dragged = false;\n        this.active = !this.active;\n        this.alpha = 0.2;\n        this.texture = this.active ? B : A;\n        TweenLite.to(this, 0.4, {\n          alpha: 1\n        });\n      }\n    }\n\n    function containerPointerDown(event) {\n      this.data = event.data;\n      this.startWidth = this.width;\n      this.dragStartY = event.data.global.y;\n      this.touching = true;\n      touching = true;\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      };\n    }\n\n    function containerPointerUp(event) {\n      this.touching = false;\n      touching = false;\n    }\n\n    function containerPointerMove(event) {\n      if (this.touching) {\n        const newPosition = this.data.getLocalPosition(this.parent);\n        this.y = event.data.global.y + this.deltaTouch.y;\n        this.dragged = true;\n      }\n    }\n\n    this.draw(width);\n    this.leftWhisker = new PIXI.Graphics();\n    this.leftWhisker.lineStyle(3, 0x000000);\n    console.log(\"container\", container.x, container, y);\n    this.leftWhisker.moveTo(this.container.x, this.container.y);\n    this.leftWhisker.lineTo(0, 100);\n    let lw = app.renderer.generateTexture(this.leftWhisker);\n    this.container.addChild(this.leftWhisker);\n    this.rightWhisker = new PIXI.Graphics();\n  }\n\n  function globalPointerUp() {\n    // Ughhh...\n    FirstRow.container.touching = false;\n    pinA.sprite.dragging = false; //pinA.sprite.round()\n    //pinB.sprite.round()\n    //stripA.draw()\n    //stripB.draw()\n    //stripALabel.draw()\n    //stripBLabel.draw()\n  } // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame);\n    app.renderer.resize(WINDOW_WIDTH, WINDOW_HEIGHT);\n    numberLine.draw();\n    backGround.draw();\n    pinA.draw();\n    incButton.draw();\n    decButton.draw();\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n\n    WINDOW_WIDTH = frame.width;\n    WINDOW_HEIGHT = frame.height;\n    H_W_RATIO = frame.height / frame.width;\n    LANDSCAPE = H_W_RATIO < 3 / 4;\n    ARENA_WIDTH = LANDSCAPE ? 4 / 3 * frame.height : frame.width;\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3 / 4 * frame.width;\n    LINE_WIDTH = LINE_PERCENTAGE * WINDOW_WIDTH;\n    LINE_THICKNESS = LINE_WIDTH / 200;\n    TICK_THICKNESS = LINE_THICKNESS / 2;\n    MAJOR_TICK_HEIGHT = LINE_WIDTH / 20;\n    MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT / 2;\n    DX = LINE_WIDTH / state.lineMax;\n    LINE_START = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n    STRIP_HEIGHT = LINE_WIDTH / 12;\n  } // Loading Script\n\n\n  function load() {\n    let features = {\n      'strips': true\n    };\n\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    backGround = new makeBackground();\n    numberLine = new makeNumberLine();\n    pinA = new makePin(0); //pinB = new makePin(1)\n    //stripA = new makeStrip(0)\n    //stripB = new makeStrip(1)\n    //stripALabel = makeStripLabel(0)\n    //stripBLabel = makeStripLabel(1)\n\n    incButton = makeArrowButton(5);\n    decButton = makeArrowButton(-5); //stripALabel.draw()\n    //stripBLabel.draw()\n\n    incButton.draw();\n    decButton.draw();\n    FirstRow = new Row(3, 4, pinA.sprite.x - LINE_START);\n  } // Call load script\n\n\n  load(); // Not sure where else to put this.\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/fractionstacks.js"],"names":["PIXI","CONST","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","SSL_OP_TLS_BLOCK_PADDING_BUG","SSL_OP_SSLEAY_080_CLIENT_DH_BUG","number","tsExpressionWithTypeArguments","thisExpression","ASSETS","init","app","setup","BLUE_TEXTURE","Texture","from","BLUE_CIRCLE","LINE_PERCENTAGE","PIN_TEXTURE","SHARP_PIN","state","valA","valB","lineMax","FirstRow","Rows","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","H_W_RATIO","LANDSCAPE","ARENA_WIDTH","ARENA_HEIGHT","LINE_WIDTH","LINE_THICKNESS","TICK_THICKNESS","MAJOR_TICK_HEIGHT","MINOR_TICK_HEIGHT","DX","LINE_START","STRIP_HEIGHT","backGround","numberLine","pinA","pinB","stripA","stripB","stripBLabel","stripALabel","incButton","decButton","activePin","makeNumberLine","tickSpan","labelSpan","max","ticks","labels","line","Graphics","n","lineStyle","x","y","lineTo","draw","stage","addChild","i","newTick","push","newLabel","Text","fontFamily","fontSize","fill","align","anchor","increment","getSetup","inc","updateLayoutParams","forEach","e","to","alpha","style","makeBackground","sprite","Sprite","BLUE_GRADIENT","on","globalPointerUp","interactive","makePin","id","texture","onDragStart","onDragMove","onDragEnd","val","round","rawLineX","Math","event","deltaTouch","data","global","dragging","newPosition","getLocalPosition","parent","makeArrowButton","button","ARROW","set","resize","rotation","PI","resizeLine","console","log","Row","num","den","touching","numerator","denominator","container","Container","sprites","getTexture","type","A","drawRoundedRect","renderer","generateTexture","blockWidth","leftWhisker","blockA","blockB","beginFill","B","clear","length","active","s","spritePointerDown","spritePointerUp","spritePointerMoved","containerPointerDown","containerPointerUp","containerPointerMove","touched","dragged","startWidth","dragStartY","moveTo","lw","rightWhisker","newFrame","flex","frame","load","features","props","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { SSL_OP_TLS_BLOCK_PADDING_BUG, SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from \"constants\";\nimport { number } from \"prop-types\";\nimport { tsExpressionWithTypeArguments, thisExpression } from \"@babel/types\";\nconst ASSETS = CONST.ASSETS\n\nexport const init = (app, setup) => {\n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const LINE_PERCENTAGE = 0.8\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN)\n\n\n // Initial State\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 20,\n  }\n\n  let FirstRow\n\n  var Rows = [FirstRow]\n\n  // Layout Parameters\n  let WINDOW_WIDTH = setup.width\n  let WINDOW_HEIGHT = setup.height\n  let H_W_RATIO = setup.height/setup.width\n  let LANDSCAPE = H_W_RATIO < 3/4\n  let ARENA_WIDTH = LANDSCAPE ? 4/3*setup.height : setup.width\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3/4*setup.width\n  let LINE_WIDTH = LINE_PERCENTAGE*WINDOW_WIDTH\n  let LINE_THICKNESS = LINE_WIDTH/200\n  let TICK_THICKNESS = 2*LINE_THICKNESS/3\n  let MAJOR_TICK_HEIGHT = LINE_WIDTH/20\n  let MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT/2\n  let DX = LINE_WIDTH/state.lineMax\n  let LINE_START = WINDOW_WIDTH/2 - LINE_WIDTH/2\n  let STRIP_HEIGHT = LINE_WIDTH/12\n\n  // Reference to entities.\n  let backGround;\n  let numberLine;\n  let pinA;\n  let pinB;\n  let stripA;\n  let stripB;\n  let stripBLabel;\n  let stripALabel;\n  let incButton;\n  let decButton;\n  let activePin;\n\n \n  // Constructors (should not be called on re-draw)\n  function makeNumberLine(){\n     this.tickSpan = 1\n     this.labelSpan = 1\n     this.max = state.lineMax\n     this.ticks = [] // size 120\n     this.labels = []\n     this.line = new PIXI.Graphics()\n\n     this.init = (n) => {\n        this.line.lineStyle(LINE_THICKNESS,0x000000)\n        this.line.x = ARENA_WIDTH/2-LINE_WIDTH/2\n        this.line.y = ARENA_HEIGHT/2\n        this.line.lineTo(LINE_WIDTH,0)\n        this.draw()\n        app.stage.addChild(this.line)\n\n        for (let i = 0;i<120;i++){\n            let newTick = new PIXI.Graphics()\n            newTick.lineStyle(LINE_THICKNESS,0x000000)\n            newTick.x = this.line.x \n            newTick.y = this.line.y - LINE_THICKNESS/2\n            newTick.lineTo(0,MINOR_TICK_HEIGHT)\n            app.stage.addChild(newTick)\n            this.ticks.push(newTick)\n\n            // Setup Labels Here\n            let newLabel = new PIXI.Text(i,{\n              fontFamily: \"Arial\",\n              fontSize: DX/2,\n              fill: \"0x000000\",\n              align: \"center\"\n            })\n            newLabel.anchor.x = 0.5\n            this.labels.push(newLabel)\n            newLabel.x = this.line.x + DX*i\n            newLabel.y = this.line.y + MINOR_TICK_HEIGHT\n            app.stage.addChild(newLabel)\n        }\n        this.increment(0)\n     }\n\n     this.getSetup = ()=> {\n         // update tickspan etc. based on line max.\n     }\n\n     this.increment = (inc) => {\n         // Animation go here\n         this.max += inc\n\n         // Update State - (Context Specific)\n         state.lineMax = this.max\n         updateLayoutParams()\n\n         this.ticks.forEach((e,i)=> {\n            if (i > this.max){\n                TweenLite.to(e,0.5,{x: LINE_WIDTH + this.line.x })\n            } else {\n                TweenLite.to(e,0.5,{x: LINE_WIDTH/this.max*i + this.line.x})\n            }\n         })\n\n         this.labels.forEach((e,i)=> {\n          if (i > this.max){\n              TweenLite.to(e,0.5,{x: LINE_WIDTH + this.line.x })\n              TweenLite.to(e,0.5,{alpha: 0})\n          } else {\n              TweenLite.to(e,0.5,{x: LINE_WIDTH/this.max*i + this.line.x})\n              TweenLite.to(e,0.5,{alpha: 1})\n          }\n       })\n     }\n\n     this.draw = () => {\n        this.line.width = LINE_WIDTH\n        this.line.height = LINE_THICKNESS\n        this.line.x = WINDOW_WIDTH/2 - LINE_WIDTH/2\n        this.line.y = WINDOW_HEIGHT/2\n        this.ticks.forEach((e,i)=> {\n            e.width = TICK_THICKNESS\n            e.height = MINOR_TICK_HEIGHT\n            e.y = this.line.y - LINE_THICKNESS/2\n            if (i > this.max){\n                e.x = LINE_WIDTH + this.line.x \n            } else {\n                e.x =  LINE_WIDTH/this.max*i + this.line.x\n            }\n         })\n         this.labels.forEach((e,i)=> {\n          e.y = this.line.y + MINOR_TICK_HEIGHT\n          e.style.fontSize = DX/2\n          if (i > this.max){\n              e.x = LINE_WIDTH + this.line.x \n          } else {\n              e.x =  LINE_WIDTH/this.max*i + this.line.x\n          }\n       })\n     }\n     this.init()\n  }\n\n  function makeBackground(){\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH\n    this.sprite.height = WINDOW_HEIGHT\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup',globalPointerUp)\n    this.sprite.interactive = true\n\n    app.stage.addChild(this.sprite)\n\n    this.draw = () => {\n        this.sprite.width = WINDOW_WIDTH\n        this.sprite.height = WINDOW_HEIGHT\n    }\n  }\n\n\n  function makePin(id){\n    this.sprite = new PIXI.Sprite()\n    this.sprite.id = id\n    this.sprite.texture = PIN_TEXTURE\n    this.sprite.interactive = true\n    this.sprite.anchor.x = 0.5\n    this.sprite.on('pointerdown',onDragStart)\n    this.sprite.on('pointermove',onDragMove)\n    this.sprite.on('pointerup',onDragEnd)\n    this.sprite.x = WINDOW_WIDTH/2 - LINE_WIDTH/2\n    this.sprite.val = 8\n    app.stage.addChild(this.sprite)\n\n    this.sprite.round = () => {\n\n      // Pre Computation\n      let rawLineX = this.sprite.x - numberLine.line.x\n      let n = Math.round(rawLineX/DX)\n\n      // Setting\n      this.sprite.x = numberLine.line.x + n*DX\n      this.sprite.val = n\n\n      // There's gotta be a better pattern than this\n      if (this.sprite.id == 0){\n        state.valA = this.sprite.val\n      } else if (this.sprite.id == 1){\n        state.valB = this.sprite.val\n      }\n    }\n\n    this.draw = () => { \n      this.sprite.width = STRIP_HEIGHT\n      this.sprite.height = STRIP_HEIGHT\n      this.sprite.y = WINDOW_HEIGHT/2 + MINOR_TICK_HEIGHT + DX/2\n      this.sprite.x = WINDOW_WIDTH/2 - LINE_WIDTH/2 + this.sprite.val*DX\n    }\n    this.draw()\n   }\n\n  // Pin Drag Functions\n  function onDragStart(event) {\n      app.stage.addChild(this)\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n      this.dragging = true;\n      this.data = event.data;\n  }\n\n  function onDragEnd(event) {\n    this.dragging = false;\n    this.data = null;\n    this.round()\n    FirstRow.draw(this.x - LINE_START)\n  }\n\n  function onDragMove(event) {\n    if (this.dragging) {\n      let width = this.x - LINE_START\n      FirstRow.draw(width)\n      let newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch.x;\n\n      // Keep within number line bounds.\n      if (this.x < WINDOW_WIDTH/2-LINE_WIDTH/2){\n        this.dragging = false\n        this.x = WINDOW_WIDTH/2-LINE_WIDTH/2\n      } else if (this.x > WINDOW_WIDTH/2+LINE_WIDTH/2) {\n        this.dragging = false\n        this.x = WINDOW_WIDTH/2+LINE_WIDTH/2\n      }\n    }\n  }\n\n  function makeArrowButton(inc){\n    let button = new PIXI.Sprite.from(CONST.ASSETS.ARROW)\n    button.inc = inc\n    button.interactive = true\n    button.anchor.set(0.5)\n    button.on('pointerdown',()=>{\n      numberLine.increment(inc)\n      resize(null,false)\n    })\n    app.stage.addChild(button)\n\n    button.draw = () => {\n      if (button.inc == -5){\n        button.width = STRIP_HEIGHT/2\n        button.height = STRIP_HEIGHT/2\n        button.x = WINDOW_WIDTH - 1.1*button.width\n        button.y = WINDOW_HEIGHT/2 + 1/2*button.width\n        button.rotation = Math.PI\n      } else if (button.inc == 5){\n        button.width = STRIP_HEIGHT/2\n        button.height = STRIP_HEIGHT/2\n        button.x = WINDOW_WIDTH - 1.1*button.width\n        button.y = WINDOW_HEIGHT/2  - 1/2*button.width\n      }\n    }\n    return button\n  }\n\n  //app.stage.on('pointermove',resizeLine)\n\n  function resizeLine(event){\n    console.log(\"rezigin\")\n    FirstRow.draw(event.data.global.y)\n  }\n\n // app.stage.interactive = true\n\n\n \n  function Row(num,den,width){\n\n    // Internal Params\n    let touching = true   \n    \n    // Default values\n    this.numerator = num\n    this.denominator = den\n    this.width = width\n\n  \n    this.container = new PIXI.Container()\n    this.container.width = width\n    this.container.interactive = true\n    this.sprites = []\n  \n\n    function getTexture(type){\n      if (type == 'A'){\n        let A = new PIXI.Graphics()\n        A.lineStyle(3,0x000000) \n        A.drawRoundedRect(0,0,50,50,1)\n        return app.renderer.generateTexture(A)\n      } else if (type == 'B'){\n        let A = new PIXI.Graphics()\n        A.lineStyle(3,0x000000) \n        A.drawRoundedRect(0,0,50,50,1)\n        return app.renderer.generateTexture(A)\n    \n      }\n    }\n\n    this.blockWidth = width / this.denominator\n\n    this.leftWhisker = new PIXI.Graphics()\n\n    this.blockA = new PIXI.Graphics()\n    this.blockA.lineStyle(3,0x000000) \n    this.blockA.drawRoundedRect(0,0,this.blockWidth,50,1)\n    let A = app.renderer.generateTexture(this.blockA)\n\n    this.blockB = new PIXI.Graphics()\n    this.blockB.beginFill(0xff4772)\n    this.blockB.lineStyle(3,0x000000) \n    this.blockB.drawRoundedRect(0,0,this.blockWidth,50,1)\n    let B = app.renderer.generateTexture(this.blockB)\n\n\n    this.draw = (width) => {\n\n      this.blockWidth = width/this.denominator\n\n      this.blockA.clear()\n      this.blockA.lineStyle(3,0x000000) \n      this.blockA.drawRoundedRect(0,0,this.blockWidth,50,1)\n      A = app.renderer.generateTexture(this.blockA)\n\n      this.blockB.clear()\n      this.blockB.beginFill(0xff4772)\n      this.blockB.lineStyle(3,0x000000) \n      this.blockB.drawRoundedRect(0,0,this.blockWidth,50,1)\n      B = app.renderer.generateTexture(this.blockB)\n\n      for (let i = 0;i<this.sprites.length;i++){\n        if (this.sprites[i].active){\n          this.sprites[i].texture = B\n        } else {\n          this.sprites[i].texture = A\n        }\n\n        this.sprites[i].x = LINE_START+this.blockWidth*i\n      }\n    }\n\n    for (let i = 0;i<this.denominator;i++) {\n      console.log(\"balls\")\n      let s = new PIXI.Sprite.from(A)\n      s.on('pointerdown',spritePointerDown)\n      s.on('pointerup',spritePointerUp)\n      s.on('pointermove',spritePointerMoved)\n      s.interactive = true\n      s.active = false\n      s.x = i*LINE_WIDTH/this.denominator\n      s.y = WINDOW_HEIGHT/2 - 50\n      this.sprites.push(s)\n      this.container.addChild(s)\n    }\n      \n\n    //  Attached methods\n    this.container.on('pointerdown',containerPointerDown)\n    this.container.on('pointerup',containerPointerUp)\n    this.container.on('pointermove',containerPointerMove)\n\n    // Add children\n    app.stage.addChild(this.container)\n    this.width = this.container.width\n  \n\n    function spritePointerDown(event){\n      this.touched = true\n      this.dragged = false\n    }\n\n    function spritePointerMoved(event) {\n\n      if (this.touched){\n        console.log(\"pointermove\")\n        this.dragged = true\n      }\n    }\n\n    function spritePointerUp(event){\n         this.touched = false\n         console.log('this.draggeed',this.dragged)\n     if (!this.dragged) {\n        this.dragged = false\n        this.active = !this.active\n        this.alpha = 0.2\n        this.texture = this.active ? B : A\n        TweenLite.to(this,0.4,{alpha: 1})\n       }\n    }\n\n \n   function containerPointerDown(event) {\n      this.data = event.data\n      this.startWidth = this.width\n      this.dragStartY = event.data.global.y\n      this.touching = true\n      touching = true\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n    }\n\n \n   function containerPointerUp(event) {\n      this.touching = false\n      touching = false\n    }\n\n    function containerPointerMove(event) {\n      if (this.touching){\n        const newPosition = this.data.getLocalPosition(this.parent);\n        this.y = event.data.global.y + this.deltaTouch.y\n        this.dragged = true\n      }\n    }\n\n\n    this.draw(width)\n\n    this.leftWhisker = new PIXI.Graphics()\n    this.leftWhisker.lineStyle(3,0x000000)\n    console.log(\"container\",container.x,container,y)\n    this.leftWhisker.moveTo(this.container.x,this.container.y)\n    this.leftWhisker.lineTo(0,100)\n    let lw = app.renderer.generateTexture(this.leftWhisker)\n    this.container.addChild(this.leftWhisker)\n\n    this.rightWhisker = new PIXI.Graphics()\n\n\n  }\n\n  function globalPointerUp(){\n    // Ughhh...\n    FirstRow.container.touching = false\n    pinA.sprite.dragging = false\n  \n    //pinA.sprite.round()\n    //pinB.sprite.round()\n    //stripA.draw()\n    //stripB.draw()\n    //stripALabel.draw()\n    //stripBLabel.draw()\n  }\n  \n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n    app.renderer.resize(WINDOW_WIDTH,WINDOW_HEIGHT)\n    numberLine.draw()\n    backGround.draw()\n    pinA.draw()\n    incButton.draw()\n    decButton.draw()\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n    WINDOW_WIDTH = frame.width\n    WINDOW_HEIGHT = frame.height\n    H_W_RATIO = frame.height/frame.width\n    LANDSCAPE = H_W_RATIO < 3/4\n    ARENA_WIDTH = LANDSCAPE ? 4/3*frame.height : frame.width\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3/4*frame.width\n    LINE_WIDTH = LINE_PERCENTAGE*WINDOW_WIDTH\n    LINE_THICKNESS = LINE_WIDTH/200\n    TICK_THICKNESS = LINE_THICKNESS/2\n    MAJOR_TICK_HEIGHT = LINE_WIDTH/20\n    MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT/2\n    DX = LINE_WIDTH/state.lineMax\n    LINE_START = WINDOW_WIDTH/2 - LINE_WIDTH/2\n    STRIP_HEIGHT = LINE_WIDTH/12\n  }\n\n  // Loading Script\n  function load(){\n    let features = {'strips': true}\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n\n    backGround = new makeBackground()\n    numberLine = new makeNumberLine()\n    pinA = new makePin(0)\n    //pinB = new makePin(1)\n    //stripA = new makeStrip(0)\n    //stripB = new makeStrip(1)\n    //stripALabel = makeStripLabel(0)\n    //stripBLabel = makeStripLabel(1)\n    incButton = makeArrowButton(5)\n    decButton = makeArrowButton(-5)\n    //stripALabel.draw()\n    //stripBLabel.draw()\n    incButton.draw()\n    decButton.draw()\n    FirstRow = new Row(3,4,pinA.sprite.x - LINE_START)\n  }\n\n  // Call load script\n  load()\n  // Not sure where else to put this.\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n};\n"]},"metadata":{},"sourceType":"module"}