{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const LINE_PERCENTAGE = 0.8;\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN);\n  const MEASURE_PIN_TEXTURE = new PIXI.Texture.from(ASSETS.MEASURE_PIN); // Global Vars \n\n  let features;\n  let FirstRow;\n  let Background;\n  const labels = {\n    1: \"One Whole\",\n    2: \"One Half\",\n    3: \"One Third\",\n    4: \"Fourth\",\n    5: \"5th\",\n    6: \"6th\",\n    7: \"7th\",\n    8: \"8th\",\n    9: \"9th\",\n    10: \"10th\",\n    11: \"11th\",\n    12: \"12th\"\n  }; // Layout Parameters\n\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let BAR_HEIGHT = WINDOW_HEIGHT / 15;\n  let BAR_WIDTH = WINDOW_WIDTH * 0.8;\n  let ANCHORS = [];\n\n  function makeBackground() {\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH;\n    this.sprite.height = WINDOW_HEIGHT;\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup', globalPointerUp);\n    this.sprite.interactive = true;\n    app.stage.addChild(this.sprite);\n\n    this.draw = () => {\n      this.sprite.width = WINDOW_WIDTH;\n      this.sprite.height = WINDOW_HEIGHT;\n    };\n  }\n\n  class Row extends PIXI.Container {\n    constructor(num, den, width, ID) {\n      super(); // This\n\n      this.incDenonimator = inc => {\n        this.frameGraphics.clear();\n        this.frameGraphics.lineStyle(3, 0x000000);\n        this.frameGraphics.drawRoundedRect(0, 0, this.width - 3, BAR_HEIGHT, 1);\n        const frameTexture = app.renderer.generateTexture(this.frameGraphics); // New sprite starts as frame and then gets animated.\n\n        let s = new PIXI.Sprite(frameTexture);\n        this.addChild(s);\n        s.x = 0;\n\n        const onUpdate = () => {\n          this.draw();\n        };\n\n        if (inc > 0) {\n          const onComplete = () => {\n            s.on('pointerdown', this.spritePointerDown);\n            s.on('pointerup', this.spritePointerUp);\n            s.on('pointermove', this.spritePointerMoved);\n            s.interactive = true;\n            s.active = false;\n            this.sprites.push(s);\n          };\n\n          TweenMax.to(this, 0.25, {\n            denominator: this.denominator + 1,\n            onUpdate: onUpdate,\n            onComplete: onComplete\n          });\n        } else if (inc < 0) {\n          let removeme = this.sprites.pop();\n          this.removeChild(removeme);\n\n          const onComplete = () => {\n            this.removeChild(s);\n            this.sprites.forEach(s => {\n              s.label.x = this.width / this.denominator / 2;\n              s.label.text = labels[this.denominator];\n            });\n          };\n\n          TweenMax.to(this, 0.25, {\n            denominator: this.denominator - 1,\n            onUpdate: onUpdate,\n            onComplete: onComplete\n          });\n        }\n      };\n\n      this.interactive = true; // Default values\n\n      this.numerator = num;\n      this.denominator = den;\n      this.trueWidth = width;\n      this.id = ID;\n      this.sprites = [];\n      this.blockWidth = width / this.denominator; // Init Graphics A\n\n      this.graphicsA = new PIXI.Graphics();\n      this.graphicsA.lineStyle(3, 0x000000);\n      this.graphicsA.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureA = app.renderer.generateTexture(this.graphicsA); // Init Graphics B\n\n      this.graphicsB = new PIXI.Graphics();\n      this.graphicsB.beginFill(0xff4772);\n      this.graphicsB.lineStyle(3, 0x000000);\n      this.graphicsB.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureB = app.renderer.generateTexture(this.graphicsB); // Dummy frame for when animating between different fractional parts.\n\n      this.frameGraphics = new PIXI.Graphics(); // Generate Row\n\n      for (let i = 0; i < this.denominator; i++) {\n        let label = new PIXI.Text();\n        label.text = labels[this.denominator];\n        label.anchor.set(0.5);\n        label.x = this.blockWidth / 2;\n        label.y = BAR_HEIGHT / 2;\n        let s = new PIXI.Sprite.from(this.textureA);\n        s.on('pointerdown', this.spritePointerDown);\n        s.on('pointerup', this.spritePointerUp);\n        s.on('pointermove', this.spritePointerMoved);\n        s.interactive = true;\n        s.active = false;\n        s.x = i * BAR_WIDTH / this.denominator;\n        s.y = 0;\n        s.addChild(label);\n        s.label = label;\n        this.sprites.push(s);\n        this.addChild(s);\n      } //  Attached methods\n\n\n      this.on('pointerdown', this.pointerDown);\n      this.on('pointerup', this.pointerUp);\n      this.on('pointermove', this.pointerMove);\n    }\n\n    draw(width) {\n      if (width) {\n        this.trueWidth = width;\n      }\n\n      console.log(this);\n      this.blockWidth = this.trueWidth / this.denominator;\n      this.graphicsA.clear();\n      this.graphicsA.lineStyle(3, 0x000000);\n      this.graphicsA.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureA = app.renderer.generateTexture(this.graphicsA);\n      this.graphicsB.clear();\n      this.graphicsB.beginFill(0xff4772);\n      this.graphicsB.lineStyle(3, 0x000000);\n      this.graphicsB.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureB = app.renderer.generateTexture(this.graphicsB);\n\n      for (let i = 0; i < this.sprites.length; i++) {\n        if (this.sprites[i].active) {\n          this.sprites[i].texture = this.textureA;\n        } else {\n          this.sprites[i].texture = this.textureB;\n        }\n\n        this.sprites[i].x = this.blockWidth * i;\n        this.sprites[i].y = 0;\n      }\n    }\n\n    spritePointerDown(event) {\n      this.touched = true;\n      this.dragged = false;\n    }\n\n    spritePointerMoved(event) {\n      if (this.touched) {\n        console.log(\"pointermove\");\n        this.dragged = true;\n      }\n    }\n\n    spritePointerUp(event) {\n      this.touched = false;\n      console.log('this.draggeed', this.dragged);\n\n      if (!this.dragged) {\n        this.dragged = false;\n        this.active = !this.active;\n        this.alpha = 0.2;\n        this.texture = this.active ? this.parent.textureB : this.parent.textureA;\n        TweenLite.to(this, 0.4, {\n          alpha: 1\n        });\n      }\n    }\n\n    pointerDown(event) {\n      app.stage.addChild(this);\n      this.data = event.data;\n      this.startWidth = this.width;\n      this.dragStartY = event.data.global.y;\n      this.touching = true;\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      };\n    }\n\n    pointerUp(event) {\n      globalPointerUp();\n      this.touching = false;\n    }\n\n    pointerMove(event) {\n      if (this.touching) {\n        this.y = event.data.global.y + this.deltaTouch.y;\n        this.dragged = true;\n      }\n    }\n\n  }\n\n  function globalPointerUp() {\n    console.log(\"globalPointerup\");\n  } // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame); //Row.draw()\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n  } // Loading Script\n\n\n  function load() {\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    Background = new makeBackground();\n\n    for (let i = 0; i < 12; i++) {\n      let newRow = new Row(0, 4, BAR_WIDTH, 0);\n      newRow.y = i * BAR_HEIGHT;\n      app.stage.addChild(newRow);\n    }\n  } // Functions attached to app: (need to be destroyed)\n\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n  load();\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/newfractionstacks.js"],"names":["PIXI","CONST","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","ASSETS","init","app","setup","BLUE_TEXTURE","Texture","from","BLUE_CIRCLE","LINE_PERCENTAGE","PIN_TEXTURE","SHARP_PIN","MEASURE_PIN_TEXTURE","MEASURE_PIN","features","FirstRow","Background","labels","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","BAR_HEIGHT","BAR_WIDTH","ANCHORS","makeBackground","sprite","Sprite","BLUE_GRADIENT","x","y","on","globalPointerUp","interactive","stage","addChild","draw","Row","Container","constructor","num","den","ID","incDenonimator","inc","frameGraphics","clear","lineStyle","drawRoundedRect","frameTexture","renderer","generateTexture","s","onUpdate","onComplete","spritePointerDown","spritePointerUp","spritePointerMoved","active","sprites","push","to","denominator","removeme","pop","removeChild","forEach","label","text","numerator","trueWidth","id","blockWidth","graphicsA","Graphics","textureA","graphicsB","beginFill","textureB","i","Text","anchor","set","pointerDown","pointerUp","pointerMove","console","log","length","texture","event","touched","dragged","alpha","parent","data","startWidth","dragStartY","global","touching","deltaTouch","resize","newFrame","flex","updateLayoutParams","frame","load","props","newRow","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nconst ASSETS = CONST.ASSETS\n\nexport const init = (app, setup) => {\n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const LINE_PERCENTAGE = 0.8\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN)\n  const MEASURE_PIN_TEXTURE = new PIXI.Texture.from(ASSETS.MEASURE_PIN)\n\n// Global Vars \n  let features;\n  let FirstRow;\n  let Background\n\n  const labels = {\n    1: \"One Whole\",\n    2: \"One Half\",\n    3: \"One Third\",\n    4: \"Fourth\",\n    5: \"5th\",\n    6: \"6th\",\n    7: \"7th\",\n    8: \"8th\",\n    9: \"9th\",\n    10: \"10th\",\n    11: \"11th\",\n    12: \"12th\"\n  };\n\n\n  // Layout Parameters\n  let WINDOW_WIDTH = setup.width\n  let WINDOW_HEIGHT = setup.height\n  let BAR_HEIGHT = WINDOW_HEIGHT/15\n  let BAR_WIDTH = WINDOW_WIDTH*0.8\n  let ANCHORS = []\n\n\n\n  function makeBackground(){\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH\n    this.sprite.height = WINDOW_HEIGHT\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup',globalPointerUp)\n    this.sprite.interactive = true\n\n    app.stage.addChild(this.sprite)\n\n    this.draw = () => {\n        this.sprite.width = WINDOW_WIDTH\n        this.sprite.height = WINDOW_HEIGHT\n    }\n  }\n\n  class Row extends PIXI.Container {\n\n    constructor(num,den,width,ID) {\n      super()\n\n      // This\n      this.interactive = true\n\n        // Default values\n      this.numerator = num\n      this.denominator = den\n      this.trueWidth = width\n      this.id = ID\n      this.sprites = []\n      this.blockWidth = width / this.denominator\n\n\n      // Init Graphics A\n      this.graphicsA = new PIXI.Graphics()\n      this.graphicsA.lineStyle(3,0x000000) \n      this.graphicsA.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureA = app.renderer.generateTexture(this.graphicsA)\n\n      // Init Graphics B\n      this.graphicsB  = new PIXI.Graphics()\n      this.graphicsB.beginFill(0xff4772)\n      this.graphicsB.lineStyle(3,0x000000) \n      this.graphicsB.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureB = app.renderer.generateTexture(this.graphicsB)\n\n      // Dummy frame for when animating between different fractional parts.\n      this.frameGraphics = new PIXI.Graphics()    \n  \n      // Generate Row\n      for (let i = 0;i<this.denominator;i++) {\n        let label = new PIXI.Text()\n        label.text = labels[this.denominator]\n        label.anchor.set(0.5)\n        label.x = this.blockWidth/2\n        label.y = BAR_HEIGHT/2\n        let s = new PIXI.Sprite.from(this.textureA)\n        s.on('pointerdown',this.spritePointerDown)\n        s.on('pointerup',this.spritePointerUp)\n        s.on('pointermove',this.spritePointerMoved)\n        s.interactive = true\n        s.active = false\n        s.x = i*BAR_WIDTH/this.denominator\n        s.y = 0\n        s.addChild(label)\n        s.label = label\n        this.sprites.push(s)\n        this.addChild(s)\n      }\n            //  Attached methods\n      this.on('pointerdown',this.pointerDown)\n      this.on('pointerup',this.pointerUp)\n      this.on('pointermove',this.pointerMove)\n\n    }\n  \n\n    incDenonimator = (inc) => {\n      this.frameGraphics.clear()\n      this.frameGraphics.lineStyle(3,0x000000) \n      this.frameGraphics.drawRoundedRect(0,0,this.width-3,BAR_HEIGHT,1)\n      const frameTexture = app.renderer.generateTexture(this.frameGraphics)\n      \n      // New sprite starts as frame and then gets animated.\n      let s = new PIXI.Sprite(frameTexture)\n      this.addChild(s)\n      s.x  = 0\n      const onUpdate = ()=>{this.draw()}\n      if (inc > 0){\n        const onComplete = ()=>{\n          s.on('pointerdown',this.spritePointerDown)\n          s.on('pointerup',this.spritePointerUp)\n          s.on('pointermove',this.spritePointerMoved)\n          s.interactive = true\n          s.active = false\n          this.sprites.push(s)\n        }\n        TweenMax.to(this, 0.25, {denominator: this.denominator+1,onUpdate: onUpdate,onComplete: onComplete})\n      } else if (inc < 0) {\n        let removeme  = this.sprites.pop()\n        this.removeChild(removeme)\n        const onComplete = ()=>{\n          this.removeChild(s)\n          this.sprites.forEach(s=>{\n            s.label.x = this.width/this.denominator/2\n            s.label.text = labels[this.denominator]})\n        }\n        TweenMax.to(this, 0.25, {denominator: this.denominator-1,onUpdate: onUpdate,onComplete: onComplete})\n      }\n    }\n\n    draw(width) {\n\n      if (width) {\n        this.trueWidth = width\n      }\n\n      console.log(this)\n\n      this.blockWidth = (this.trueWidth)/this.denominator\n\n      this.graphicsA.clear()\n      this.graphicsA.lineStyle(3,0x000000) \n      this.graphicsA.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureA = app.renderer.generateTexture(this.graphicsA)\n\n      this.graphicsB.clear()\n      this.graphicsB.beginFill(0xff4772)\n      this.graphicsB.lineStyle(3,0x000000) \n      this.graphicsB.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureB = app.renderer.generateTexture(this.graphicsB)\n\n      for (let i = 0;i<this.sprites.length;i++){\n        if (this.sprites[i].active){\n          this.sprites[i].texture = this.textureA\n        } else {\n          this.sprites[i].texture = this.textureB\n        }\n\n        this.sprites[i].x = this.blockWidth*i\n        this.sprites[i].y = 0\n      }\n    }\n\n    spritePointerDown(event){\n      this.touched = true\n      this.dragged = false\n    }\n\n    spritePointerMoved(event) {\n\n      if (this.touched){\n        console.log(\"pointermove\")\n        this.dragged = true\n      }\n    }\n\n    spritePointerUp(event){\n         this.touched = false\n         console.log('this.draggeed',this.dragged)\n     if (!this.dragged) {\n        this.dragged = false\n        this.active = !this.active\n        this.alpha = 0.2\n        this.texture = this.active ? this.parent.textureB : this.parent.textureA\n        TweenLite.to(this,0.4,{alpha: 1})\n       }\n    }\n\n \n   pointerDown(event) {\n      app.stage.addChild(this)\n      this.data = event.data\n      this.startWidth = this.width\n      this.dragStartY = event.data.global.y\n      this.touching = true\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n    }\n \n   pointerUp(event) {\n      globalPointerUp()\n      this.touching = false\n    }\n\n    pointerMove(event) {\n      if (this.touching){\n        this.y = event.data.global.y + this.deltaTouch.y\n        this.dragged = true\n      }\n    }\n  }\n\n\n\n  function globalPointerUp(){\n    console.log(\"globalPointerup\")\n  }\n  \n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n    //Row.draw()\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n  }\n\n  // Loading Script\n  function load(){\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n    Background = new makeBackground()\n\n\n    for (let i = 0;i<12;i++){\n      let newRow = new Row(0,4,BAR_WIDTH,0)\n      newRow.y = i*BAR_HEIGHT\n      app.stage.addChild(newRow)\n    }\n  }\n\n  // Functions attached to app: (need to be destroyed)\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n\n  load()\n};\n"]},"metadata":{},"sourceType":"module"}