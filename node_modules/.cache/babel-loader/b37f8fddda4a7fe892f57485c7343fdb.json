{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png';\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { Fraction, Draggable } from \"./api.js\";\nimport { isObject } from \"util\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Layout Parameters\n  const LINE_PERCENTAGE = 0.8;\n  let WINDOW_WIDTH = setup.width;\n  let BAR_HEIGHT = setup.height / 15;\n  let WINDOW_HEIGHT = setup.height;\n  let H_W_RATIO = setup.height / setup.width;\n  let LANDSCAPE = H_W_RATIO < 3 / 4;\n  let ARENA_WIDTH = LANDSCAPE ? 4 / 3 * setup.height : setup.width;\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3 / 4 * setup.width;\n  let SQUARE_DIM = ARENA_HEIGHT * 0.6; // Constants\n\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.GLASS_CIRCLE);\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.GLASS_CIRCLE);\n\n  function makeBackground() {\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH;\n    this.sprite.height = WINDOW_HEIGHT;\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup', globalPointerUp);\n    this.sprite.interactive = true;\n    app.stage.addChild(this.sprite);\n\n    this.draw = () => {\n      this.sprite.width = WINDOW_WIDTH;\n      this.sprite.height = WINDOW_HEIGHT;\n    };\n  }\n\n  let Stencil = new PIXI.Graphics();\n  let Nodes = [];\n  let CurrenPolygon = [];\n\n  class Node extends PIXI.Sprite {\n    constructor() {\n      super();\n      this.on('pointerdown', this.pointerDown);\n      this.on('pointerup', this.pointerUp);\n      this.on('pointerupoutside', this.generatePolygon);\n      this.anchor.set(0.5);\n      this.activated = false;\n      this.texture = PIN_TEXTURE;\n      this.interactive = true;\n    }\n\n    pointerDown() {\n      if (this.first) {\n        this.first = false;\n        this.generatePolygon();\n      } else {\n        this.activated = true;\n\n        if (CurrenPolygon.length == 0) {\n          this.first = true;\n        }\n\n        CurrenPolygon.push([this.x, this.y]);\n        this.alpha = 0.5;\n        this.scale.x = this.scale.x * 1.2;\n        this.scale.y = this.scale.y * 1.2;\n      }\n    }\n\n    pointerUp() {}\n\n    generatePolygon() {\n      Nodes.forEach(n => {\n        if (n.activated) {\n          n.scale.x = n.scale.x / 1.2;\n          n.scale.y = n.scale.y / 1.2;\n          n.alpha = 1;\n          n.activated = false;\n        }\n      });\n      let xS = CurrenPolygon.map(p => p[0]);\n      let yS = CurrenPolygon.map(p => p[1]);\n      let minX = Math.min(...xS);\n      let minY = Math.min(...yS);\n      let flatPolygon = [];\n      CurrenPolygon.forEach(p => {\n        flatPolygon.push(p[0] - minX);\n        flatPolygon.push(p[1] - minY);\n      });\n      var graphics = new PIXI.Graphics();\n      graphics.beginFill(0xff3b55);\n      graphics.drawPolygon(flatPolygon);\n      graphics.endFill();\n      app.stage.addChild(graphics);\n      app.stage.removeChild(graphics);\n      console.log(\"setat\", CurrenPolygon);\n      let d = new Draggable();\n      d.hitArea = new PIXI.Polygon(flatPolygon);\n      let t = app.renderer.generateTexture(graphics);\n      d.texture = t;\n      d.x = minX;\n      d.y = minY;\n      app.stage.addChild(d);\n      CurrenPolygon = [];\n    }\n\n  }\n\n  function set(a, b) {\n    let dx = SQUARE_DIM / (a - 1);\n    let dy = SQUARE_DIM / (b - 1);\n    let dim = SQUARE_DIM / 15;\n\n    for (let i = 0; i < a; i++) {\n      for (let j = 0; j < a; j++) {\n        let n = new Node();\n        Nodes.push(n);\n        n.x = WINDOW_WIDTH / 2 - SQUARE_DIM / 2 + i * dx;\n        n.y = WINDOW_HEIGHT / 2 - SQUARE_DIM / 2 + j * dy;\n        n.w = dx / 10;\n        n.height = dim;\n        n.width = dim;\n        app.stage.addChild(n);\n      }\n    }\n  } // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame);\n    app.renderer.resize(WINDOW_WIDTH, WINDOW_HEIGHT);\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n\n    WINDOW_WIDTH = frame.width;\n    WINDOW_HEIGHT = frame.height;\n    H_W_RATIO = frame.height / frame.width;\n    LANDSCAPE = H_W_RATIO < 3 / 4;\n    ARENA_WIDTH = LANDSCAPE ? 4 / 3 * frame.height : frame.width;\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3 / 4 * frame.width;\n  } // Loading Script\n\n\n  function load() {\n    let features = {};\n\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    set(4, 4);\n    app.stage.addChild(Stencil);\n  } // Call load script\n\n\n  load(); // Not sure where else to put this.\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/gridnodes.js"],"names":["PIXI","blueGradient","CONST","QuestionMark","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","Fraction","Draggable","isObject","ASSETS","init","app","setup","LINE_PERCENTAGE","WINDOW_WIDTH","width","BAR_HEIGHT","height","WINDOW_HEIGHT","H_W_RATIO","LANDSCAPE","ARENA_WIDTH","ARENA_HEIGHT","SQUARE_DIM","BLUE_TEXTURE","Texture","from","GLASS_CIRCLE","PIN_TEXTURE","makeBackground","sprite","Sprite","BLUE_GRADIENT","x","y","on","globalPointerUp","interactive","stage","addChild","draw","Stencil","Graphics","Nodes","CurrenPolygon","Node","constructor","pointerDown","pointerUp","generatePolygon","anchor","set","activated","texture","first","length","push","alpha","scale","forEach","n","xS","map","p","yS","minX","Math","min","minY","flatPolygon","graphics","beginFill","drawPolygon","endFill","removeChild","console","log","d","hitArea","Polygon","t","renderer","generateTexture","a","b","dx","dy","dim","i","j","w","resize","newFrame","flex","updateLayoutParams","frame","load","features","props","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png'\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport {Fraction, Draggable} from \"./api.js\"\nimport { isObject } from \"util\";\nconst ASSETS = CONST.ASSETS\n\n\nexport const init = (app, setup) => {\n \n\n  // Layout Parameters\n  const LINE_PERCENTAGE = 0.8\n  let WINDOW_WIDTH = setup.width\n  let BAR_HEIGHT = setup.height/15\n  let WINDOW_HEIGHT = setup.height\n  let H_W_RATIO = setup.height/setup.width\n  let LANDSCAPE = H_W_RATIO < 3/4\n  let ARENA_WIDTH = LANDSCAPE ? 4/3*setup.height : setup.width\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3/4*setup.width\n  let SQUARE_DIM = ARENA_HEIGHT*0.6\n\n\n    // Constants\n    const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.GLASS_CIRCLE)\n    const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.GLASS_CIRCLE)\n\n  function makeBackground(){\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH\n    this.sprite.height = WINDOW_HEIGHT\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup',globalPointerUp)\n    this.sprite.interactive = true\n\n    app.stage.addChild(this.sprite)\n\n    this.draw = () => {\n        this.sprite.width = WINDOW_WIDTH\n        this.sprite.height = WINDOW_HEIGHT\n    }\n  }\n\n  \n  let Stencil = new PIXI.Graphics()\n  let Nodes = []\n  let CurrenPolygon = []\n\n  class Node extends PIXI.Sprite {\n    constructor(){\n      super()\n      this.on('pointerdown',this.pointerDown)\n      this.on('pointerup',this.pointerUp)\n      this.on('pointerupoutside',this.generatePolygon)\n      this.anchor.set(0.5)\n      this.activated = false\n      this.texture = PIN_TEXTURE\n      this.interactive = true\n    }\n\n    pointerDown(){\n      if (this.first){\n        this.first = false\n        this.generatePolygon()\n      } else {\n        this.activated = true\n        if (CurrenPolygon.length == 0){\n          this.first = true\n        }\n        CurrenPolygon.push([this.x,this.y])\n        this.alpha = 0.5\n        this.scale.x = this.scale.x*1.2\n        this.scale.y = this.scale.y*1.2\n      }\n    }\n\n    pointerUp(){\n      \n    }\n\n    generatePolygon(){\n      Nodes.forEach(n=>{\n        if (n.activated){\n          n.scale.x = n.scale.x/1.2\n          n.scale.y = n.scale.y/1.2\n          n.alpha = 1\n          n.activated = false\n        }\n      })\n      let xS = CurrenPolygon.map(p=> p[0])\n      let yS = CurrenPolygon.map(p=> p[1])\n      let minX = Math.min(...xS)\n      let minY = Math.min(...yS)\n\n      let flatPolygon = []\n      CurrenPolygon.forEach(p=>{\n        flatPolygon.push(p[0]-minX)\n        flatPolygon.push(p[1]-minY)\n      })\n\n      var graphics = new PIXI.Graphics();\n    \n      graphics.beginFill(0xff3b55);\n      graphics.drawPolygon(flatPolygon);\n      graphics.endFill();\n      app.stage.addChild(graphics)\n  \n\n      app.stage.removeChild(graphics)\n      console.log(\"setat\",CurrenPolygon)\n      let d = new Draggable()\n      d.hitArea = new PIXI.Polygon(flatPolygon)\n      let t = app.renderer.generateTexture(graphics)\n      d.texture = t\n      d.x = minX\n      d.y = minY\n      app.stage.addChild(d)\n      CurrenPolygon = []\n    }\n  }\n\n  function set(a,b){\n    let dx = SQUARE_DIM/(a-1)\n    let dy = SQUARE_DIM/(b-1)\n    let dim = SQUARE_DIM/15\n    for (let i=0;i<a;i++){\n      for (let j=0;j<a;j++){\n        let n = new Node()\n        Nodes.push(n)\n        n.x = WINDOW_WIDTH/2 - SQUARE_DIM/2 + i*dx \n        n.y = WINDOW_HEIGHT/2 - SQUARE_DIM/2+j*dy\n        n.w = dx/10\n        n.height = dim\n        n.width = dim\n        app.stage.addChild(n)\n      }\n    }\n  }\n\n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n    app.renderer.resize(WINDOW_WIDTH,WINDOW_HEIGHT)\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n    WINDOW_WIDTH = frame.width\n    WINDOW_HEIGHT = frame.height\n    H_W_RATIO = frame.height/frame.width\n    LANDSCAPE = H_W_RATIO < 3/4\n    ARENA_WIDTH = LANDSCAPE ? 4/3*frame.height : frame.width\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3/4*frame.width\n  }\n\n  // Loading Script\n  function load(){\n    let features = {}\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n    set(4,4)\n\n    app.stage.addChild(Stencil)\n\n  }\n\n  // Call load script\n  load()\n  // Not sure where else to put this.\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n};\n"]},"metadata":{},"sourceType":"module"}