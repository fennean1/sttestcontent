{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const LINE_PERCENTAGE = 0.8;\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN);\n  const MEASURE_PIN_TEXTURE = new PIXI.Texture.from(ASSETS.MEASURE_PIN); // Global Vars \n\n  let features;\n  let FirstRow;\n  const labels = {\n    1: \"One Whole\",\n    2: \"One Half\",\n    3: \"One Third\",\n    4: \"Fourth\",\n    5: \"5th\",\n    6: \"6th\",\n    7: \"7th\",\n    8: \"8th\",\n    9: \"9th\",\n    10: \"10th\",\n    11: \"11th\",\n    12: \"12th\"\n  }; // Layout Parameters\n\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let BAR_HEIGHT = WINDOW_HEIGHT / 15;\n  let BAR_WIDTH = WINDOW_WIDTH * 0.8;\n\n  class Row extends PIXI.Container {\n    constructor(num, den, width, ID) {\n      super(); // This\n\n      this.incDenonimator = inc => {\n        this.frameGraphics.clear();\n        this.frameGraphics.lineStyle(3, 0x000000);\n        this.frameGraphics.drawRoundedRect(0, 0, this.width, BAR_HEIGHT, 1);\n        let R = app.renderer.generateTexture(this.frameGraphics);\n        let s = new PIXI.Sprite();\n        this.addChild(s);\n        s.texture = R;\n        s.x = 0;\n\n        if (inc > 0) {\n          const onComplete = () => {\n            s.on('pointerdown', this.spritePointerDown);\n            s.on('pointerup', this.spritePointerUp);\n            s.on('pointermove', this.spritePointerMoved);\n            s.interactive = true;\n            s.active = false;\n            this.sprites.push(s);\n            this.draw();\n          };\n\n          TweenMax.to(this, 0.25, {\n            denominator: this.denominator + 1,\n            onUpdate: this.draw,\n            onComplete: onComplete\n          });\n        } else if (inc < 0) {\n          let removeme = this.sprites.pop();\n          this.container.removeChild(removeme);\n\n          const onComplete = () => {\n            this.draw();\n            this.container.removeChild(s);\n          };\n\n          TweenMax.to(this, 0.25, {\n            denominator: this.denominator - 1,\n            onUpdate: this.draw,\n            onComplete: onComplete\n          });\n        }\n      };\n\n      this.interactive = true; // Default values\n\n      this.numerator = num;\n      this.denominator = den;\n      this.width = width;\n      this.id = ID;\n      this.sprites = [];\n      this.blockWidth = width / this.denominator; // Init Graphics A\n\n      this.graphicsA = new PIXI.Graphics();\n      this.graphicsA.lineStyle(3, 0x000000);\n      this.graphicsA.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureA = app.renderer.generateTexture(this.graphicsA); // Init Graphics B\n\n      this.graphicsB = new PIXI.Graphics();\n      this.graphicsB.beginFill(0xff4772);\n      this.graphicsB.lineStyle(3, 0x000000);\n      this.graphicsB.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureB = app.renderer.generateTexture(this.graphicsB); // Dummy frame for when animating between different fractional parts.\n\n      this.frameGraphics = new PIXI.Graphics(); // Generate Row\n\n      for (let i = 0; i < this.denominator; i++) {\n        let label = new PIXI.Text();\n        label.text = labels[this.denominator];\n        label.anchor.set(0.5);\n        label.x = this.blockWidth / 2;\n        label.y = BAR_HEIGHT / 2;\n        let s = new PIXI.Sprite.from(this.textureA);\n        s.on('pointerdown', this.spritePointerDown);\n        s.on('pointerup', this.spritePointerUp);\n        s.on('pointermove', this.spritePointerMoved);\n        s.interactive = true;\n        s.active = false;\n        s.x = i * BAR_WIDTH / this.denominator;\n        s.y = WINDOW_HEIGHT / 2 - BAR_HEIGHT;\n        s.addChild(label);\n        this.sprites.push(s);\n        this.addChild(s);\n      } //  Attached methods\n\n\n      this.on('pointerdown', this.pointerDown);\n      this.on('pointerup', this.pointerUp);\n      this.on('pointermove', this.pointerMove);\n    }\n\n    draw(width) {\n      if (width) {\n        this.width = width;\n      }\n\n      console.log(this);\n      this.blockWidth = this.width / this.denominator;\n      this.graphicsA.clear();\n      this.graphicsA.lineStyle(3, 0x000000);\n      this.graphicsA.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureA = app.renderer.generateTexture(this.graphicsA);\n      this.graphicsB.clear();\n      this.graphicsB.beginFill(0xff4772);\n      this.graphicsB.lineStyle(3, 0x000000);\n      this.graphicsB.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureB = app.renderer.generateTexture(this.graphicsB);\n\n      for (let i = 0; i < this.sprites.length; i++) {\n        if (this.sprites[i].active) {\n          this.sprites[i].texture = this.textureA;\n        } else {\n          this.sprites[i].texture = this.textureB;\n        }\n\n        this.sprites[i].x = this.blockWidth * i;\n        this.sprites[i].y = 0;\n      }\n    }\n\n    spritePointerDown(event) {\n      this.touched = true;\n      this.dragged = false;\n    }\n\n    spritePointerMoved(event) {\n      if (this.touched) {\n        console.log(\"pointermove\");\n        this.dragged = true;\n      }\n    }\n\n    spritePointerUp(event) {\n      this.touched = false;\n      console.log('this.draggeed', this.dragged);\n\n      if (!this.dragged) {\n        this.dragged = false;\n        this.active = !this.active;\n        this.alpha = 0.2;\n        this.texture = this.active ? this.parent.textureB : this.parent.textureA;\n        TweenLite.to(this, 0.4, {\n          alpha: 1\n        });\n      }\n    }\n\n    pointerDown(event) {\n      app.stage.addChild(this);\n      this.data = event.data;\n      this.startWidth = this.width;\n      this.dragStartY = event.data.global.y;\n      this.touching = true;\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      };\n    }\n\n    pointerUp(event) {\n      globalPointerUp();\n      this.touching = false;\n    }\n\n    pointerMove(event) {\n      if (this.touching) {\n        this.y = event.data.global.y + this.deltaTouch.y;\n        this.dragged = true;\n      }\n    }\n\n  }\n\n  app.stage.interactive = true;\n  app.stage.on('pointerup', globalPointerUp);\n\n  function globalPointerUp() {\n    console.log(\"globalPointerup\");\n    FirstRow.incDenonimator(1);\n  } // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame); //Row.draw()\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n  } // Loading Script\n\n\n  function load() {\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    FirstRow = new Row(0, 4, BAR_WIDTH, 0);\n    app.stage.addChild(FirstRow);\n  } // Functions attached to app: (need to be destroyed)\n\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n  load();\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/newfractionstacks.js"],"names":["PIXI","CONST","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","ASSETS","init","app","setup","BLUE_TEXTURE","Texture","from","BLUE_CIRCLE","LINE_PERCENTAGE","PIN_TEXTURE","SHARP_PIN","MEASURE_PIN_TEXTURE","MEASURE_PIN","features","FirstRow","labels","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","BAR_HEIGHT","BAR_WIDTH","Row","Container","constructor","num","den","ID","incDenonimator","inc","frameGraphics","clear","lineStyle","drawRoundedRect","R","renderer","generateTexture","s","Sprite","addChild","texture","x","onComplete","on","spritePointerDown","spritePointerUp","spritePointerMoved","interactive","active","sprites","push","draw","to","denominator","onUpdate","removeme","pop","container","removeChild","numerator","id","blockWidth","graphicsA","Graphics","textureA","graphicsB","beginFill","textureB","i","label","Text","text","anchor","set","y","pointerDown","pointerUp","pointerMove","console","log","length","event","touched","dragged","alpha","parent","stage","data","startWidth","dragStartY","global","touching","deltaTouch","globalPointerUp","resize","newFrame","flex","updateLayoutParams","frame","load","props","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nconst ASSETS = CONST.ASSETS\n\nexport const init = (app, setup) => {\n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const LINE_PERCENTAGE = 0.8\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN)\n  const MEASURE_PIN_TEXTURE = new PIXI.Texture.from(ASSETS.MEASURE_PIN)\n\n// Global Vars \n  let features;\n  let FirstRow;\n\n  const labels = {\n    1: \"One Whole\",\n    2: \"One Half\",\n    3: \"One Third\",\n    4: \"Fourth\",\n    5: \"5th\",\n    6: \"6th\",\n    7: \"7th\",\n    8: \"8th\",\n    9: \"9th\",\n    10: \"10th\",\n    11: \"11th\",\n    12: \"12th\"\n  };\n\n\n  // Layout Parameters\n  let WINDOW_WIDTH = setup.width\n  let WINDOW_HEIGHT = setup.height\n  let BAR_HEIGHT = WINDOW_HEIGHT/15\n  let BAR_WIDTH = WINDOW_WIDTH*0.8\n\n  class Row extends PIXI.Container {\n\n    constructor(num,den,width,ID) {\n      super()\n\n      // This\n      this.interactive = true\n\n        // Default values\n      this.numerator = num\n      this.denominator = den\n      this.width = width\n      this.id = ID\n      this.sprites = []\n      this.blockWidth = width / this.denominator\n\n\n      // Init Graphics A\n      this.graphicsA = new PIXI.Graphics()\n      this.graphicsA.lineStyle(3,0x000000) \n      this.graphicsA.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureA = app.renderer.generateTexture(this.graphicsA)\n\n      // Init Graphics B\n      this.graphicsB  = new PIXI.Graphics()\n      this.graphicsB.beginFill(0xff4772)\n      this.graphicsB.lineStyle(3,0x000000) \n      this.graphicsB.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureB = app.renderer.generateTexture(this.graphicsB)\n\n      // Dummy frame for when animating between different fractional parts.\n      this.frameGraphics = new PIXI.Graphics()    \n  \n      // Generate Row\n      for (let i = 0;i<this.denominator;i++) {\n        let label = new PIXI.Text()\n        label.text = labels[this.denominator]\n        label.anchor.set(0.5)\n        label.x = this.blockWidth/2\n        label.y = BAR_HEIGHT/2\n        let s = new PIXI.Sprite.from(this.textureA)\n        s.on('pointerdown',this.spritePointerDown)\n        s.on('pointerup',this.spritePointerUp)\n        s.on('pointermove',this.spritePointerMoved)\n        s.interactive = true\n        s.active = false\n        s.x = i*BAR_WIDTH/this.denominator\n        s.y = WINDOW_HEIGHT/2 - BAR_HEIGHT\n        s.addChild(label)\n        this.sprites.push(s)\n        this.addChild(s)\n      }\n            //  Attached methods\n      this.on('pointerdown',this.pointerDown)\n      this.on('pointerup',this.pointerUp)\n      this.on('pointermove',this.pointerMove)\n\n    }\n  \n\n    incDenonimator = (inc) => {\n      this.frameGraphics.clear()\n      this.frameGraphics.lineStyle(3,0x000000) \n      this.frameGraphics.drawRoundedRect(0,0,this.width,BAR_HEIGHT,1)\n      let R = app.renderer.generateTexture(this.frameGraphics)\n      let s = new PIXI.Sprite()\n      this.addChild(s)\n      s.texture = R\n      s.x  = 0\n\n      if (inc > 0){\n        const onComplete = ()=>{\n          s.on('pointerdown',this.spritePointerDown)\n          s.on('pointerup',this.spritePointerUp)\n          s.on('pointermove',this.spritePointerMoved)\n          s.interactive = true\n          s.active = false\n          this.sprites.push(s)\n          this.draw()\n        }\n        TweenMax.to(this, 0.25, {denominator: this.denominator+1,onUpdate: this.draw,onComplete: onComplete})\n      } else if (inc < 0) {\n        let removeme  = this.sprites.pop()\n        this.container.removeChild(removeme)\n        const onComplete = ()=>{\n          this.draw()\n          this.container.removeChild(s)\n        }\n        TweenMax.to(this, 0.25, {denominator: this.denominator-1,onUpdate: this.draw,onComplete: onComplete})\n      }\n    }\n\n    draw(width) {\n\n      if (width) {\n        this.width = width\n      }\n\n      console.log(this)\n\n      this.blockWidth = this.width/this.denominator\n\n      this.graphicsA.clear()\n      this.graphicsA.lineStyle(3,0x000000) \n      this.graphicsA.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureA = app.renderer.generateTexture(this.graphicsA)\n\n      this.graphicsB.clear()\n      this.graphicsB.beginFill(0xff4772)\n      this.graphicsB.lineStyle(3,0x000000) \n      this.graphicsB.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureB = app.renderer.generateTexture(this.graphicsB)\n\n      for (let i = 0;i<this.sprites.length;i++){\n        if (this.sprites[i].active){\n          this.sprites[i].texture = this.textureA\n        } else {\n          this.sprites[i].texture = this.textureB\n        }\n\n        this.sprites[i].x = this.blockWidth*i\n        this.sprites[i].y = 0\n      }\n    }\n\n    spritePointerDown(event){\n      this.touched = true\n      this.dragged = false\n    }\n\n    spritePointerMoved(event) {\n\n      if (this.touched){\n        console.log(\"pointermove\")\n        this.dragged = true\n      }\n    }\n\n    spritePointerUp(event){\n         this.touched = false\n         console.log('this.draggeed',this.dragged)\n     if (!this.dragged) {\n        this.dragged = false\n        this.active = !this.active\n        this.alpha = 0.2\n        this.texture = this.active ? this.parent.textureB : this.parent.textureA\n        TweenLite.to(this,0.4,{alpha: 1})\n       }\n    }\n\n \n   pointerDown(event) {\n      app.stage.addChild(this)\n      this.data = event.data\n      this.startWidth = this.width\n      this.dragStartY = event.data.global.y\n      this.touching = true\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n    }\n \n   pointerUp(event) {\n      globalPointerUp()\n      this.touching = false\n    }\n\n    pointerMove(event) {\n      if (this.touching){\n        this.y = event.data.global.y + this.deltaTouch.y\n        this.dragged = true\n      }\n    }\n  }\n\n  app.stage.interactive = true\n  app.stage.on('pointerup',globalPointerUp)\n\n\n  function globalPointerUp(){\n    console.log(\"globalPointerup\")\n    FirstRow.incDenonimator(1)\n  }\n  \n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n    //Row.draw()\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n  }\n\n  // Loading Script\n  function load(){\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n    FirstRow = new Row(0,4,BAR_WIDTH,0)\n    app.stage.addChild(FirstRow)\n\n  }\n\n  // Functions attached to app: (need to be destroyed)\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n\n  load()\n};\n"]},"metadata":{},"sourceType":"module"}