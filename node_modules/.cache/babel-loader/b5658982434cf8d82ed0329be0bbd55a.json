{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport plusButton from \"../assets/Plus.png\";\nimport minusButton from \"../assets/Minus.png\";\nimport QuestionMark from '../assets/QuestionMark.png';\nimport { fontWeight } from \"@material-ui/system\";\nlet createjs = window.createjs;\nexport const init = (app, setup) => {\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let wallWidth = 0.8 * setup.width;\n  let wallX = 50;\n  let height = WINDOW_HEIGHT / 15;\n  let backGround = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n  backGround.width = WINDOW_WIDTH;\n  backGround.height = WINDOW_HEIGHT;\n  backGround.x = 0;\n  backGround.y = 0;\n  backGround.alpha = 0;\n  app.stage.addChild(backGround);\n  createjs.Tween.get(backGround).to({\n    alpha: 1\n  }, 500, createjs.Ease.getPowInOut(4));\n  let resetButton = new PIXI.Sprite.from(CONST.ASSETS.RESET);\n  resetButton.interactive = true;\n  resetButton.x = height / 2;\n  resetButton.y = height / 2; // Denominator of the row that's currently place on the number line.\n\n  let activeRow = 12; // Numerator of Active Row (this is the fraction that will be shaded)\n\n  let activeNum = 0; // Is the program currently swapping rows?\n\n  let swapping = false;\n  var graphics = new PIXI.Graphics();\n  graphics.lineStyle(4, 0xc0ffee, 1);\n  graphics.beginFill(0xfe6f61);\n  graphics.drawRect(0, 0, 50, 100);\n  graphics.endFill();\n  var activeTexture = app.renderer.generateTexture(graphics);\n  const labels = {\n    1: \"One Whole\",\n    2: \"One Half\",\n    3: \"One Third\",\n    4: \"Fourth\",\n    5: \"5th\",\n    6: \"6th\",\n    7: \"7th\",\n    8: \"8th\",\n    9: \"9th\",\n    10: \"10th\",\n    11: \"11th\",\n    12: \"12th\"\n  }; // Constructors\n\n  function distance(a, b) {\n    let x1 = a[0];\n    let y1 = a[1];\n    let x2 = b[0];\n    let y2 = b[1];\n    let dX = x2 - x1;\n    let dY = y2 - y1;\n    return Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2));\n  }\n\n  const wallObj = {\n    1: [],\n    2: [],\n    3: [],\n    4: [],\n    5: [],\n    6: [],\n    7: [],\n    8: [],\n    9: [],\n    10: [],\n    11: [],\n    12: []\n  };\n\n  for (var i = 1; i <= 12; i++) {\n    let w = wallWidth / i;\n\n    for (var j = 0; j < i; j++) {\n      let h = height;\n      let x = j * w + w / 2 + (WINDOW_WIDTH - wallWidth) / 2;\n      let y = i * h;\n      let tile = createTile(x, y, w, h, i);\n      wallObj[i].push(tile);\n      app.stage.addChild(tile);\n    }\n  }\n\n  function newTexture(self, color) {\n    var graphics = new PIXI.Graphics();\n    graphics.lineStyle(3, 0xb7b7b7, 1);\n    graphics.beginFill(color);\n    graphics.drawRoundedRect(0, 0, self.width - 3, self.height - 3, 3);\n    graphics.endFill();\n    return app.renderer.generateTexture(graphics);\n  }\n\n  function swapCompleted() {\n    swapping = false;\n  }\n\n  function reset() {\n    let keys = Object.keys(wallObj);\n    keys.forEach(k => {\n      let r = wallObj[k];\n      r.forEach(e => {\n        e.tile.texture = newTexture(this, 0xffffff);\n      });\n    });\n  }\n\n  function moveRowUp(row) {\n    row.forEach(t => createjs.Tween.get(t).to({\n      y: t.y - height\n    }, 1000, createjs.Ease.getPowInOut(4)));\n  }\n\n  function moveRowDown(row) {\n    row.forEach(t => createjs.Tween.get(t).to({\n      y: t.y + height\n    }, 1000, createjs.Ease.getPowInOut(4)));\n  }\n\n  function sendRowToBottom(row1, row2, start) {\n    let y1 = row1[0].y;\n    let y2 = row2[0].y;\n    swapping = true;\n\n    for (var row in wallObj) {\n      if (wallObj[row][0].y > start) {\n        moveRowUp(wallObj[row]);\n      }\n    }\n\n    row1.forEach(t => createjs.Tween.get(t).to({\n      y: 12 * height\n    }, 1000, createjs.Ease.getPowInOut(4)).call(swapCompleted));\n  }\n\n  let tickArray = [];\n\n  function initTickArray(d) {\n    for (var i = 0; i <= 12; i++) {\n      let tick = new PIXI.Graphics();\n      tick.lineStyle(4, 0xb7b7b7, 1);\n      tick.moveTo(wallX, 12.5 * height);\n      tick.lineTo(wallX, 13.5 * height);\n      app.stage.addChild(tick);\n      tickArray.push(tick);\n      createjs.Tween.get(tick).to({\n        x: wallWidth / d * i\n      }, 1000, createjs.Ease.getPowInOut(4));\n    }\n  }\n\n  function drawNumberLine(den) {\n    let line = new PIXI.Graphics();\n    line.lineStyle(4, 0xb7b7b7, 1);\n    line.moveTo(wallX, 13 * height);\n    line.lineTo(wallX + wallWidth, 13 * height);\n    app.stage.addChild(line);\n  }\n\n  function animateTicks(den) {\n    tickArray.forEach((t, i) => {\n      if (i > den) {\n        createjs.Tween.get(t).to({\n          x: wallWidth\n        }, 1000, createjs.Ease.getPowInOut(4));\n      } else {\n        createjs.Tween.get(t).to({\n          x: wallWidth / den * i\n        }, 1000, createjs.Ease.getPowInOut(4));\n      }\n    });\n  }\n\n  function swapRow(row, start, end) {\n    if (Math.abs(start - end) < 30) {\n      row.forEach(t => createjs.Tween.get(t).to({\n        y: start\n      }, 1000, createjs.Ease.getPowInOut(4)).call(swapCompleted));\n    } // Moved up\n    else if (start > end) {\n        for (var r in wallObj) {\n          if (wallObj[r][0].y < start && wallObj[r][0].y > end) {\n            moveRowDown(wallObj[r]);\n          }\n        }\n\n        let roundedEnd = Math.ceil(end / height) * height;\n        row.forEach(t => createjs.Tween.get(t).to({\n          y: roundedEnd\n        }, 1000, createjs.Ease.getPowInOut(4)).call(swapCompleted));\n      } // Moved down\n      else if (start < end) {\n          for (var r in wallObj) {\n            if (wallObj[r][0].y > start && wallObj[r][0].y < end) {\n              moveRowUp(wallObj[r]);\n            }\n          }\n\n          let roundedEnd = Math.floor(end / height) * height;\n          row.forEach(t => createjs.Tween.get(t).to({\n            y: roundedEnd\n          }, 1000, createjs.Ease.getPowInOut(4)).call(swapCompleted));\n        }\n  }\n\n  function createTile(x, y, w, h, d) {\n    var graphics = new PIXI.Graphics();\n    graphics.lineStyle(3, 0xb7b7b7, 1);\n    graphics.beginFill(0xffffff);\n    graphics.drawRoundedRect(0, 0, w, h, 3);\n    graphics.endFill();\n    var texture = app.renderer.generateTexture(graphics);\n    let tile = new PIXI.Sprite(texture);\n    tile.anchor.set(0.5);\n    let den = new PIXI.Text(labels[d], {\n      fontFamily: \"Arial\",\n      fontSize: h / 2,\n      fill: 0xffffff,\n      align: \"center\"\n    });\n    den.anchor.set(0.5);\n    let tileContainer = new PIXI.Container();\n    tile.on(\"pointerdown\", onDragStart);\n    tileContainer.addChild(tile);\n    tileContainer.addChild(den);\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n    tileContainer.den = d;\n    tileContainer.buttonMode = true; //tileContainer.anchor.set(0.5);\n\n    tileContainer.on(\"pointerdown\", onDragStart).on(\"pointerup\", onDragEnd).on(\"pointerupoutside\", onDragEnd).on(\"pointermove\", onDragMove); // move the sprite to its designated position\n\n    tileContainer.x = x;\n    tileContainer.y = y;\n    tileContainer.tile = tile;\n    return tileContainer;\n  }\n\n  function onDragStart(event) {\n    if (!swapping) {\n      console.log(\"setting dragging to true\");\n      this.dragging = true;\n      this.dragStartedAt = this.y;\n      this.data = event.data;\n      this.alpha = 0.5;\n    }\n  }\n\n  function onDragEnd() {\n    if (this.wasDragged) {\n      this.wasDragged = false;\n      let row = wallObj[this.den];\n      activeRow = this.den;\n      swapRow(row, this.dragStartedAt, this.y);\n\n      if (this.y > 12 * height) {\n        animateTicks(activeRow);\n      }\n    } else {\n      this.active = !this.active;\n      this.tile.texture = this.active ? newTexture(this, 0xfe6f61) : newTexture(this, 0xffffff);\n    }\n\n    this.alpha = 1;\n    this.dragging = false;\n    this.data = null;\n  }\n\n  function onDragMove() {\n    if (this.dragging) {\n      this.wasDragged = true;\n      var newPosition = this.data.getLocalPosition(this.parent);\n      wallObj[this.den].forEach(t => {\n        t.parent.addChild(t);\n        t.y = newPosition.y;\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/oldfractionwall.js"],"names":["PIXI","blueGradient","CONST","plusButton","minusButton","QuestionMark","fontWeight","createjs","window","init","app","setup","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","wallWidth","wallX","backGround","Sprite","from","ASSETS","BLUE_GRADIENT","x","y","alpha","stage","addChild","Tween","get","to","Ease","getPowInOut","resetButton","RESET","interactive","activeRow","activeNum","swapping","graphics","Graphics","lineStyle","beginFill","drawRect","endFill","activeTexture","renderer","generateTexture","labels","distance","a","b","x1","y1","x2","y2","dX","dY","Math","sqrt","pow","wallObj","i","w","j","h","tile","createTile","push","newTexture","self","color","drawRoundedRect","swapCompleted","reset","keys","Object","forEach","k","r","e","texture","moveRowUp","row","t","moveRowDown","sendRowToBottom","row1","row2","start","call","tickArray","initTickArray","d","tick","moveTo","lineTo","drawNumberLine","den","line","animateTicks","swapRow","end","abs","roundedEnd","ceil","floor","anchor","set","Text","fontFamily","fontSize","fill","align","tileContainer","Container","on","onDragStart","active","buttonMode","onDragEnd","onDragMove","event","console","log","dragging","dragStartedAt","data","wasDragged","newPosition","getLocalPosition","parent"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport plusButton from \"../assets/Plus.png\";\nimport minusButton from \"../assets/Minus.png\";\nimport QuestionMark from '../assets/QuestionMark.png'\nimport { fontWeight } from \"@material-ui/system\";\nlet createjs = window.createjs\n\nexport const init = (app, setup) => {\n \n\nlet WINDOW_WIDTH = setup.width    \nlet WINDOW_HEIGHT = setup.height\nlet wallWidth = 0.8*setup.width\nlet wallX = 50\nlet height = WINDOW_HEIGHT/15\nlet backGround = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\nbackGround.width = WINDOW_WIDTH;\nbackGround.height = WINDOW_HEIGHT;\nbackGround.x = 0;\nbackGround.y = 0;\nbackGround.alpha = 0;\napp.stage.addChild(backGround);\ncreatejs.Tween.get(backGround).to(\n  { alpha: 1 },\n  500,\n  createjs.Ease.getPowInOut(4)\n);\n\n\nlet resetButton = new PIXI.Sprite.from(CONST.ASSETS.RESET)\nresetButton.interactive = true\nresetButton.x = height/2\nresetButton.y = height/2\n\n// Denominator of the row that's currently place on the number line.\nlet activeRow = 12;\n\n// Numerator of Active Row (this is the fraction that will be shaded)\nlet activeNum = 0;\n\n// Is the program currently swapping rows?\nlet swapping = false;\n\nvar graphics = new PIXI.Graphics();\ngraphics.lineStyle(4, 0xc0ffee, 1);\ngraphics.beginFill(0xfe6f61);\ngraphics.drawRect(0, 0, 50, 100);\ngraphics.endFill();\n\nvar activeTexture = app.renderer.generateTexture(graphics);\n\nconst labels = {\n  1: \"One Whole\",\n  2: \"One Half\",\n  3: \"One Third\",\n  4: \"Fourth\",\n  5: \"5th\",\n  6: \"6th\",\n  7: \"7th\",\n  8: \"8th\",\n  9: \"9th\",\n  10: \"10th\",\n  11: \"11th\",\n  12: \"12th\"\n};\n\n// Constructors\n\nfunction distance(a, b) {\n  let x1 = a[0];\n  let y1 = a[1];\n  let x2 = b[0];\n  let y2 = b[1];\n  let dX = x2 - x1;\n  let dY = y2 - y1;\n  return Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2));\n}\n\nconst wallObj = {\n  1: [],\n  2: [],\n  3: [],\n  4: [],\n  5: [],\n  6: [],\n  7: [],\n  8: [],\n  9: [],\n  10: [],\n  11: [],\n  12: []\n};\n\nfor (var i = 1; i <= 12; i++) {\n  let w = wallWidth / i;\n  for (var j = 0; j < i; j++) {\n    let h = height;\n    let x = j * w + w / 2 + (WINDOW_WIDTH-wallWidth) / 2;\n    let y = i * h;\n    let tile = createTile(x, y, w, h, i);\n    wallObj[i].push(tile);\n    app.stage.addChild(tile);\n  }\n}\n\nfunction newTexture(self, color) {\n  var graphics = new PIXI.Graphics();\n  graphics.lineStyle(3, 0xb7b7b7, 1);\n  graphics.beginFill(color);\n  graphics.drawRoundedRect(0, 0, self.width - 3, self.height - 3, 3);\n  graphics.endFill();\n  return app.renderer.generateTexture(graphics);\n}\n\nfunction swapCompleted() {\n  swapping = false;\n}\n\nfunction reset(){\n    let keys = Object.keys(wallObj)\n    keys.forEach(k=>{\n        let r = wallObj[k]\n        r.forEach(e=>{\n            e.tile.texture = newTexture(this, 0xffffff)\n        })\n    })\n}\n\nfunction moveRowUp(row) {\n  row.forEach(t =>\n    createjs.Tween.get(t).to(\n      { y: t.y - height },\n      1000,\n      createjs.Ease.getPowInOut(4)\n    )\n  );\n}\n\nfunction moveRowDown(row) {\n  row.forEach(t =>\n    createjs.Tween.get(t).to(\n      { y: t.y + height },\n      1000,\n      createjs.Ease.getPowInOut(4)\n    )\n  );\n}\n\nfunction sendRowToBottom(row1, row2, start) {\n  let y1 = row1[0].y;\n  let y2 = row2[0].y;\n  swapping = true;\n  for (var row in wallObj) {\n    if (wallObj[row][0].y > start) {\n      moveRowUp(wallObj[row]);\n    }\n  }\n  row1.forEach(t =>\n    createjs.Tween.get(t)\n      .to({ y: 12 * height }, 1000, createjs.Ease.getPowInOut(4))\n      .call(swapCompleted)\n  );\n}\n\nlet tickArray = [];\n\nfunction initTickArray(d) {\n  for (var i = 0; i <= 12; i++) {\n    let tick = new PIXI.Graphics();\n    tick.lineStyle(4, 0xb7b7b7, 1);\n    tick.moveTo(wallX, 12.5 * height);\n    tick.lineTo(wallX, 13.5 * height);\n    app.stage.addChild(tick);\n    tickArray.push(tick);\n    createjs.Tween.get(tick).to(\n      { x: (wallWidth / d) * i },\n      1000,\n      createjs.Ease.getPowInOut(4)\n    );\n  }\n}\n\nfunction drawNumberLine(den) {\n  let line = new PIXI.Graphics();\n  line.lineStyle(4, 0xb7b7b7, 1);\n  line.moveTo(wallX, 13 * height);\n  line.lineTo(wallX + wallWidth, 13 * height);\n  app.stage.addChild(line);\n}\n\nfunction animateTicks(den) {\n  tickArray.forEach((t, i) => {\n    if (i > den) {\n      createjs.Tween.get(t).to(\n        { x: wallWidth },\n        1000,\n        createjs.Ease.getPowInOut(4)\n      );\n    } else {\n      createjs.Tween.get(t).to(\n        { x: (wallWidth / den) * i },\n        1000,\n        createjs.Ease.getPowInOut(4)\n      );\n    }\n  });\n}\n\nfunction swapRow(row, start, end) {\n  if (Math.abs(start - end) < 30) {\n    row.forEach(t =>\n      createjs.Tween.get(t)\n        .to({ y: start }, 1000, createjs.Ease.getPowInOut(4))\n        .call(swapCompleted)\n    );\n  }\n  // Moved up\n  else if (start > end) {\n    for (var r in wallObj) {\n      if (wallObj[r][0].y < start && wallObj[r][0].y > end) {\n        moveRowDown(wallObj[r]);\n      }\n    }\n    let roundedEnd = Math.ceil(end / height) * height;\n    row.forEach(t =>\n      createjs.Tween.get(t)\n        .to({ y: roundedEnd }, 1000, createjs.Ease.getPowInOut(4))\n        .call(swapCompleted)\n    );\n  }\n  // Moved down\n  else if (start < end) {\n    for (var r in wallObj) {\n      if (wallObj[r][0].y > start && wallObj[r][0].y < end) {\n        moveRowUp(wallObj[r]);\n      }\n    }\n    let roundedEnd = Math.floor(end / height) * height;\n    row.forEach(t =>\n      createjs.Tween.get(t)\n        .to({ y: roundedEnd }, 1000, createjs.Ease.getPowInOut(4))\n        .call(swapCompleted)\n    );\n  }\n}\n\nfunction createTile(x, y, w, h, d) {\n  var graphics = new PIXI.Graphics();\n  graphics.lineStyle(3, 0xb7b7b7, 1);\n  graphics.beginFill(0xffffff);\n  graphics.drawRoundedRect(0, 0, w, h, 3);\n  graphics.endFill();\n\n  var texture = app.renderer.generateTexture(graphics);\n  let tile = new PIXI.Sprite(texture);\n  tile.anchor.set(0.5);\n\n  let den = new PIXI.Text(labels[d], {\n    fontFamily: \"Arial\",\n    fontSize: h / 2,\n    fill: 0xffffff,\n    align: \"center\"\n  });\n  den.anchor.set(0.5);\n\n  let tileContainer = new PIXI.Container();\n\n  tile.on(\"pointerdown\", onDragStart);\n\n  tileContainer.addChild(tile);\n  tileContainer.addChild(den);\n\n  tileContainer.active = false;\n  tileContainer.interactive = true;\n  tileContainer.den = d;\n  tileContainer.buttonMode = true;\n  //tileContainer.anchor.set(0.5);\n\n  tileContainer\n    .on(\"pointerdown\", onDragStart)\n    .on(\"pointerup\", onDragEnd)\n    .on(\"pointerupoutside\", onDragEnd)\n    .on(\"pointermove\", onDragMove);\n\n  // move the sprite to its designated position\n  tileContainer.x = x;\n  tileContainer.y = y;\n\n  tileContainer.tile = tile;\n  return tileContainer;\n}\n\nfunction onDragStart(event) {\n  if (!swapping) {\n    console.log(\"setting dragging to true\");\n    this.dragging = true;\n    this.dragStartedAt = this.y;\n    this.data = event.data;\n    this.alpha = 0.5;\n  }\n}\n\nfunction onDragEnd() {\n  if (this.wasDragged) {\n    this.wasDragged = false;\n    let row = wallObj[this.den];\n    activeRow = this.den;\n    swapRow(row, this.dragStartedAt, this.y);\n    if (this.y > 12 * height) {\n      animateTicks(activeRow);\n    }\n  } else {\n    this.active = !this.active;\n    this.tile.texture = this.active\n      ? newTexture(this, 0xfe6f61)\n      : newTexture(this, 0xffffff);\n  }\n  this.alpha = 1;\n  this.dragging = false;\n  this.data = null;\n}\n\nfunction onDragMove() {\n  if (this.dragging) {\n    this.wasDragged = true;\n    var newPosition = this.data.getLocalPosition(this.parent);\n    wallObj[this.den].forEach(t => {\n      t.parent.addChild(t);\n      t.y = newPosition.y;\n    });\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module"}