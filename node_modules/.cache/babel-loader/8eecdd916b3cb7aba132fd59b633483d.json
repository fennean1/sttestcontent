{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport plusButton from \"../assets/Plus.png\";\nimport resetButton from \"../assets/Reset.png\";\nimport trashButton from \"../assets/Trash.png\";\nimport * as CONST from \"./const.js\";\nexport const init = (app, setup) => {\n  // console.log(\"Setup\",setup)\n  const WINDOW_WIDTH = setup.width;\n  const WINDOW_HEIGHT = setup.height;\n  let dx = setup.width / 15;\n  let backGround = new PIXI.Sprite.from(blueGradient);\n  backGround.width = WINDOW_WIDTH;\n  backGround.height = WINDOW_HEIGHT;\n  backGround.x = 0;\n  backGround.y = 0;\n  backGround.alpha = 0;\n  app.stage.addChild(backGround);\n  window.createjs.Tween.get(backGround).to({\n    alpha: 1\n  }, 500, window.createjs.Ease.getPowInOut(4));\n  const DIM = WINDOW_WIDTH / 12;\n  const WINDOW_CENTER_X = WINDOW_WIDTH / 2;\n  const WINDOW_CENTER_Y = WINDOW_HEIGHT / 2;\n  const CONTAINER_WIDTH = WINDOW_WIDTH * 0.4;\n  const CONTAINER_HEIGHT = CONTAINER_WIDTH;\n  const CONTAINER_TOP = 0;\n  const CONTAINER_BOTTOM = CONTAINER_HEIGHT;\n  const CONTAINER_LEFT = 0;\n  const CONTAINER_RIGHT = CONTAINER_WIDTH;\n  const TWELFTH_WIDTH = CONTAINER_WIDTH / 12;\n  const containers = [];\n  let fractions = [];\n  let gridToolLeft = createGridTool();\n  app.stage.addChild(gridToolLeft);\n  gridToolLeft.x = 3 / 4 * WINDOW_WIDTH - CONTAINER_WIDTH / 2;\n  gridToolLeft.y = WINDOW_CENTER_Y - CONTAINER_HEIGHT / 2;\n  containers.push(gridToolLeft);\n  let gridToolRight = createGridTool();\n  app.stage.addChild(gridToolRight);\n  gridToolRight.x = WINDOW_WIDTH / 4 - CONTAINER_WIDTH / 2;\n  gridToolRight.y = WINDOW_CENTER_Y - CONTAINER_HEIGHT / 2;\n  containers.push(gridToolRight);\n\n  function createTrashCan() {\n    let trashCan = new PIXI.Sprite.from(trashButton);\n    trashCan.width = DIM / 2;\n    trashCan.height = DIM / 2;\n    trashCan.anchor.set(0.5);\n    return trashCan;\n  } //grid.addChild()\n\n\n  function createReset() {\n    let reset = new PIXI.Sprite.from(resetButton);\n    reset.width = DIM / 2;\n    reset.height = DIM / 2;\n    reset.anchor.set(0.5);\n    return reset;\n  }\n\n  let reset = createReset();\n  app.stage.addChild(reset);\n  reset.x = WINDOW_WIDTH - reset.width;\n  reset.y = reset.height;\n  reset.interactive = true;\n  reset.on(\"pointerdown\", resetFractions);\n\n  function resetFractions() {\n    for (let i = 0; i < fractions.length; i++) {\n      app.stage.removeChild(fractions[i]);\n    }\n\n    fractions = [];\n  }\n\n  let trashCan = createTrashCan();\n  app.stage.addChild(trashCan);\n  trashCan.x = WINDOW_CENTER_X;\n  trashCan.y = WINDOW_CENTER_Y + 3 / 4 * CONTAINER_HEIGHT;\n\n  function createGridTool() {\n    let grid = new PIXI.Container();\n    let vPlus = createCircleButton(CONST.ASSETS.PLUS);\n    grid.addChild(vPlus);\n    vPlus.y = CONTAINER_TOP - DIM / 4;\n    vPlus.x = CONTAINER_WIDTH / 2;\n    let vMinus = createCircleButton(CONST.ASSETS.MINUS);\n    vMinus.y = CONTAINER_BOTTOM + DIM / 4;\n    vMinus.x = CONTAINER_WIDTH / 2;\n    grid.addChild(vMinus);\n    let hPlus = createCircleButton(CONST.ASSETS.PLUS);\n    hPlus.x = CONTAINER_RIGHT + DIM / 4;\n    hPlus.y = CONTAINER_HEIGHT / 2;\n    grid.addChild(hPlus);\n    let hMinus = createCircleButton(CONST.ASSETS.MINUS);\n    hMinus.x = CONTAINER_LEFT - DIM / 4;\n    hMinus.y = CONTAINER_HEIGHT / 2;\n    grid.addChild(hMinus);\n    let frac = createFraction(0, 1);\n    frac.x = CONTAINER_LEFT;\n    frac.y = CONTAINER_TOP - DIM / 4; //grid.addChild(frac)\n\n    vPlus.on(\"pointerdown\", () => animateHorizontalLines(1));\n    vMinus.on(\"pointerdown\", () => animateHorizontalLines(-1));\n    hPlus.on(\"pointerdown\", () => animateVerticalLines(1));\n    hMinus.on(\"pointerdown\", () => animateVerticalLines(-1));\n    let cont = createContainer(CONTAINER_WIDTH);\n    grid.addChild(cont);\n    cont.x = CONTAINER_WIDTH / 2;\n    cont.y = CONTAINER_HEIGHT / 2;\n    cont.interactive = true;\n    cont.on(\"pointerdown\", createSquare);\n    let horizontalLines = [];\n    let verticalLines = [];\n    let vPartitions = 1;\n    let hPartitions = 1;\n    let colorIndex = 0;\n    let colors = [CONST.COLORS.BLUE, CONST.COLORS.RED, CONST.COLORS.GREEN, CONST.COLORS.ORANGE, CONST.COLORS.PURPLE]; //let colors = [COLORS.DARK_GRAY];\n\n    let colorLength = colors.length;\n\n    let currentColor = () => {\n      return colors[colorIndex % colorLength];\n    };\n\n    initVerticalLines(1);\n    initHorizontalLines(1);\n    animateVerticalLines(1);\n    animateHorizontalLines(1);\n\n    const v_part_dim = () => {\n      return CONTAINER_HEIGHT / hPartitions;\n    };\n\n    const h_part_dim = () => {\n      return CONTAINER_WIDTH / vPartitions;\n    };\n\n    const total_parts = () => {\n      return hPartitions * vPartitions;\n    }; // Helpers\n\n\n    function hideGrid() {\n      let toHide = [...verticalLines, ...horizontalLines];\n      toHide.forEach(h => h.alpha = 0);\n    }\n\n    function bringLinesToFront() {\n      let lines = [...verticalLines, ...horizontalLines];\n      lines.forEach(l => grid.addChild(l));\n    } // Constructors\n\n\n    function createCircleButton(asset) {\n      let h = DIM / 2;\n      let w = DIM / 2;\n      let circleSprite = new PIXI.Sprite.from(asset);\n      circleSprite.anchor.set(0.5);\n      circleSprite.height = h;\n      circleSprite.width = w;\n      circleSprite.interactive = true;\n      return circleSprite;\n    }\n\n    function createSquare(event) {\n      bringLinesToFront();\n      let hdim = h_part_dim();\n      let vdim = v_part_dim();\n      var block = new PIXI.Graphics();\n      block.lineStyle(2, 0xffffff);\n      block.beginFill(currentColor());\n      block.drawRoundedRect(0, 0, hdim, vdim, 5);\n      block.endFill();\n      block.x = 1;\n      block.y = 1;\n      let blockTexture = app.renderer.generateTexture(block);\n      let blockSprite = new PIXI.Sprite(blockTexture);\n      blockSprite.alpha = 0.5;\n      let pos = event.data.getLocalPosition(this.parent);\n      let i = Math.floor(pos.x / hdim);\n      let j = Math.floor(pos.y / vdim);\n      app.stage.addChild(blockSprite);\n      blockSprite.x = i * hdim + grid.x;\n      blockSprite.y = j * vdim + grid.y;\n      blockSprite.interactive = true;\n      blockSprite.on(\"pointerdown\", onFracStart);\n      blockSprite.on(\"pointerup\", onFracEnd);\n      blockSprite.on(\"pointermove\", onFracMove);\n      fractions.push(blockSprite); //app.stage.addChild(blockSprite)\n    }\n\n    function createContainer(width) {\n      let containerGraphic = new PIXI.Graphics();\n      containerGraphic.lineStyle(3, 0x000000);\n      containerGraphic.moveTo(0, 0);\n      containerGraphic.lineTo(0, width);\n      containerGraphic.lineTo(width, width);\n      containerGraphic.lineTo(width, 0);\n      containerGraphic.lineTo(0, 0);\n      containerGraphic.interactive = true;\n      containerGraphic.x = 1.5;\n      containerGraphic.y = 1.5;\n      let containerTexture = app.renderer.generateTexture(containerGraphic);\n      let containerSprite = new PIXI.Sprite(containerTexture);\n      containerSprite.anchor.set(0.5);\n      containerSprite.width = containerGraphic.width + 1.5;\n      containerSprite.height = containerGraphic.height + 1.5;\n      return containerSprite;\n    }\n\n    function initVerticalLines(partition) {\n      for (let i = 0; i < 11; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(0, CONTAINER_WIDTH);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        verticalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function initHorizontalLines(partition) {\n      for (let i = 0; i < 11; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(CONTAINER_WIDTH, 0);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        horizontalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function animateVerticalLines(inc) {\n      vPartitions += inc;\n\n      if (vPartitions != 0 && vPartitions != 11) {\n        colorIndex += 1;\n        let spacing = CONTAINER_WIDTH / vPartitions;\n        verticalLines.forEach((l, i) => {\n          grid.addChild(l);\n\n          if (i > vPartitions) {\n            window.createjs.Tween.get(l).to({\n              x: CONTAINER_RIGHT\n            }, 500, window.createjs.Ease.getPowInOut(4));\n          } else {\n            window.createjs.Tween.get(l).to({\n              x: i * spacing + CONTAINER_LEFT\n            }, 500, window.createjs.Ease.getPowInOut(4));\n          }\n        });\n      } else {\n        vPartitions -= inc;\n      }\n    }\n\n    function animateHorizontalLines(inc) {\n      hPartitions += inc;\n\n      if (hPartitions != 0 && hPartitions != 11) {\n        colorIndex += 1;\n        let spacing = CONTAINER_WIDTH / hPartitions;\n        horizontalLines.forEach((l, i) => {\n          grid.addChild(l);\n\n          if (i > hPartitions) {\n            window.createjs.Tween.get(l).to({\n              y: CONTAINER_BOTTOM\n            }, 500, window.createjs.Ease.getPowInOut(4));\n          } else {\n            window.createjs.Tween.get(l).to({\n              y: i * spacing + CONTAINER_TOP\n            }, 500, window.createjs.Ease.getPowInOut(4));\n          }\n        });\n      } else {\n        hPartitions -= inc;\n      }\n    }\n\n    function onFracStart(event) {\n      bringLinesToFront();\n      let touchedAtX = event.data.getLocalPosition(this.parent).x;\n      let touchedAtY = event.data.getLocalPosition(this.parent).y;\n      this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n      app.stage.addChild(this);\n      this.data = event.data;\n      this.dragging = true;\n    }\n\n    function round(val, origin) {\n      let i = Math.round(Math.abs(val - origin) / (CONTAINER_WIDTH / 12));\n      return origin + i * CONTAINER_WIDTH / 12;\n    }\n\n    function onFracEnd() {\n      // console.log(\"FRAC ENDED\");\n      this.data = null;\n      this.dragging = false;\n\n      if (this.y + this.height + DIM / 2 > WINDOW_HEIGHT && Math.abs(WINDOW_CENTER_X - this.x - this.width / 2) < 2 * DIM) {\n        // console.log(\"DELETING\");\n        let i = fractions.indexOf(this); // console.log(\"index\", i);\n\n        fractions.splice(i, 1);\n        app.stage.removeChild(this);\n      }\n\n      let x = round(this.x, grid.x);\n      let y = round(this.y, grid.y);\n    }\n\n    function onFracMove() {\n      if (this.dragging) {\n        let pointerPosition = this.data.getLocalPosition(this.parent);\n        this.y = pointerPosition.y + this.deltaTouch[1];\n        this.x = pointerPosition.x + this.deltaTouch[0];\n      }\n    }\n\n    return grid;\n  }\n\n  function createFraction(n, d) {\n    let sf = 0.3;\n    let tileContainer = new PIXI.Container();\n    let whole = d == 1 ? true : false;\n    let h = 2 * DIM;\n    let w = DIM;\n    h = h * sf;\n    w = w * sf;\n    var block = new PIXI.Graphics();\n    block.lineStyle(3, 0x000000, 2);\n    block.beginFill(0xffffff);\n    block.drawRoundedRect(0, 0, 1.2 * w, 1.2 * h, 5);\n    block.endFill();\n    block.x = 1;\n    block.y = 1;\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5); // All or only some of these may exist depending on if we're using a \"whole\" or not.\n\n    let mid;\n    let num;\n    let den;\n\n    if (true) {\n      mid = new PIXI.Graphics();\n      mid.lineStyle(4, 0x000000, 2);\n      mid.moveTo(-w / 2, 0);\n      mid.lineTo(w / 2, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -w / 2;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = w / 2;\n    } else {\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: 12,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = 0;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.border = tile; // Line style appears grey unless we add this after the prefious if block - not sure why.\n\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n    tileContainer.x = DIM;\n    tileContainer.y = 0; // Objects\n\n    tileContainer.d = den;\n    tileContainer.n = num; // Values\n\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = DIM / 2;\n    tileContainer.onLine = false;\n    tileContainer.alpha = 0.9;\n\n    tileContainer.write = (n, d) => {\n      num.text = n;\n      den.text = d;\n    };\n\n    return tileContainer;\n  } // Helpers\n\n\n  function pointInRect(p, rect) {\n    // This is for a rect with anchor in center\n    let top = rect.y - rect.height * rect.anchor;\n    let bottom = rect.y + rect.height * rect.anchor;\n    let left = rect.x - rect.width * rect.anchor;\n    let right = rect.x + rect.width * rect.anchor;\n    let c1 = p.x < right;\n    let c2 = p.x > left;\n    let c3 = p.y < bottom;\n    let c4 = p.y > top;\n    return c1 && c2 && c3 && c4;\n  }\n};","map":{"version":3,"sources":["/Users/andrewfenner/Desktop/testcontent-master/src/js/gridtool.js"],"names":["PIXI","blueGradient","plusButton","resetButton","trashButton","CONST","init","app","setup","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","dx","backGround","Sprite","from","x","y","alpha","stage","addChild","window","createjs","Tween","get","to","Ease","getPowInOut","DIM","WINDOW_CENTER_X","WINDOW_CENTER_Y","CONTAINER_WIDTH","CONTAINER_HEIGHT","CONTAINER_TOP","CONTAINER_BOTTOM","CONTAINER_LEFT","CONTAINER_RIGHT","TWELFTH_WIDTH","containers","fractions","gridToolLeft","createGridTool","push","gridToolRight","createTrashCan","trashCan","anchor","set","createReset","reset","interactive","on","resetFractions","i","length","removeChild","grid","Container","vPlus","createCircleButton","ASSETS","PLUS","vMinus","MINUS","hPlus","hMinus","frac","createFraction","animateHorizontalLines","animateVerticalLines","cont","createContainer","createSquare","horizontalLines","verticalLines","vPartitions","hPartitions","colorIndex","colors","COLORS","BLUE","RED","GREEN","ORANGE","PURPLE","colorLength","currentColor","initVerticalLines","initHorizontalLines","v_part_dim","h_part_dim","total_parts","hideGrid","toHide","forEach","h","bringLinesToFront","lines","l","asset","w","circleSprite","event","hdim","vdim","block","Graphics","lineStyle","beginFill","drawRoundedRect","endFill","blockTexture","renderer","generateTexture","blockSprite","pos","data","getLocalPosition","parent","Math","floor","j","onFracStart","onFracEnd","onFracMove","containerGraphic","moveTo","lineTo","containerTexture","containerSprite","partition","g","inc","spacing","touchedAtX","touchedAtY","deltaTouch","dragging","round","val","origin","abs","indexOf","splice","pointerPosition","n","d","sf","tileContainer","whole","tile","mid","num","den","Text","fontFamily","fontSize","fill","align","border","active","_d","_n","isSet","pivot","onLine","write","text","pointInRect","p","rect","top","bottom","left","right","c1","c2","c3","c4"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport plusButton from \"../assets/Plus.png\";\nimport resetButton from \"../assets/Reset.png\"\nimport trashButton from \"../assets/Trash.png\"\nimport * as CONST from \"./const.js\";\n\nexport const init = (app, setup) => {\n  // console.log(\"Setup\",setup)\n  const WINDOW_WIDTH = setup.width;\n  const WINDOW_HEIGHT = setup.height;\n  let dx = setup.width/ 15;\n\n\n  let backGround = new PIXI.Sprite.from(blueGradient);\n  backGround.width = WINDOW_WIDTH;\n  backGround.height = WINDOW_HEIGHT;\n  backGround.x = 0;\n  backGround.y = 0;\n  backGround.alpha = 0;\n  app.stage.addChild(backGround);\n  window.createjs.Tween.get(backGround).to(\n    {\n      alpha: 1\n    },\n    500,\n    window.createjs.Ease.getPowInOut(4)\n  );\n\n  const DIM = WINDOW_WIDTH / 12;\n  const WINDOW_CENTER_X = WINDOW_WIDTH / 2;\n  const WINDOW_CENTER_Y = WINDOW_HEIGHT / 2;\n  const CONTAINER_WIDTH = WINDOW_WIDTH * 0.4;\n  const CONTAINER_HEIGHT = CONTAINER_WIDTH;\n  const CONTAINER_TOP = 0;\n  const CONTAINER_BOTTOM = CONTAINER_HEIGHT;\n  const CONTAINER_LEFT = 0;\n  const CONTAINER_RIGHT = CONTAINER_WIDTH;\n  const TWELFTH_WIDTH = CONTAINER_WIDTH / 12;\n\n  const containers = [];\n  let fractions = [];\n\n  let gridToolLeft = createGridTool();\n  app.stage.addChild(gridToolLeft);\n  gridToolLeft.x = (3 / 4) * WINDOW_WIDTH - CONTAINER_WIDTH / 2;\n  gridToolLeft.y = WINDOW_CENTER_Y - CONTAINER_HEIGHT / 2;\n  containers.push(gridToolLeft);\n\n  let gridToolRight = createGridTool();\n  app.stage.addChild(gridToolRight);\n  gridToolRight.x = WINDOW_WIDTH / 4 - CONTAINER_WIDTH / 2;\n  gridToolRight.y = WINDOW_CENTER_Y - CONTAINER_HEIGHT / 2;\n  containers.push(gridToolRight);\n\n  function createTrashCan() {\n    let trashCan = new PIXI.Sprite.from(trashButton);\n    trashCan.width = DIM / 2;\n    trashCan.height = DIM / 2;\n    trashCan.anchor.set(0.5);\n    return trashCan;\n  }\n\n  //grid.addChild()\n\n  function createReset() {\n    let reset = new PIXI.Sprite.from(resetButton);\n    reset.width = DIM / 2;\n    reset.height = DIM / 2;\n    reset.anchor.set(0.5);\n    return reset;\n  }\n\n  let reset = createReset();\n  app.stage.addChild(reset);\n  reset.x = WINDOW_WIDTH - reset.width;\n  reset.y = reset.height;\n  reset.interactive = true;\n  reset.on(\"pointerdown\", resetFractions);\n\n  function resetFractions() {\n    for (let i = 0; i < fractions.length; i++) {\n      app.stage.removeChild(fractions[i]);\n    }\n    fractions = [];\n  }\n\n  let trashCan = createTrashCan();\n  app.stage.addChild(trashCan);\n  trashCan.x = WINDOW_CENTER_X;\n  trashCan.y = WINDOW_CENTER_Y + 3/4*CONTAINER_HEIGHT\n\n  function createGridTool() {\n    let grid = new PIXI.Container();\n\n    let vPlus = createCircleButton(CONST.ASSETS.PLUS);\n    grid.addChild(vPlus);\n    vPlus.y = CONTAINER_TOP - DIM / 4;\n    vPlus.x = CONTAINER_WIDTH / 2;\n\n    let vMinus = createCircleButton(CONST.ASSETS.MINUS);\n    vMinus.y = CONTAINER_BOTTOM + DIM / 4;\n    vMinus.x = CONTAINER_WIDTH / 2;\n    grid.addChild(vMinus);\n\n    let hPlus = createCircleButton(CONST.ASSETS.PLUS);\n    hPlus.x = CONTAINER_RIGHT + DIM / 4;\n    hPlus.y = CONTAINER_HEIGHT / 2;\n    grid.addChild(hPlus);\n\n    let hMinus = createCircleButton(CONST.ASSETS.MINUS);\n    hMinus.x = CONTAINER_LEFT - DIM / 4;\n    hMinus.y = CONTAINER_HEIGHT / 2;\n    grid.addChild(hMinus);\n\n    let frac = createFraction(0, 1);\n    frac.x = CONTAINER_LEFT;\n    frac.y = CONTAINER_TOP - DIM / 4;\n    //grid.addChild(frac)\n\n    vPlus.on(\"pointerdown\", () => animateHorizontalLines(1));\n    vMinus.on(\"pointerdown\", () => animateHorizontalLines(-1));\n    hPlus.on(\"pointerdown\", () => animateVerticalLines(1));\n    hMinus.on(\"pointerdown\", () => animateVerticalLines(-1));\n\n    let cont = createContainer(CONTAINER_WIDTH);\n    grid.addChild(cont);\n    cont.x = CONTAINER_WIDTH / 2;\n    cont.y = CONTAINER_HEIGHT / 2;\n    cont.interactive = true;\n    cont.on(\"pointerdown\", createSquare);\n\n    let horizontalLines = [];\n    let verticalLines = [];\n    let vPartitions = 1;\n    let hPartitions = 1;\n    let colorIndex = 0;\n    let colors = [\n      CONST.COLORS.BLUE,\n      CONST.COLORS.RED,\n      CONST.COLORS.GREEN,\n      CONST.COLORS.ORANGE,\n      CONST.COLORS.PURPLE\n    ];\n    //let colors = [COLORS.DARK_GRAY];\n    let colorLength = colors.length;\n    let currentColor = () => {\n      return colors[colorIndex % colorLength];\n    };\n\n    initVerticalLines(1);\n    initHorizontalLines(1);\n    animateVerticalLines(1);\n    animateHorizontalLines(1);\n\n    const v_part_dim = () => {\n      return CONTAINER_HEIGHT / hPartitions;\n    };\n\n    const h_part_dim = () => {\n      return CONTAINER_WIDTH / vPartitions;\n    };\n\n    const total_parts = () => {\n      return hPartitions * vPartitions;\n    };\n\n    // Helpers\n\n    function hideGrid() {\n      let toHide = [...verticalLines, ...horizontalLines];\n      toHide.forEach(h => (h.alpha = 0));\n    }\n\n    function bringLinesToFront() {\n      let lines = [...verticalLines, ...horizontalLines];\n      lines.forEach(l => grid.addChild(l));\n    }\n\n    // Constructors\n    function createCircleButton(asset) {\n      let h = DIM / 2;\n      let w = DIM / 2;\n  \n      let circleSprite = new PIXI.Sprite.from(asset);\n      circleSprite.anchor.set(0.5);\n      circleSprite.height = h \n      circleSprite.width = w\n      circleSprite.interactive = true\n      return circleSprite;\n    }\n    function createSquare(event) {\n      bringLinesToFront();\n      let hdim = h_part_dim();\n      let vdim = v_part_dim();\n      var block = new PIXI.Graphics();\n      block.lineStyle(2, 0xffffff);\n      block.beginFill(currentColor());\n      block.drawRoundedRect(0, 0, hdim, vdim, 5);\n      block.endFill();\n      block.x = 1;\n      block.y = 1;\n\n      let blockTexture = app.renderer.generateTexture(block);\n      let blockSprite = new PIXI.Sprite(blockTexture);\n      blockSprite.alpha = 0.5;\n\n      let pos = event.data.getLocalPosition(this.parent);\n\n      let i = Math.floor(pos.x / hdim);\n      let j = Math.floor(pos.y / vdim);\n\n      app.stage.addChild(blockSprite);\n      blockSprite.x = i * hdim + grid.x;\n      blockSprite.y = j * vdim + grid.y;\n      blockSprite.interactive = true;\n      blockSprite.on(\"pointerdown\", onFracStart);\n      blockSprite.on(\"pointerup\", onFracEnd);\n      blockSprite.on(\"pointermove\", onFracMove);\n      fractions.push(blockSprite);\n      //app.stage.addChild(blockSprite)\n    }\n\n    function createContainer(width) {\n      let containerGraphic = new PIXI.Graphics();\n      containerGraphic.lineStyle(3, 0x000000);\n      containerGraphic.moveTo(0, 0);\n      containerGraphic.lineTo(0, width);\n      containerGraphic.lineTo(width, width);\n      containerGraphic.lineTo(width, 0);\n      containerGraphic.lineTo(0, 0);\n      containerGraphic.interactive = true;\n      containerGraphic.x = 1.5;\n      containerGraphic.y = 1.5;\n\n      let containerTexture = app.renderer.generateTexture(containerGraphic);\n      let containerSprite = new PIXI.Sprite(containerTexture);\n      containerSprite.anchor.set(0.5);\n      containerSprite.width = containerGraphic.width + 1.5;\n      containerSprite.height = containerGraphic.height + 1.5;\n      return containerSprite;\n    }\n\n    function initVerticalLines(partition) {\n      for (let i = 0; i < 11; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(0, CONTAINER_WIDTH);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        verticalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function initHorizontalLines(partition) {\n      for (let i = 0; i < 11; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(CONTAINER_WIDTH, 0);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        horizontalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function animateVerticalLines(inc) {\n      vPartitions += inc;\n      if (vPartitions != 0 && vPartitions != 11) {\n        colorIndex += 1;\n\n        let spacing = CONTAINER_WIDTH / vPartitions;\n\n        verticalLines.forEach((l, i) => {\n          grid.addChild(l);\n          if (i > vPartitions) {\n            window.createjs.Tween.get(l).to(\n              {\n                x: CONTAINER_RIGHT\n              },\n              500,\n              window.createjs.Ease.getPowInOut(4)\n            );\n          } else {\n            window.createjs.Tween.get(l).to(\n              {\n                x: i * spacing + CONTAINER_LEFT\n              },\n              500,\n              window.createjs.Ease.getPowInOut(4)\n            );\n          }\n        });\n      } else {\n        vPartitions -= inc;\n      }\n    }\n\n    function animateHorizontalLines(inc) {\n      hPartitions += inc;\n      if (hPartitions != 0 && hPartitions != 11) {\n        colorIndex += 1;\n\n        let spacing = CONTAINER_WIDTH / hPartitions;\n\n        horizontalLines.forEach((l, i) => {\n          grid.addChild(l);\n          if (i > hPartitions) {\n            window.createjs.Tween.get(l).to(\n              {\n                y: CONTAINER_BOTTOM\n              },\n              500,\n              window.createjs.Ease.getPowInOut(4)\n            );\n          } else {\n            window.createjs.Tween.get(l).to(\n              {\n                y: i * spacing + CONTAINER_TOP\n              },\n              500,\n              window.createjs.Ease.getPowInOut(4)\n            );\n          }\n        });\n      } else {\n        hPartitions -= inc;\n      }\n    }\n\n    function onFracStart(event) {\n      bringLinesToFront();\n      let touchedAtX = event.data.getLocalPosition(this.parent).x;\n      let touchedAtY = event.data.getLocalPosition(this.parent).y;\n      this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n      app.stage.addChild(this);\n      this.data = event.data;\n      this.dragging = true;\n    }\n\n    function round(val, origin) {\n      let i = Math.round(Math.abs(val - origin) / (CONTAINER_WIDTH / 12));\n      return origin + (i * CONTAINER_WIDTH) / 12;\n    }\n\n    function onFracEnd() {\n      // console.log(\"FRAC ENDED\");\n      this.data = null;\n      this.dragging = false;\n      if (\n        this.y + this.height + DIM / 2 > WINDOW_HEIGHT &&\n        Math.abs(WINDOW_CENTER_X - this.x - this.width / 2) < 2 * DIM\n      ) {\n        // console.log(\"DELETING\");\n        let i = fractions.indexOf(this);\n        // console.log(\"index\", i);\n        fractions.splice(i, 1);\n        app.stage.removeChild(this);\n      }\n\n      let x = round(this.x, grid.x);\n      let y = round(this.y, grid.y);\n    }\n\n    function onFracMove() {\n      if (this.dragging) {\n        let pointerPosition = this.data.getLocalPosition(this.parent);\n        this.y = pointerPosition.y + this.deltaTouch[1];\n        this.x = pointerPosition.x + this.deltaTouch[0];\n      }\n    }\n\n    return grid;\n  }\n\n  function createFraction(n, d) {\n    let sf = 0.3;\n\n    let tileContainer = new PIXI.Container();\n\n    let whole = d == 1 ? true : false;\n\n    let h = 2 * DIM;\n    let w = DIM;\n    h = h * sf;\n    w = w * sf;\n\n    var block = new PIXI.Graphics();\n    block.lineStyle(3, 0x000000, 2);\n    block.beginFill(0xffffff);\n    block.drawRoundedRect(0, 0, 1.2 * w, 1.2 * h, 5);\n    block.endFill();\n    block.x = 1;\n    block.y = 1;\n\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5);\n\n    // All or only some of these may exist depending on if we're using a \"whole\" or not.\n    let mid;\n    let num;\n    let den;\n\n    if (true) {\n      mid = new PIXI.Graphics();\n      mid.lineStyle(4, 0x000000, 2);\n      mid.moveTo(-w / 2, 0);\n      mid.lineTo(w / 2, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -w / 2;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = w / 2;\n    } else {\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: 12,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = 0;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.border = tile;\n\n    // Line style appears grey unless we add this after the prefious if block - not sure why.\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n\n    tileContainer.x = DIM;\n    tileContainer.y = 0;\n    // Objects\n    tileContainer.d = den;\n    tileContainer.n = num;\n    // Values\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = DIM / 2;\n    tileContainer.onLine = false;\n    tileContainer.alpha = 0.9;\n\n    tileContainer.write = (n, d) => {\n      num.text = n;\n      den.text = d;\n    };\n    return tileContainer;\n  }\n\n  // Helpers\n  function pointInRect(p, rect) {\n    // This is for a rect with anchor in center\n\n    let top = rect.y - rect.height * rect.anchor;\n    let bottom = rect.y + rect.height * rect.anchor;\n    let left = rect.x - rect.width * rect.anchor;\n    let right = rect.x + rect.width * rect.anchor;\n\n    let c1 = p.x < right;\n    let c2 = p.x > left;\n    let c3 = p.y < bottom;\n    let c4 = p.y > top;\n\n    return c1 && c2 && c3 && c4;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}