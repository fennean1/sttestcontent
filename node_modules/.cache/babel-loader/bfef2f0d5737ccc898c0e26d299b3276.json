{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { SSL_OP_TLS_BLOCK_PADDING_BUG } from \"constants\";\nimport { number } from \"prop-types\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const LINE_PERCENTAGE = 0.8;\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN); // Initial State\n\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 20\n  }; // Layout Parameters\n\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let H_W_RATIO = setup.height / setup.width;\n  let LANDSCAPE = H_W_RATIO < 3 / 4;\n  let ARENA_WIDTH = LANDSCAPE ? 4 / 3 * setup.height : setup.width;\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3 / 4 * setup.width;\n  let LINE_WIDTH = LINE_PERCENTAGE * WINDOW_WIDTH;\n  let LINE_THICKNESS = LINE_WIDTH / 200;\n  let TICK_THICKNESS = 2 * LINE_THICKNESS / 3;\n  let MAJOR_TICK_HEIGHT = LINE_WIDTH / 20;\n  let MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT / 2;\n  let DX = LINE_WIDTH / state.lineMax;\n  let LINE_START = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n  let STRIP_HEIGHT = LINE_WIDTH / 12; // Reference to entities.\n\n  let backGround;\n  let numberLine;\n  let pinA;\n  let pinB;\n  let stripA;\n  let stripB;\n  let stripBLabel;\n  let stripALabel;\n  let incButton;\n  let decButton;\n  let activePin; // Constructors (should not be called on re-draw)\n\n  function makeNumberLine() {\n    this.tickSpan = 1;\n    this.labelSpan = 1;\n    this.max = state.lineMax;\n    this.ticks = []; // size 120\n\n    this.labels = [];\n    this.line = new PIXI.Graphics();\n\n    this.init = n => {\n      this.line.lineStyle(LINE_THICKNESS, 0x000000);\n      this.line.x = ARENA_WIDTH / 2 - LINE_WIDTH / 2;\n      this.line.y = ARENA_HEIGHT / 2;\n      this.line.lineTo(LINE_WIDTH, 0);\n      this.draw();\n      app.stage.addChild(this.line);\n\n      for (let i = 0; i < 120; i++) {\n        let newTick = new PIXI.Graphics();\n        newTick.lineStyle(LINE_THICKNESS, 0x000000);\n        newTick.x = this.line.x;\n        newTick.y = this.line.y - LINE_THICKNESS / 2;\n        newTick.lineTo(0, MINOR_TICK_HEIGHT);\n        app.stage.addChild(newTick);\n        this.ticks.push(newTick); // Setup Labels Here\n\n        let newLabel = new PIXI.Text(i, {\n          fontFamily: \"Arial\",\n          fontSize: DX / 2,\n          fill: \"0x000000\",\n          align: \"center\"\n        });\n        newLabel.anchor.x = 0.5;\n        this.labels.push(newLabel);\n        newLabel.x = this.line.x + DX * i;\n        newLabel.y = this.line.y + MINOR_TICK_HEIGHT;\n        app.stage.addChild(newLabel);\n      }\n\n      this.increment(0);\n    };\n\n    this.getSetup = () => {// update tickspan etc. based on line max.\n    };\n\n    this.increment = inc => {\n      // Animation go here\n      this.max += inc; // Update State - (Context Specific)\n\n      state.lineMax = this.max;\n      updateLayoutParams();\n      this.ticks.forEach((e, i) => {\n        if (i > this.max) {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH + this.line.x\n          });\n        } else {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH / this.max * i + this.line.x\n          });\n        }\n      });\n      this.labels.forEach((e, i) => {\n        if (i > this.max) {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH + this.line.x\n          });\n          TweenLite.to(e, 0.5, {\n            alpha: 0\n          });\n        } else {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH / this.max * i + this.line.x\n          });\n          TweenLite.to(e, 0.5, {\n            alpha: 1\n          });\n        }\n      });\n    };\n\n    this.draw = () => {\n      this.line.width = LINE_WIDTH;\n      this.line.height = LINE_THICKNESS;\n      this.line.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n      this.line.y = WINDOW_HEIGHT / 2;\n      this.ticks.forEach((e, i) => {\n        e.width = TICK_THICKNESS;\n        e.height = MINOR_TICK_HEIGHT;\n        e.y = this.line.y - LINE_THICKNESS / 2;\n\n        if (i > this.max) {\n          e.x = LINE_WIDTH + this.line.x;\n        } else {\n          e.x = LINE_WIDTH / this.max * i + this.line.x;\n        }\n      });\n      this.labels.forEach((e, i) => {\n        e.y = this.line.y + MINOR_TICK_HEIGHT;\n        e.style.fontSize = DX / 2;\n\n        if (i > this.max) {\n          e.x = LINE_WIDTH + this.line.x;\n        } else {\n          e.x = LINE_WIDTH / this.max * i + this.line.x;\n        }\n      });\n    };\n\n    this.init();\n  }\n\n  function makeBackground() {\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH;\n    this.sprite.height = WINDOW_HEIGHT;\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup', globalPointerUp);\n    this.sprite.interactive = true;\n    app.stage.addChild(this.sprite);\n\n    this.draw = () => {\n      this.sprite.width = WINDOW_WIDTH;\n      this.sprite.height = WINDOW_HEIGHT;\n    };\n  }\n\n  function makeStripLabel(n) {\n    let label = new PIXI.Text(n, {\n      fontFamily: \"Arial\",\n      fontSize: DX,\n      fill: \"0x000000\",\n      align: \"center\"\n    });\n    label.id = n;\n    label.anchor.set(0.5);\n\n    label.draw = () => {\n      let valA = state.valA,\n          valB = state.valB;\n\n      if (label.id == 0) {\n        label.x = LINE_START + (pinA.sprite.x - LINE_START) / 2;\n        label.style.fill = 0xffffff;\n        let txt = Math.round((pinA.sprite.x - LINE_START) / DX);\n        label.text = txt; // Hide if \"subtracting\"\n\n        if (pinA.sprite.x > pinB.sprite.x) {\n          label.x = LINE_START + (pinB.sprite.x - LINE_START) / 2;\n          label.text = Math.round((pinB.sprite.x - LINE_START) / DX);\n        }\n\n        if (stripA.graphic.width <= DX) {\n          label.y = WINDOW_HEIGHT / 2 - 1.5 * STRIP_HEIGHT;\n        } else {\n          label.y = WINDOW_HEIGHT / 2 - STRIP_HEIGHT / 2;\n        } // Hide for testing purposes\n        //label.alpha = 0\n\n      } else if (label.id == 1) {\n        label.x = (pinA.sprite.x + pinB.sprite.x) / 2;\n        label.y = label.y = WINDOW_HEIGHT / 2 - STRIP_HEIGHT / 2;\n        let txt = Math.round(Math.abs(pinA.sprite.x - pinB.sprite.x) / DX);\n        label.text = txt;\n\n        if (stripB.graphic.width <= DX) {\n          label.y = WINDOW_HEIGHT / 2 - 1.5 * STRIP_HEIGHT;\n        } else {\n          label.y = WINDOW_HEIGHT / 2 - STRIP_HEIGHT / 2;\n        }\n      }\n\n      label.style.fontSize = STRIP_HEIGHT / 2;\n    };\n\n    app.stage.addChild(label);\n    return label;\n  }\n\n  function makePin(id) {\n    this.sprite = new PIXI.Sprite();\n    this.sprite.id = id;\n    this.sprite.texture = PIN_TEXTURE;\n    this.sprite.interactive = true;\n    this.sprite.anchor.x = 0.5;\n    this.sprite.on('pointerdown', onDragStart);\n    this.sprite.on('pointermove', onDragMove);\n    this.sprite.on('pointerup', onDragEnd);\n    this.sprite.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n    this.sprite.val = 8;\n    app.stage.addChild(this.sprite);\n\n    this.sprite.round = () => {\n      // Pre Computation\n      let rawLineX = this.sprite.x - numberLine.line.x;\n      let n = Math.round(rawLineX / DX); // Setting\n\n      this.sprite.x = numberLine.line.x + n * DX;\n      this.sprite.val = n; // There's gotta be a better pattern than this\n\n      if (this.sprite.id == 0) {\n        state.valA = this.sprite.val;\n      } else if (this.sprite.id == 1) {\n        state.valB = this.sprite.val;\n      }\n    };\n\n    this.draw = () => {\n      this.sprite.width = STRIP_HEIGHT;\n      this.sprite.height = STRIP_HEIGHT;\n      this.sprite.y = WINDOW_HEIGHT / 2 + MINOR_TICK_HEIGHT + DX / 2;\n      this.sprite.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2 + this.sprite.val * DX;\n    };\n\n    this.draw();\n  } // Dragging...\n\n\n  function onDragStart(event) {\n    app.stage.addChild(this);\n    this.deltaTouch = {\n      x: this.x - event.data.global.x,\n      y: this.y - event.data.global.y\n    };\n    this.dragging = true;\n    this.data = event.data;\n  }\n\n  function onDragEnd(event) {\n    this.dragging = false;\n    this.data = null;\n    this.round();\n    stripA.draw();\n    stripB.draw();\n    stripALabel.draw();\n    stripBLabel.draw();\n  }\n\n  function onDragMove(event) {\n    if (this.dragging) {\n      let newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch.x; //this.y = newPosition.y + this.deltaTouch.y;\n\n      stripA.draw();\n      stripB.draw();\n      stripALabel.draw();\n      stripBLabel.draw(); // Keep within number line bounds\n\n      if (this.x < WINDOW_WIDTH / 2 - LINE_WIDTH / 2) {\n        this.dragging = false;\n        this.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n      } else if (this.x > WINDOW_WIDTH / 2 + LINE_WIDTH / 2) {\n        this.dragging = false;\n        this.x = WINDOW_WIDTH / 2 + LINE_WIDTH / 2;\n      }\n    }\n  }\n\n  function makeArrowButton(inc) {\n    let button = new PIXI.Sprite.from(CONST.ASSETS.ARROW);\n    button.inc = inc;\n    button.interactive = true;\n    button.anchor.set(0.5);\n    button.on('pointerdown', () => {\n      numberLine.increment(inc);\n      resize(null, false);\n    }); //app.stage.addChild(button)\n\n    button.draw = () => {\n      if (button.inc == -5) {\n        button.width = STRIP_HEIGHT / 2;\n        button.height = STRIP_HEIGHT / 2;\n        button.x = WINDOW_WIDTH - 1.1 * button.width;\n        button.y = WINDOW_HEIGHT / 2 + 1 / 2 * button.width;\n        button.rotation = Math.PI;\n      } else if (button.inc == 5) {\n        button.width = STRIP_HEIGHT / 2;\n        button.height = STRIP_HEIGHT / 2;\n        button.x = WINDOW_WIDTH - 1.1 * button.width;\n        button.y = WINDOW_HEIGHT / 2 - 1 / 2 * button.width;\n      }\n    };\n\n    return button;\n  }\n\n  function makeStrip(id) {\n    this.graphic = new PIXI.Graphics();\n    app.stage.addChild(this.graphic);\n    this.graphic.y = WINDOW_HEIGHT / 2 - STRIP_HEIGHT;\n    this.id = id;\n\n    this.draw = flex => {\n      let t = LINE_THICKNESS / 2;\n      let valA = state.valA,\n          valB = state.valB;\n\n      if (this.id == 0) {\n        let _x = LINE_START;\n\n        let _y = WINDOW_HEIGHT / 2 - STRIP_HEIGHT;\n\n        let _h = STRIP_HEIGHT - 1.5 * t;\n\n        let _w = Math.min(pinA.sprite.x, pinB.sprite.x) - LINE_START;\n\n        if (flex) {\n          TweenLite.to(this.graphic, 1, {\n            x: _x,\n            y: _y,\n            width: _w,\n            height: _h + t\n          });\n        } else {\n          this.graphic.clear();\n          this.graphic.lineStyle(t, CONST.COLORS.BLUE);\n          this.graphic.beginFill(CONST.COLORS.BLUE);\n          this.graphic.drawRoundedRect(0, 0, _w, _h, _h / 10);\n          this.graphic.width = _w;\n          this.graphic.height = _h + t;\n          this.graphic.x = _x;\n          this.graphic.y = _y;\n        }\n      } else if (this.id == 1) {\n        let w = Math.abs(pinA.sprite.x - pinB.sprite.x);\n        this.graphic.clear();\n\n        if (true) {\n          this.graphic.lineStyle(t, CONST.COLORS.BLUE);\n          this.graphic.y = WINDOW_HEIGHT / 2 - STRIP_HEIGHT;\n          this.graphic.drawRect(0, 0, w, STRIP_HEIGHT - 1.5 * t);\n        } else {\n          this.graphic.lineStyle(2, CONST.COLORS.ORANGE);\n          this.graphic.beginFill(CONST.COLORS.ORANGE);\n          this.graphic.y = WINDOW_HEIGHT / 2 - STRIP_HEIGHT - t / 4;\n          this.graphic.drawRoundedRect(0, 0, w, STRIP_HEIGHT - t, STRIP_HEIGHT / 10);\n\n          if (w == 0) {\n            this.graphic.alpha = 0;\n          } else {\n            this.graphic.alpha = 1;\n          }\n        }\n\n        this.graphic.x = Math.min(pinA.sprite.x, pinB.sprite.x);\n      }\n    };\n\n    this.draw(0, 8 * DX);\n  }\n\n  function globalPointerUp() {\n    // Ughhh...\n    pinA.sprite.dragging = false;\n    pinB.sprite.dragging = false;\n    pinA.sprite.round();\n    pinB.sprite.round();\n    stripA.draw();\n    stripB.draw();\n    stripALabel.draw();\n    stripBLabel.draw();\n  } // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame);\n    app.renderer.resize(WINDOW_WIDTH, WINDOW_HEIGHT);\n    numberLine.draw();\n    backGround.draw();\n    pinA.draw();\n    pinB.draw();\n    stripA.draw(flex);\n    stripB.draw();\n    stripALabel.draw();\n    stripBLabel.draw();\n    incButton.draw();\n    decButton.draw();\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n\n    WINDOW_WIDTH = frame.width;\n    WINDOW_HEIGHT = frame.height;\n    H_W_RATIO = frame.height / frame.width;\n    LANDSCAPE = H_W_RATIO < 3 / 4;\n    ARENA_WIDTH = LANDSCAPE ? 4 / 3 * frame.height : frame.width;\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3 / 4 * frame.width;\n    LINE_WIDTH = LINE_PERCENTAGE * WINDOW_WIDTH;\n    LINE_THICKNESS = LINE_WIDTH / 200;\n    TICK_THICKNESS = LINE_THICKNESS / 2;\n    MAJOR_TICK_HEIGHT = LINE_WIDTH / 20;\n    MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT / 2;\n    DX = LINE_WIDTH / state.lineMax;\n    LINE_START = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n    STRIP_HEIGHT = LINE_WIDTH / 12;\n  } // Loading Script\n\n\n  function load() {\n    let features = {\n      'strips': true\n    };\n\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    backGround = new makeBackground();\n    numberLine = new makeNumberLine();\n    pinA = new makePin(0);\n    pinB = new makePin(1);\n    stripA = new makeStrip(0);\n    stripB = new makeStrip(1);\n    stripALabel = makeStripLabel(0);\n    stripBLabel = makeStripLabel(1);\n    incButton = makeArrowButton(5);\n    decButton = makeArrowButton(-5);\n    stripALabel.draw();\n    stripBLabel.draw();\n    incButton.draw();\n    decButton.draw();\n  } // Call load script\n\n\n  load(); // Not sure where else to put this.\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/numberlinestrips.js"],"names":["PIXI","CONST","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","SSL_OP_TLS_BLOCK_PADDING_BUG","number","ASSETS","init","app","setup","BLUE_TEXTURE","Texture","from","BLUE_CIRCLE","LINE_PERCENTAGE","PIN_TEXTURE","SHARP_PIN","state","valA","valB","lineMax","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","H_W_RATIO","LANDSCAPE","ARENA_WIDTH","ARENA_HEIGHT","LINE_WIDTH","LINE_THICKNESS","TICK_THICKNESS","MAJOR_TICK_HEIGHT","MINOR_TICK_HEIGHT","DX","LINE_START","STRIP_HEIGHT","backGround","numberLine","pinA","pinB","stripA","stripB","stripBLabel","stripALabel","incButton","decButton","activePin","makeNumberLine","tickSpan","labelSpan","max","ticks","labels","line","Graphics","n","lineStyle","x","y","lineTo","draw","stage","addChild","i","newTick","push","newLabel","Text","fontFamily","fontSize","fill","align","anchor","increment","getSetup","inc","updateLayoutParams","forEach","e","to","alpha","style","makeBackground","sprite","Sprite","BLUE_GRADIENT","on","globalPointerUp","interactive","makeStripLabel","label","id","set","txt","Math","round","text","graphic","abs","makePin","texture","onDragStart","onDragMove","onDragEnd","val","rawLineX","event","deltaTouch","data","global","dragging","newPosition","getLocalPosition","parent","makeArrowButton","button","ARROW","resize","rotation","PI","makeStrip","flex","t","_x","_y","_h","_w","min","clear","COLORS","BLUE","beginFill","drawRoundedRect","w","drawRect","ORANGE","newFrame","renderer","frame","load","features","props","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { SSL_OP_TLS_BLOCK_PADDING_BUG } from \"constants\";\nimport { number } from \"prop-types\";\nconst ASSETS = CONST.ASSETS\n\nexport const init = (app, setup) => {\n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const LINE_PERCENTAGE = 0.8\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN)\n\n\n // Initial State\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 20,\n  }\n\n  // Layout Parameters\n  let WINDOW_WIDTH = setup.width\n  let WINDOW_HEIGHT = setup.height\n  let H_W_RATIO = setup.height/setup.width\n  let LANDSCAPE = H_W_RATIO < 3/4\n  let ARENA_WIDTH = LANDSCAPE ? 4/3*setup.height : setup.width\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3/4*setup.width\n  let LINE_WIDTH = LINE_PERCENTAGE*WINDOW_WIDTH\n  let LINE_THICKNESS = LINE_WIDTH/200\n  let TICK_THICKNESS = 2*LINE_THICKNESS/3\n  let MAJOR_TICK_HEIGHT = LINE_WIDTH/20\n  let MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT/2\n  let DX = LINE_WIDTH/state.lineMax\n  let LINE_START = WINDOW_WIDTH/2 - LINE_WIDTH/2\n  let STRIP_HEIGHT = LINE_WIDTH/12\n\n  // Reference to entities.\n  let backGround;\n  let numberLine;\n  let pinA;\n  let pinB;\n  let stripA;\n  let stripB;\n  let stripBLabel;\n  let stripALabel;\n  let incButton;\n  let decButton;\n  let activePin;\n\n \n  // Constructors (should not be called on re-draw)\n  function makeNumberLine(){\n     this.tickSpan = 1\n     this.labelSpan = 1\n     this.max = state.lineMax\n     this.ticks = [] // size 120\n     this.labels = []\n     this.line = new PIXI.Graphics()\n\n     this.init = (n) => {\n        this.line.lineStyle(LINE_THICKNESS,0x000000)\n        this.line.x = ARENA_WIDTH/2-LINE_WIDTH/2\n        this.line.y = ARENA_HEIGHT/2\n        this.line.lineTo(LINE_WIDTH,0)\n        this.draw()\n        app.stage.addChild(this.line)\n\n        for (let i = 0;i<120;i++){\n            let newTick = new PIXI.Graphics()\n            newTick.lineStyle(LINE_THICKNESS,0x000000)\n            newTick.x = this.line.x \n            newTick.y = this.line.y - LINE_THICKNESS/2\n            newTick.lineTo(0,MINOR_TICK_HEIGHT)\n            app.stage.addChild(newTick)\n            this.ticks.push(newTick)\n\n            // Setup Labels Here\n            let newLabel = new PIXI.Text(i,{\n              fontFamily: \"Arial\",\n              fontSize: DX/2,\n              fill: \"0x000000\",\n              align: \"center\"\n            })\n            newLabel.anchor.x = 0.5\n            this.labels.push(newLabel)\n            newLabel.x = this.line.x + DX*i\n            newLabel.y = this.line.y + MINOR_TICK_HEIGHT\n            app.stage.addChild(newLabel)\n        }\n        this.increment(0)\n     }\n\n     this.getSetup = ()=> {\n         // update tickspan etc. based on line max.\n     }\n\n     this.increment = (inc) => {\n         // Animation go here\n         this.max += inc\n\n         // Update State - (Context Specific)\n         state.lineMax = this.max\n         updateLayoutParams()\n\n         this.ticks.forEach((e,i)=> {\n            if (i > this.max){\n                TweenLite.to(e,0.5,{x: LINE_WIDTH + this.line.x })\n            } else {\n                TweenLite.to(e,0.5,{x: LINE_WIDTH/this.max*i + this.line.x})\n            }\n         })\n\n         this.labels.forEach((e,i)=> {\n          if (i > this.max){\n              TweenLite.to(e,0.5,{x: LINE_WIDTH + this.line.x })\n              TweenLite.to(e,0.5,{alpha: 0})\n          } else {\n              TweenLite.to(e,0.5,{x: LINE_WIDTH/this.max*i + this.line.x})\n              TweenLite.to(e,0.5,{alpha: 1})\n          }\n       })\n     }\n\n     this.draw = () => {\n        this.line.width = LINE_WIDTH\n        this.line.height = LINE_THICKNESS\n        this.line.x = WINDOW_WIDTH/2 - LINE_WIDTH/2\n        this.line.y = WINDOW_HEIGHT/2\n        this.ticks.forEach((e,i)=> {\n            e.width = TICK_THICKNESS\n            e.height = MINOR_TICK_HEIGHT\n            e.y = this.line.y - LINE_THICKNESS/2\n            if (i > this.max){\n                e.x = LINE_WIDTH + this.line.x \n            } else {\n                e.x =  LINE_WIDTH/this.max*i + this.line.x\n            }\n         })\n         this.labels.forEach((e,i)=> {\n          e.y = this.line.y + MINOR_TICK_HEIGHT\n          e.style.fontSize = DX/2\n          if (i > this.max){\n              e.x = LINE_WIDTH + this.line.x \n          } else {\n              e.x =  LINE_WIDTH/this.max*i + this.line.x\n          }\n       })\n     }\n     this.init()\n  }\n\n  function makeBackground(){\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH\n    this.sprite.height = WINDOW_HEIGHT\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup',globalPointerUp)\n    this.sprite.interactive = true\n\n    app.stage.addChild(this.sprite)\n\n    this.draw = () => {\n        this.sprite.width = WINDOW_WIDTH\n        this.sprite.height = WINDOW_HEIGHT\n    }\n  }\n\n  function makeStripLabel(n){\n    let label = new PIXI.Text(n,{\n      fontFamily: \"Arial\",\n      fontSize: DX,\n      fill: \"0x000000\",\n      align: \"center\"\n    })\n\n    label.id = n\n    label.anchor.set(0.5)\n\n    label.draw = () => {\n      let {valA,valB} = state\n      if (label.id == 0){\n         label.x = LINE_START + (pinA.sprite.x - LINE_START)/2\n         label.style.fill = 0xffffff\n         let txt = Math.round((pinA.sprite.x - LINE_START)/DX)\n         label.text = txt\n         // Hide if \"subtracting\"\n         if (pinA.sprite.x > pinB.sprite.x){\n           label.x = LINE_START + (pinB.sprite.x - LINE_START)/2\n           label.text = Math.round((pinB.sprite.x - LINE_START)/DX)\n          }\n         if (stripA.graphic.width <= DX){\n           label.y = WINDOW_HEIGHT/2 - 1.5*STRIP_HEIGHT\n         } else {\n           label.y = WINDOW_HEIGHT/2 - STRIP_HEIGHT/2\n         }\n         // Hide for testing purposes\n         //label.alpha = 0\n      } else if (label.id == 1) {\n         label.x = (pinA.sprite.x + pinB.sprite.x)/2\n         label.y = label.y = WINDOW_HEIGHT/2 - STRIP_HEIGHT/2\n         let txt = Math.round(Math.abs(pinA.sprite.x - pinB.sprite.x)/DX)\n         label.text = txt\n         if (stripB.graphic.width <= DX ){\n          label.y = WINDOW_HEIGHT/2 - 1.5*STRIP_HEIGHT\n        } else {\n           label.y = WINDOW_HEIGHT/2 - STRIP_HEIGHT/2\n        }\n      }\n      label.style.fontSize = STRIP_HEIGHT/2\n    }\n    app.stage.addChild(label)\n    return label\n  }\n\n  function makePin(id){\n    this.sprite = new PIXI.Sprite()\n    this.sprite.id = id\n    this.sprite.texture = PIN_TEXTURE\n    this.sprite.interactive = true\n    this.sprite.anchor.x = 0.5\n    this.sprite.on('pointerdown',onDragStart)\n    this.sprite.on('pointermove',onDragMove)\n    this.sprite.on('pointerup',onDragEnd)\n    this.sprite.x = WINDOW_WIDTH/2 - LINE_WIDTH/2\n    this.sprite.val = 8\n    app.stage.addChild(this.sprite)\n\n    this.sprite.round = () => {\n\n      // Pre Computation\n      let rawLineX = this.sprite.x - numberLine.line.x\n      let n = Math.round(rawLineX/DX)\n\n      // Setting\n      this.sprite.x = numberLine.line.x + n*DX\n      this.sprite.val = n\n\n      // There's gotta be a better pattern than this\n      if (this.sprite.id == 0){\n        state.valA = this.sprite.val\n      } else if (this.sprite.id == 1){\n        state.valB = this.sprite.val\n      }\n    }\n\n    this.draw = () => { \n      this.sprite.width = STRIP_HEIGHT\n      this.sprite.height = STRIP_HEIGHT\n      this.sprite.y = WINDOW_HEIGHT/2 + MINOR_TICK_HEIGHT + DX/2\n      this.sprite.x = WINDOW_WIDTH/2 - LINE_WIDTH/2 + this.sprite.val*DX\n    }\n    this.draw()\n   }\n\n  // Dragging...\n\n  function onDragStart(event) {\n      app.stage.addChild(this)\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n      this.dragging = true;\n      this.data = event.data;\n  }\n\n  function onDragEnd(event) {\n    this.dragging = false;\n    this.data = null;\n    this.round()\n    stripA.draw()\n    stripB.draw()\n    stripALabel.draw()\n    stripBLabel.draw()\n  }\n\n  function onDragMove(event) {\n    if (this.dragging) {\n      let newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch.x;\n      //this.y = newPosition.y + this.deltaTouch.y;\n\n        stripA.draw()\n        stripB.draw()\n        stripALabel.draw()\n        stripBLabel.draw()\n\n      // Keep within number line bounds\n      if (this.x < WINDOW_WIDTH/2-LINE_WIDTH/2){\n        this.dragging = false\n        this.x = WINDOW_WIDTH/2-LINE_WIDTH/2\n      } else if (this.x > WINDOW_WIDTH/2+LINE_WIDTH/2) {\n        this.dragging = false\n        this.x = WINDOW_WIDTH/2+LINE_WIDTH/2\n      }\n    }\n  }\n\n  function makeArrowButton(inc){\n    let button = new PIXI.Sprite.from(CONST.ASSETS.ARROW)\n    button.inc = inc\n    button.interactive = true\n    button.anchor.set(0.5)\n    button.on('pointerdown',()=>{\n      numberLine.increment(inc)\n      resize(null,false)\n    })\n    //app.stage.addChild(button)\n\n    button.draw = () => {\n      if (button.inc == -5){\n        button.width = STRIP_HEIGHT/2\n        button.height = STRIP_HEIGHT/2\n        button.x = WINDOW_WIDTH - 1.1*button.width\n        button.y = WINDOW_HEIGHT/2 + 1/2*button.width\n        button.rotation = Math.PI\n      } else if (button.inc == 5){\n        button.width = STRIP_HEIGHT/2\n        button.height = STRIP_HEIGHT/2\n        button.x = WINDOW_WIDTH - 1.1*button.width\n        button.y = WINDOW_HEIGHT/2  - 1/2*button.width\n      }\n    }\n    return button\n  }\n \n  function makeStrip(id){\n    this.graphic = new PIXI.Graphics()\n    app.stage.addChild(this.graphic)\n    this.graphic.y = WINDOW_HEIGHT/2 - STRIP_HEIGHT\n    this.id = id\n\n\n    this.draw = (flex) => { \n      let t = LINE_THICKNESS/2\n      let {valA,valB} = state\n      if (this.id == 0){\n          let _x = LINE_START\n          let _y = WINDOW_HEIGHT/2 - STRIP_HEIGHT\n          let _h = STRIP_HEIGHT-1.5*t\n          let _w = Math.min(pinA.sprite.x,pinB.sprite.x) - LINE_START\n          if (flex){\n            TweenLite.to(this.graphic,1,{x: _x,y: _y,width: _w,height: _h+t})\n          } else {\n            this.graphic.clear()\n            this.graphic.lineStyle(t,CONST.COLORS.BLUE)\n            this.graphic.beginFill(CONST.COLORS.BLUE)\n            this.graphic.drawRoundedRect(0,0,_w,_h,_h/10)\n            this.graphic.width = _w \n            this.graphic.height = _h + t\n            this.graphic.x = _x\n            this.graphic.y = _y\n          }\n      } else if (this.id == 1) {\n          let w = Math.abs(pinA.sprite.x - pinB.sprite.x)\n          this.graphic.clear()\n          if (true) {\n            this.graphic.lineStyle(t,CONST.COLORS.BLUE)\n            this.graphic.y = WINDOW_HEIGHT/2 - STRIP_HEIGHT\n            this.graphic.drawRect(0,0,w,STRIP_HEIGHT-1.5*t)\n          } else {\n            this.graphic.lineStyle(2,CONST.COLORS.ORANGE)\n            this.graphic.beginFill(CONST.COLORS.ORANGE)\n            this.graphic.y = WINDOW_HEIGHT/2 - STRIP_HEIGHT - t/4\n            this.graphic.drawRoundedRect(0,0,w,STRIP_HEIGHT-t,STRIP_HEIGHT/10)\n            if(w == 0){\n              this.graphic.alpha = 0\n            } else {\n              this.graphic.alpha = 1\n            }\n          }\n          this.graphic.x = Math.min(pinA.sprite.x,pinB.sprite.x)\n      }\n      \n    }\n    this.draw(0,8*DX)\n  }\n\n  function globalPointerUp(){\n    // Ughhh...\n    pinA.sprite.dragging = false\n    pinB.sprite.dragging = false\n    pinA.sprite.round()\n    pinB.sprite.round()\n    stripA.draw()\n    stripB.draw()\n    stripALabel.draw()\n    stripBLabel.draw()\n  }\n  \n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n    app.renderer.resize(WINDOW_WIDTH,WINDOW_HEIGHT)\n    numberLine.draw()\n    backGround.draw()\n    pinA.draw()\n    pinB.draw()\n    stripA.draw(flex)\n    stripB.draw()\n    stripALabel.draw()\n    stripBLabel.draw()\n    incButton.draw()\n    decButton.draw()\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n    WINDOW_WIDTH = frame.width\n    WINDOW_HEIGHT = frame.height\n    H_W_RATIO = frame.height/frame.width\n    LANDSCAPE = H_W_RATIO < 3/4\n    ARENA_WIDTH = LANDSCAPE ? 4/3*frame.height : frame.width\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3/4*frame.width\n    LINE_WIDTH = LINE_PERCENTAGE*WINDOW_WIDTH\n    LINE_THICKNESS = LINE_WIDTH/200\n    TICK_THICKNESS = LINE_THICKNESS/2\n    MAJOR_TICK_HEIGHT = LINE_WIDTH/20\n    MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT/2\n    DX = LINE_WIDTH/state.lineMax\n    LINE_START = WINDOW_WIDTH/2 - LINE_WIDTH/2\n    STRIP_HEIGHT = LINE_WIDTH/12\n  }\n\n  // Loading Script\n  function load(){\n    let features = {'strips': true}\n    if (setup.props.features){\n      features = setup.props.features\n    }\n    backGround = new makeBackground()\n    numberLine = new makeNumberLine()\n    pinA = new makePin(0)\n    pinB = new makePin(1)\n    stripA = new makeStrip(0)\n    stripB = new makeStrip(1)\n    stripALabel = makeStripLabel(0)\n    stripBLabel = makeStripLabel(1)\n    incButton = makeArrowButton(5)\n    decButton = makeArrowButton(-5)\n    stripALabel.draw()\n    stripBLabel.draw()\n    incButton.draw()\n    decButton.draw()\n    \n  }\n\n  // Call load script\n  load()\n  // Not sure where else to put this.\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n};\n"]},"metadata":{},"sourceType":"module"}