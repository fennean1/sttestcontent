{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png';\nconst createjs = window.createjs;\nexport const init = (app, setup) => {\n  const WINDOW_WIDTH = setup.width;\n  const WINDOW_HEIGHT = setup.height;\n  let backGround = new PIXI.Sprite.from(blueGradient);\n  backGround.width = WINDOW_WIDTH;\n  backGround.height = WINDOW_HEIGHT;\n  backGround.x = 0;\n  backGround.y = 0;\n  backGround.alpha = 0;\n  app.stage.addChild(backGround);\n  createjs.Tween.get(backGround).to({\n    alpha: 1\n  }, 500, createjs.Ease.getPowInOut(4));\n  const BUILDER_STATES = {\n    SINGLE_BUILDER: 1,\n    DOUBLE_BUILDER: 2,\n    TRIPLE_BUILDER: 3,\n    QUADRUPLE_BUILDER: 4,\n    ORDERER: 5\n  };\n  const DIM = WINDOW_WIDTH / 12;\n  const dx = DIM / 2;\n  const LEFT_X = 3 / 4 * WINDOW_WIDTH;\n  const RIGHT_X = 1 / 4 * WINDOW_WIDTH;\n  const WINDOW_CENTER_X = WINDOW_WIDTH / 2;\n  const WINDOW_CENTER_Y = WINDOW_HEIGHT / 2;\n  const CONTAINER_WIDTH = WINDOW_WIDTH * 0.15;\n  const CONTAINER_HEIGHT = CONTAINER_WIDTH * 2;\n  const CONTAINER_TOP = 0;\n  const CONTAINER_BOTTOM = CONTAINER_HEIGHT;\n  const CONTAINER_LEFT = 0;\n  const CONTAINER_RIGHT = CONTAINER_WIDTH;\n  const TWELFTH_WIDTH = CONTAINER_WIDTH / 12;\n  const containers = [];\n  let toggleButton;\n\n  function layoutGridTools(numberOfTools) {\n    console.log(\"number of grid tools\", numberOfTools);\n\n    for (let i = 0; i < numberOfTools; i++) {\n      let x = WINDOW_WIDTH / 2 - CONTAINER_WIDTH * numberOfTools * 1.1 / 2 + CONTAINER_WIDTH * 1.1 * i;\n      let gridToolRight = createGridTool();\n      gridToolRight.interactive = true;\n      app.stage.addChild(gridToolRight);\n      gridToolRight.x = x;\n      gridToolRight.y = WINDOW_CENTER_Y - CONTAINER_HEIGHT / 3;\n      gridToolRight.on(\"pointerdown\", onToolStart).on(\"pointermove\", onToolMove).on(\"pointerup\", onToolEnd);\n      gridToolRight.originalLocation = [gridToolRight.x, gridToolRight.y];\n      containers.push(gridToolRight);\n    }\n  }\n\n  layoutGridTools(BUILDER_STATES.ORDERER);\n\n  function createGridTool() {\n    let grid = new PIXI.Container();\n    let currBlock = {};\n    currBlock.k = -1;\n    let vPlus = createCircleButton(CONST.ASSETS.PLUS);\n    grid.addChild(vPlus);\n    vPlus.y = CONTAINER_BOTTOM + DIM / 4;\n    vPlus.x = 3 * CONTAINER_WIDTH / 4;\n    let vMinus = createCircleButton(CONST.ASSETS.MINUS);\n    vMinus.y = CONTAINER_BOTTOM + DIM / 4;\n    vMinus.x = CONTAINER_WIDTH / 4;\n    grid.addChild(vMinus);\n    let hPlus = createCircleButton(CONST.ASSETS.PLUS);\n    hPlus.x = CONTAINER_RIGHT + DIM / 4;\n    hPlus.y = CONTAINER_HEIGHT / 2; //grid.addChild(hPlus)\n\n    let hMinus = createCircleButton(CONST.ASSETS.MINUS);\n    hMinus.x = CONTAINER_LEFT - DIM / 4;\n    hMinus.y = CONTAINER_HEIGHT / 2; //grid.addChild(hMinus)\n\n    let frac = createFraction(0, 1);\n    frac.x = (CONTAINER_RIGHT - CONTAINER_LEFT) / 2;\n    frac.y = CONTAINER_TOP - DIM / 8;\n    frac.interactive = true;\n    frac.on(\"pointerdown\", () => grid.validHit = true);\n    frac.on(\"pointerup\", () => grid.validHit = false);\n    grid.addChild(frac);\n    let cont = createContainer(CONTAINER_WIDTH, CONTAINER_HEIGHT);\n    grid.addChild(cont);\n    cont.x = CONTAINER_WIDTH / 2;\n    cont.y = CONTAINER_HEIGHT / 2;\n    cont.interactive = true;\n    cont.on(\"pointerdown\", createStack);\n    let fractions = [];\n    let horizontalLines = [];\n    let verticalLines = [];\n    let vPartitions = 0;\n    let hPartitions = 1;\n    let colorIndex = 0;\n    let colors = [CONST.COLORS.BLUE, CONST.COLORS.RED, CONST.COLORS.GREEN, CONST.COLORS.ORANGE, CONST.COLORS.PURPLE];\n    let colorLength = colors.length;\n\n    let currentColor = () => {\n      return colors[colorIndex % colorLength];\n    };\n\n    let currFrac = [0, 1];\n\n    const v_part_dim = () => {\n      return CONTAINER_HEIGHT / hPartitions;\n    };\n\n    const h_part_dim = () => {\n      return CONTAINER_WIDTH / vPartitions;\n    };\n    /*\n    const total_parts = () => {\n      hPartitions * vPartitions;\n    };\n    */\n    //initVerticalLines(1)\n\n\n    initHorizontalLines(1);\n    animateVerticalLines(1);\n    animateHorizontalLines(1);\n    vPlus.on(\"pointerdown\", () => animateHorizontalLines(1));\n    vMinus.on(\"pointerdown\", () => animateHorizontalLines(-1));\n    hPlus.on(\"pointerdown\", () => animateVerticalLines(1));\n    hMinus.on(\"pointerdown\", () => animateVerticalLines(-1)); //grid.addChild()\n    // Helpers\n\n    function hideGrid() {\n      let toHide = [...verticalLines, ...horizontalLines];\n      toHide.forEach(h => h.alpha = 0);\n    }\n\n    function bringLinesToFront() {\n      let lines = [...verticalLines, ...horizontalLines];\n      lines.forEach(l => grid.addChild(l));\n    } // Constructors\n\n\n    function createCircleButton(asset) {\n      let h = DIM / 2;\n      let w = DIM / 2;\n      let circleSprite = new PIXI.Sprite.from(asset);\n      circleSprite.alpha = 0.8;\n      circleSprite.anchor.set(0.5);\n      circleSprite.height = h;\n      circleSprite.width = w;\n      circleSprite.interactive = true;\n      return circleSprite;\n    }\n\n    function createStack(event) {\n      bringLinesToFront();\n      let hdim = h_part_dim();\n      let vdim = v_part_dim();\n      let pos = event.data.getLocalPosition(this.parent);\n      let i = Math.floor((pos.x - CONTAINER_LEFT) / hdim);\n      let j = Math.floor((pos.y - CONTAINER_TOP) / vdim);\n      let k = hPartitions - j;\n      console.log(\"vPartitions\", vPartitions);\n      console.log(\"hPartitions\", hPartitions);\n      console.log(\"k\", k);\n\n      if (false) {// do nothing\n      } else {\n        var block = new PIXI.Graphics();\n        block.beginFill(CONST.COLORS.BLUE);\n        block.drawRoundedRect(0, 0, hdim, CONTAINER_HEIGHT * k / hPartitions, 5);\n        currFrac = [k, hPartitions];\n        block.endFill();\n        block.x = 1;\n        block.y = 1;\n        let blockTexture = app.renderer.generateTexture(block);\n        let blockSprite = new PIXI.Sprite(blockTexture);\n        blockSprite.alpha = 0.5;\n        blockSprite.x = CONTAINER_WIDTH;\n        blockSprite.y = CONTAINER_HEIGHT;\n        blockSprite.anchor.set(1);\n        grid.removeChild(currBlock);\n\n        if (k == 1 && currBlock.k == 1) {\n          currBlock.k = 0;\n          currFrac[0] = 0;\n        } else {\n          grid.addChild(blockSprite);\n          blockSprite.k = k;\n          currBlock = blockSprite;\n        }\n\n        frac.write(currFrac[0], currFrac[1]);\n      }\n    }\n\n    function createContainer(width, height) {\n      let containerGraphic = new PIXI.Graphics();\n      containerGraphic.lineStyle(3, 0x000000);\n      containerGraphic.moveTo(0, 0);\n      containerGraphic.lineTo(0, height);\n      containerGraphic.lineTo(width, height);\n      containerGraphic.lineTo(width, 0);\n      containerGraphic.lineTo(0, 0);\n      containerGraphic.interactive = true;\n      containerGraphic.x = 1.5;\n      containerGraphic.y = 1.5;\n      let containerTexture = app.renderer.generateTexture(containerGraphic);\n      let containerSprite = new PIXI.Sprite(containerTexture);\n      containerSprite.anchor.set(0.5);\n      containerSprite.width = containerGraphic.width + 1.5;\n      containerSprite.height = containerGraphic.height + 1.5;\n      return containerSprite;\n    }\n\n    function initVerticalLines(partition) {\n      for (let i = 0; i < 11; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(0, CONTAINER_HEIGHT);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        verticalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function initHorizontalLines(partition) {\n      for (let i = 0; i < 11; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(CONTAINER_WIDTH, 0);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        horizontalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function animateVerticalLines(inc) {\n      vPartitions += inc;\n\n      if (vPartitions != 0 && vPartitions != 11) {\n        colorIndex += 1;\n        let spacing = CONTAINER_WIDTH / vPartitions;\n        verticalLines.forEach((l, i) => {\n          grid.addChild(l);\n\n          if (i > vPartitions) {\n            createjs.Tween.get(l).to({\n              x: CONTAINER_RIGHT\n            }, 500, createjs.Ease.getPowInOut(4));\n          } else {\n            createjs.Tween.get(l).to({\n              x: i * spacing + CONTAINER_LEFT\n            }, 500, createjs.Ease.getPowInOut(4));\n          }\n        });\n      } else {\n        vPartitions -= inc;\n      }\n    }\n\n    function animateHorizontalLines(inc) {\n      console.log(\"ANIMATING horizontalLines\");\n      hPartitions += inc;\n\n      if (hPartitions != 0 && hPartitions != 11) {\n        currFrac[1] = hPartitions;\n\n        if (currFrac[0] > hPartitions) {\n          currFrac[0] = hPartitions;\n        }\n\n        let dim = h_part_dim();\n        createjs.Tween.get(currBlock).to({\n          height: CONTAINER_HEIGHT * currFrac[0] / currFrac[1]\n        }, 500, createjs.Ease.getPowInOut(4));\n        colorIndex += 1;\n        let spacing = CONTAINER_HEIGHT / hPartitions;\n        horizontalLines.forEach((l, i) => {\n          grid.addChild(l);\n\n          if (i > hPartitions) {\n            createjs.Tween.get(l).to({\n              y: CONTAINER_BOTTOM\n            }, 500, createjs.Ease.getPowInOut(4));\n          } else {\n            createjs.Tween.get(l).to({\n              y: i * spacing + CONTAINER_TOP\n            }, 500, createjs.Ease.getPowInOut(4));\n          }\n        });\n      } else {\n        hPartitions -= inc;\n      }\n\n      frac.write(currFrac[0], currFrac[1]);\n    }\n\n    function onFracStart(event) {\n      bringLinesToFront();\n      let touchedAtX = event.data.getLocalPosition(this.parent).x;\n      let touchedAtY = event.data.getLocalPosition(this.parent).y;\n      this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n      grid.addChild(this);\n      this.data = event.data;\n      this.dragging = true;\n    }\n\n    function round(val, origin) {\n      let i = Math.round(Math.abs(val - origin) / (CONTAINER_WIDTH / 12));\n      return origin + i * CONTAINER_WIDTH / 12;\n    }\n\n    function onFracEnd() {\n      this.data = null;\n      this.dragging = false;\n\n      if (this.y + this.height > WINDOW_HEIGHT) {\n        let i = fractions.indexOf(this);\n        fractions.splice(i, 1);\n        app.stage.removeChild(this);\n      }\n\n      let x = round(this.x, grid.x);\n      let y = round(this.y, grid.y);\n    }\n\n    function onFracMove() {\n      if (this.dragging) {\n        let pointerPosition = this.data.getLocalPosition(this.parent);\n        this.y = pointerPosition.y + this.deltaTouch[1];\n        this.x = pointerPosition.x + this.deltaTouch[0];\n      }\n    }\n\n    return grid;\n  }\n\n  function createFraction(n, d) {\n    let sf = 0.4;\n    let tileContainer = new PIXI.Container();\n    let whole = d == 1 ? true : false;\n    let h = 2 * DIM;\n    let w = DIM;\n    h = h * sf;\n    w = w * sf;\n    var block = new PIXI.Graphics(); //block.lineStyle(3, 0x000000, 2);\n\n    block.beginFill(0xffffff);\n    block.drawRoundedRect(0, 0, 1.2 * w, 1.2 * h, 5);\n    block.endFill();\n    block.x = 1;\n    block.y = 1;\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5); // All or only some of these may exist depending on if we're using a \"whole\" or not.\n\n    let mid;\n    let num;\n    let den;\n\n    if (true) {\n      mid = new PIXI.Graphics();\n      mid.lineStyle(4, 0x000000, 2);\n      mid.moveTo(-w / 2, 0);\n      mid.lineTo(w / 2, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -w / 2;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = w / 2;\n    } else {\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: 12,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = 0;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.border = tile; // Line style appears grey unless we add this after the prefious if block - not sure why.\n\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n    tileContainer.x = DIM;\n    tileContainer.y = 0; // Objects\n\n    tileContainer.d = den;\n    tileContainer.n = num; // Values\n\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = DIM / 2;\n    tileContainer.onLine = false;\n    tileContainer.alpha = 0.9;\n\n    tileContainer.write = (n, d) => {\n      num.text = n;\n      den.text = d;\n    };\n\n    return tileContainer;\n  }\n\n  function toggleMode() {} // Helpers\n\n\n  function pointInRect(p, rect) {\n    // This is for a rect with anchor in center\n    let top = rect.y - rect.height * rect.anchor;\n    let bottom = rect.y + rect.height * rect.anchor;\n    let left = rect.x - rect.width * rect.anchor;\n    let right = rect.x + rect.width * rect.anchor;\n    let c1 = p.x < right;\n    let c2 = p.x > left;\n    let c3 = p.y < bottom;\n    let c4 = p.y > top;\n    return c1 && c2 && c3 && c4;\n  }\n\n  function onToolStart(event) {\n    app.stage.addChild(this);\n\n    if (this.validHit) {\n      let touchedAtX = event.data.getLocalPosition(this.parent).x;\n      let touchedAtY = event.data.getLocalPosition(this.parent).y;\n      this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n      this.data = event.data;\n      this.dragging = true;\n    }\n  }\n\n  function round(val, origin) {\n    let i = Math.round(Math.abs(val - origin) / (CONTAINER_WIDTH / 12));\n    return origin + i * CONTAINER_WIDTH / 12;\n  }\n\n  function onToolEnd() {\n    console.log(\"FRAC ENDED\");\n    this.data = null;\n    this.dragging = false;\n\n    for (let c of containers) {\n      if (c != this) {\n        if (inRect(this, c)) {\n          let newThis = c.originalLocation;\n          let newC = this.originalLocation;\n          this.originalLocation = newThis;\n          c.originalLocation = newC;\n          console.log(\"IN RECT!!!!!!!!\");\n          createjs.Tween.get(c).to({\n            x: newC[0]\n          }, 500, createjs.Ease.getPowInOut(4));\n          createjs.Tween.get(this).to({\n            x: newThis[0]\n          }, 500, createjs.Ease.getPowInOut(4));\n        }\n      }\n    }\n  }\n\n  function inRect(a, b) {\n    let dx = a.x - b.x;\n    let dy = a.y - b.y;\n    let d = Math.sqrt(dx * dx + dy * dy);\n\n    if (d < CONTAINER_WIDTH / 2) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function onToolMove() {\n    if (this.dragging) {\n      let pointerPosition = this.data.getLocalPosition(this.parent); //this.y = pointerPosition.y + this.deltaTouch[1];\n\n      this.x = pointerPosition.x + this.deltaTouch[0];\n    }\n  }\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/orderingtool.js"],"names":["PIXI","blueGradient","CONST","QuestionMark","createjs","window","init","app","setup","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","backGround","Sprite","from","x","y","alpha","stage","addChild","Tween","get","to","Ease","getPowInOut","BUILDER_STATES","SINGLE_BUILDER","DOUBLE_BUILDER","TRIPLE_BUILDER","QUADRUPLE_BUILDER","ORDERER","DIM","dx","LEFT_X","RIGHT_X","WINDOW_CENTER_X","WINDOW_CENTER_Y","CONTAINER_WIDTH","CONTAINER_HEIGHT","CONTAINER_TOP","CONTAINER_BOTTOM","CONTAINER_LEFT","CONTAINER_RIGHT","TWELFTH_WIDTH","containers","toggleButton","layoutGridTools","numberOfTools","console","log","i","gridToolRight","createGridTool","interactive","on","onToolStart","onToolMove","onToolEnd","originalLocation","push","grid","Container","currBlock","k","vPlus","createCircleButton","ASSETS","PLUS","vMinus","MINUS","hPlus","hMinus","frac","createFraction","validHit","cont","createContainer","createStack","fractions","horizontalLines","verticalLines","vPartitions","hPartitions","colorIndex","colors","COLORS","BLUE","RED","GREEN","ORANGE","PURPLE","colorLength","length","currentColor","currFrac","v_part_dim","h_part_dim","initHorizontalLines","animateVerticalLines","animateHorizontalLines","hideGrid","toHide","forEach","h","bringLinesToFront","lines","l","asset","w","circleSprite","anchor","set","event","hdim","vdim","pos","data","getLocalPosition","parent","Math","floor","j","block","Graphics","beginFill","drawRoundedRect","endFill","blockTexture","renderer","generateTexture","blockSprite","removeChild","write","containerGraphic","lineStyle","moveTo","lineTo","containerTexture","containerSprite","initVerticalLines","partition","g","inc","spacing","dim","onFracStart","touchedAtX","touchedAtY","deltaTouch","dragging","round","val","origin","abs","onFracEnd","indexOf","splice","onFracMove","pointerPosition","n","d","sf","tileContainer","whole","tile","mid","num","den","Text","fontFamily","fontSize","fill","align","border","active","_d","_n","isSet","pivot","onLine","text","toggleMode","pointInRect","p","rect","top","bottom","left","right","c1","c2","c3","c4","c","inRect","newThis","newC","a","b","dy","sqrt"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png'\nconst createjs = window.createjs\n\nexport const init = (app, setup) => {\n\nconst WINDOW_WIDTH = setup.width\nconst WINDOW_HEIGHT = setup.height\n\nlet backGround = new PIXI.Sprite.from(blueGradient);\nbackGround.width = WINDOW_WIDTH;\nbackGround.height = WINDOW_HEIGHT;\nbackGround.x = 0;\nbackGround.y = 0;\nbackGround.alpha = 0;\napp.stage.addChild(backGround);\ncreatejs.Tween.get(backGround).to(\n  {\n    alpha: 1\n  },\n  500,\n  createjs.Ease.getPowInOut(4)\n);\n\nconst BUILDER_STATES = {\n  SINGLE_BUILDER: 1,\n  DOUBLE_BUILDER: 2,\n  TRIPLE_BUILDER: 3,\n  QUADRUPLE_BUILDER: 4,\n  ORDERER: 5\n};\n\nconst DIM = WINDOW_WIDTH / 12;\nconst dx = DIM/2\nconst LEFT_X = (3 / 4) * WINDOW_WIDTH;\nconst RIGHT_X = (1 / 4) * WINDOW_WIDTH;\nconst WINDOW_CENTER_X = WINDOW_WIDTH / 2;\nconst WINDOW_CENTER_Y = WINDOW_HEIGHT / 2;\nconst CONTAINER_WIDTH = WINDOW_WIDTH * 0.15;\nconst CONTAINER_HEIGHT = CONTAINER_WIDTH * 2;\nconst CONTAINER_TOP = 0;\nconst CONTAINER_BOTTOM = CONTAINER_HEIGHT;\nconst CONTAINER_LEFT = 0;\nconst CONTAINER_RIGHT = CONTAINER_WIDTH;\nconst TWELFTH_WIDTH = CONTAINER_WIDTH / 12;\n\nconst containers = [];\n\nlet toggleButton;\n\n\nfunction layoutGridTools(numberOfTools) {\n  console.log(\"number of grid tools\", numberOfTools);\n  for (let i = 0; i < numberOfTools; i++) {\n    let x =\n      WINDOW_WIDTH / 2 -\n      (CONTAINER_WIDTH * numberOfTools * 1.1) / 2 +\n      CONTAINER_WIDTH * 1.1 * i;\n    let gridToolRight = createGridTool();\n    gridToolRight.interactive = true;\n    app.stage.addChild(gridToolRight);\n    gridToolRight.x = x;\n    gridToolRight.y = WINDOW_CENTER_Y - CONTAINER_HEIGHT / 3;\n    gridToolRight\n      .on(\"pointerdown\", onToolStart)\n      .on(\"pointermove\", onToolMove)\n      .on(\"pointerup\", onToolEnd);\n    gridToolRight.originalLocation = [gridToolRight.x, gridToolRight.y];\n    containers.push(gridToolRight);\n  }\n}\n\nlayoutGridTools(BUILDER_STATES.ORDERER);\n\n\nfunction createGridTool() {\n  let grid = new PIXI.Container();\n\n  let currBlock = {};\n  currBlock.k = -1;\n\n  let vPlus = createCircleButton(CONST.ASSETS.PLUS);\n  grid.addChild(vPlus);\n  vPlus.y = CONTAINER_BOTTOM + DIM / 4;\n  vPlus.x = (3 * CONTAINER_WIDTH) / 4;\n\n  let vMinus = createCircleButton(CONST.ASSETS.MINUS);\n  vMinus.y = CONTAINER_BOTTOM + DIM / 4;\n  vMinus.x = CONTAINER_WIDTH / 4;\n  grid.addChild(vMinus);\n\n  let hPlus = createCircleButton(CONST.ASSETS.PLUS);\n  hPlus.x = CONTAINER_RIGHT + DIM / 4;\n  hPlus.y = CONTAINER_HEIGHT / 2;\n  //grid.addChild(hPlus)\n\n  let hMinus = createCircleButton(CONST.ASSETS.MINUS);\n  hMinus.x = CONTAINER_LEFT - DIM / 4;\n  hMinus.y = CONTAINER_HEIGHT / 2;\n  //grid.addChild(hMinus)\n\n  let frac = createFraction(0, 1);\n  frac.x = (CONTAINER_RIGHT - CONTAINER_LEFT) / 2;\n  frac.y = CONTAINER_TOP - DIM / 8;\n  frac.interactive = true;\n  frac.on(\"pointerdown\", () => (grid.validHit = true));\n  frac.on(\"pointerup\", () => (grid.validHit = false));\n  grid.addChild(frac);\n\n  let cont = createContainer(CONTAINER_WIDTH, CONTAINER_HEIGHT);\n  grid.addChild(cont);\n  cont.x = CONTAINER_WIDTH / 2;\n  cont.y = CONTAINER_HEIGHT / 2;\n  cont.interactive = true;\n  cont.on(\"pointerdown\", createStack);\n\n  let fractions = [];\n  let horizontalLines = [];\n  let verticalLines = [];\n  let vPartitions = 0;\n  let hPartitions = 1;\n  let colorIndex = 0;\n  let colors = [\n    CONST.COLORS.BLUE,\n    CONST.COLORS.RED,\n    CONST.COLORS.GREEN,\n    CONST.COLORS.ORANGE,\n    CONST.COLORS.PURPLE\n  ];\n  let colorLength = colors.length;\n  let currentColor = () => {\n    return colors[colorIndex % colorLength];\n  };\n  let currFrac = [0, 1];\n\n  const v_part_dim = () => {\n    return CONTAINER_HEIGHT / hPartitions;\n  };\n\n  const h_part_dim = () => {\n    return CONTAINER_WIDTH / vPartitions;\n  };\n\n  /*\n  const total_parts = () => {\n    hPartitions * vPartitions;\n  };\n  */\n\n  //initVerticalLines(1)\n  initHorizontalLines(1);\n  animateVerticalLines(1);\n  animateHorizontalLines(1);\n\n  vPlus.on(\"pointerdown\", () => animateHorizontalLines(1));\n  vMinus.on(\"pointerdown\", () => animateHorizontalLines(-1));\n  hPlus.on(\"pointerdown\", () => animateVerticalLines(1));\n  hMinus.on(\"pointerdown\", () => animateVerticalLines(-1));\n\n  //grid.addChild()\n\n  // Helpers\n\n  function hideGrid() {\n    let toHide = [...verticalLines, ...horizontalLines];\n    toHide.forEach(h => (h.alpha = 0));\n  }\n\n  function bringLinesToFront() {\n    let lines = [...verticalLines, ...horizontalLines];\n    lines.forEach(l => grid.addChild(l));\n  }\n\n  // Constructors\n  function createCircleButton(asset) {\n    let h = DIM / 2;\n    let w = DIM / 2;\n\n    let circleSprite = new PIXI.Sprite.from(asset);\n    circleSprite.alpha = 0.8;\n    circleSprite.anchor.set(0.5);\n    circleSprite.height = h \n    circleSprite.width = w\n    circleSprite.interactive = true\n    return circleSprite;\n  }\n\n  function createStack(event) {\n    bringLinesToFront();\n\n    let hdim = h_part_dim();\n    let vdim = v_part_dim();\n    let pos = event.data.getLocalPosition(this.parent);\n    let i = Math.floor((pos.x - CONTAINER_LEFT) / hdim);\n    let j = Math.floor((pos.y - CONTAINER_TOP) / vdim);\n    let k = hPartitions - j;\n    console.log(\"vPartitions\", vPartitions);\n    console.log(\"hPartitions\", hPartitions);\n    console.log(\"k\", k);\n    if (false) {\n      // do nothing\n    } else {\n      var block = new PIXI.Graphics();\n      block.beginFill(CONST.COLORS.BLUE);\n      block.drawRoundedRect(\n        0,\n        0,\n        hdim,\n        (CONTAINER_HEIGHT * k) / hPartitions,\n        5\n      );\n      currFrac = [k, hPartitions];\n      block.endFill();\n      block.x = 1;\n      block.y = 1;\n\n      let blockTexture = app.renderer.generateTexture(block);\n      let blockSprite = new PIXI.Sprite(blockTexture);\n      blockSprite.alpha = 0.5;\n\n      blockSprite.x = CONTAINER_WIDTH;\n      blockSprite.y = CONTAINER_HEIGHT;\n      blockSprite.anchor.set(1);\n      grid.removeChild(currBlock);\n\n      if (k == 1 && currBlock.k == 1) {\n        currBlock.k = 0;\n        currFrac[0] = 0;\n      } else {\n        grid.addChild(blockSprite);\n        blockSprite.k = k;\n        currBlock = blockSprite;\n      }\n      frac.write(currFrac[0], currFrac[1]);\n    }\n  }\n\n  function createContainer(width, height) {\n    let containerGraphic = new PIXI.Graphics();\n    containerGraphic.lineStyle(3, 0x000000);\n    containerGraphic.moveTo(0, 0);\n    containerGraphic.lineTo(0, height);\n    containerGraphic.lineTo(width, height);\n    containerGraphic.lineTo(width, 0);\n    containerGraphic.lineTo(0, 0);\n    containerGraphic.interactive = true;\n    containerGraphic.x = 1.5;\n    containerGraphic.y = 1.5;\n\n    let containerTexture = app.renderer.generateTexture(containerGraphic);\n    let containerSprite = new PIXI.Sprite(containerTexture);\n    containerSprite.anchor.set(0.5);\n    containerSprite.width = containerGraphic.width + 1.5;\n    containerSprite.height = containerGraphic.height + 1.5;\n    return containerSprite;\n  }\n\n  function initVerticalLines(partition) {\n    for (let i = 0; i < 11; i++) {\n      let g = new PIXI.Graphics();\n      g.lineStyle(3, 0x000000);\n      g.lineTo(0, CONTAINER_HEIGHT);\n      g.y = CONTAINER_TOP;\n      g.x = CONTAINER_LEFT;\n      verticalLines.push(g);\n      grid.addChild(g);\n    }\n  }\n\n  function initHorizontalLines(partition) {\n    for (let i = 0; i < 11; i++) {\n      let g = new PIXI.Graphics();\n      g.lineStyle(3, 0x000000);\n      g.lineTo(CONTAINER_WIDTH, 0);\n      g.y = CONTAINER_TOP;\n      g.x = CONTAINER_LEFT;\n      horizontalLines.push(g);\n      grid.addChild(g);\n    }\n  }\n\n  function animateVerticalLines(inc) {\n    vPartitions += inc;\n    if (vPartitions != 0 && vPartitions != 11) {\n      colorIndex += 1;\n\n      let spacing = CONTAINER_WIDTH / vPartitions;\n\n      verticalLines.forEach((l, i) => {\n        grid.addChild(l);\n        if (i > vPartitions) {\n          createjs.Tween.get(l).to(\n            {\n              x: CONTAINER_RIGHT\n            },\n            500,\n            createjs.Ease.getPowInOut(4)\n          );\n        } else {\n          createjs.Tween.get(l).to(\n            {\n              x: i * spacing + CONTAINER_LEFT\n            },\n            500,\n            createjs.Ease.getPowInOut(4)\n          );\n        }\n      });\n    } else {\n      vPartitions -= inc;\n    }\n  }\n\n  function animateHorizontalLines(inc) {\n    console.log(\"ANIMATING horizontalLines\");\n    hPartitions += inc;\n    if (hPartitions != 0 && hPartitions != 11) {\n      currFrac[1] = hPartitions;\n      if (currFrac[0] > hPartitions) {\n        currFrac[0] = hPartitions;\n      }\n\n      let dim = h_part_dim();\n      createjs.Tween.get(currBlock).to(\n        {\n          height: (CONTAINER_HEIGHT * currFrac[0]) / currFrac[1]\n        },\n        500,\n        createjs.Ease.getPowInOut(4)\n      );\n\n      colorIndex += 1;\n\n      let spacing = CONTAINER_HEIGHT / hPartitions;\n\n      horizontalLines.forEach((l, i) => {\n        grid.addChild(l);\n        if (i > hPartitions) {\n          createjs.Tween.get(l).to(\n            {\n              y: CONTAINER_BOTTOM\n            },\n            500,\n            createjs.Ease.getPowInOut(4)\n          );\n        } else {\n          createjs.Tween.get(l).to(\n            {\n              y: i * spacing + CONTAINER_TOP\n            },\n            500,\n            createjs.Ease.getPowInOut(4)\n          );\n        }\n      });\n    } else {\n      hPartitions -= inc;\n    }\n\n    frac.write(currFrac[0], currFrac[1]);\n  }\n\n  function onFracStart(event) {\n    bringLinesToFront();\n    let touchedAtX = event.data.getLocalPosition(this.parent).x;\n    let touchedAtY = event.data.getLocalPosition(this.parent).y;\n    this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n    grid.addChild(this);\n    this.data = event.data;\n    this.dragging = true;\n  }\n\n  function round(val, origin) {\n    let i = Math.round(Math.abs(val - origin) / (CONTAINER_WIDTH / 12));\n    return origin + (i * CONTAINER_WIDTH) / 12;\n  }\n\n  function onFracEnd() {\n    this.data = null;\n    this.dragging = false;\n    if (this.y + this.height > WINDOW_HEIGHT) {\n      let i = fractions.indexOf(this);\n      fractions.splice(i, 1);\n      app.stage.removeChild(this);\n    }\n\n    let x = round(this.x, grid.x);\n    let y = round(this.y, grid.y);\n  }\n\n  function onFracMove() {\n    if (this.dragging) {\n      let pointerPosition = this.data.getLocalPosition(this.parent);\n      this.y = pointerPosition.y + this.deltaTouch[1];\n      this.x = pointerPosition.x + this.deltaTouch[0];\n    }\n  }\n\n  return grid;\n}\n\nfunction createFraction(n, d) {\n  let sf = 0.4;\n\n  let tileContainer = new PIXI.Container();\n\n  let whole = d == 1 ? true : false;\n\n  let h = 2 * DIM;\n  let w = DIM;\n  h = h * sf;\n  w = w * sf;\n\n  var block = new PIXI.Graphics();\n  //block.lineStyle(3, 0x000000, 2);\n  block.beginFill(0xffffff);\n  block.drawRoundedRect(0, 0, 1.2 * w, 1.2 * h, 5);\n  block.endFill();\n  block.x = 1;\n  block.y = 1;\n\n  var blockTexture = app.renderer.generateTexture(block);\n  let tile = new PIXI.Sprite(blockTexture);\n  tile.anchor.set(0.5);\n\n  // All or only some of these may exist depending on if we're using a \"whole\" or not.\n  let mid;\n  let num;\n  let den;\n\n  if (true) {\n    mid = new PIXI.Graphics();\n    mid.lineStyle(4, 0x000000, 2);\n    mid.moveTo(-w / 2, 0);\n    mid.lineTo(w / 2, 0);\n    num = new PIXI.Text(n, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: w,\n      fill: 0x000000,\n      align: \"center\"\n    });\n    num.anchor.set(0.5);\n    num.y = -w / 2;\n    den = new PIXI.Text(d, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: w,\n      fill: 0x000000,\n      align: \"center\"\n    });\n    den.anchor.set(0.5);\n    den.y = w / 2;\n  } else {\n    num = new PIXI.Text(n, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: 12,\n      fill: 0x000000,\n      align: \"center\"\n    });\n    num.anchor.set(0.5);\n    num.y = 0;\n  }\n\n  tileContainer.addChild(tile);\n  tileContainer.addChild(num);\n  tileContainer.border = tile;\n\n  // Line style appears grey unless we add this after the prefious if block - not sure why.\n  if (mid) {\n    tileContainer.addChild(mid);\n    tileContainer.addChild(den);\n  }\n\n  tileContainer.active = false;\n  tileContainer.interactive = true;\n\n  tileContainer.x = DIM;\n  tileContainer.y = 0;\n  // Objects\n  tileContainer.d = den;\n  tileContainer.n = num;\n  // Values\n  tileContainer._d = d;\n  tileContainer._n = n;\n  tileContainer.isSet = false;\n  tileContainer.pivot.x = 0;\n  tileContainer.pivot.y = DIM / 2;\n  tileContainer.onLine = false;\n  tileContainer.alpha = 0.9;\n\n  tileContainer.write = (n, d) => {\n    num.text = n;\n    den.text = d;\n  };\n  return tileContainer;\n}\n\nfunction toggleMode() {}\n\n// Helpers\nfunction pointInRect(p, rect) {\n  // This is for a rect with anchor in center\n\n  let top = rect.y - rect.height * rect.anchor;\n  let bottom = rect.y + rect.height * rect.anchor;\n  let left = rect.x - rect.width * rect.anchor;\n  let right = rect.x + rect.width * rect.anchor;\n\n  let c1 = p.x < right;\n  let c2 = p.x > left;\n  let c3 = p.y < bottom;\n  let c4 = p.y > top;\n\n  return c1 && c2 && c3 && c4;\n}\n\nfunction onToolStart(event) {\n  app.stage.addChild(this);\n  if (this.validHit) {\n    let touchedAtX = event.data.getLocalPosition(this.parent).x;\n    let touchedAtY = event.data.getLocalPosition(this.parent).y;\n    this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n    this.data = event.data;\n    this.dragging = true;\n  }\n}\n\nfunction round(val, origin) {\n  let i = Math.round(Math.abs(val - origin) / (CONTAINER_WIDTH / 12));\n  return origin + (i * CONTAINER_WIDTH) / 12;\n}\n\nfunction onToolEnd() {\n  console.log(\"FRAC ENDED\");\n  this.data = null;\n  this.dragging = false;\n\n  for (let c of containers) {\n    if (c != this) {\n      if (inRect(this, c)) {\n        let newThis = c.originalLocation;\n        let newC = this.originalLocation;\n        this.originalLocation = newThis;\n        c.originalLocation = newC;\n        console.log(\"IN RECT!!!!!!!!\");\n        createjs.Tween.get(c).to(\n          {\n            x: newC[0]\n          },\n          500,\n          createjs.Ease.getPowInOut(4)\n        );\n        createjs.Tween.get(this).to(\n          {\n            x: newThis[0]\n          },\n          500,\n          createjs.Ease.getPowInOut(4)\n        );\n      }\n    }\n  }\n}\n\nfunction inRect(a, b) {\n  let dx = a.x - b.x;\n  let dy = a.y - b.y;\n  let d = Math.sqrt(dx * dx + dy * dy);\n  if (d < CONTAINER_WIDTH / 2) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction onToolMove() {\n  if (this.dragging) {\n    let pointerPosition = this.data.getLocalPosition(this.parent);\n    //this.y = pointerPosition.y + this.deltaTouch[1];\n    this.x = pointerPosition.x + this.deltaTouch[0];\n  }\n}\n\n\n};\n"]},"metadata":{},"sourceType":"module"}