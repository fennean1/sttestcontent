{"ast":null,"code":"// Problem que setup\nimport * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport plusButton from \"../assets/Plus.png\";\nimport minusButton from \"../assets/Minus.png\";\nimport QuestionMark from '../assets/QuestionMark.png';\nexport const init = (app, setup) => {\n  // Parameters (Only changes on resize)\n  let heightToWidthRatio = setup.height / setup.width;\n  let LANDSCAPE = heightToWidthRatio < 3 / 4;\n  let ARENA_WIDTH = LANDSCAPE ? 4 / 3 * setup.height : setup.width;\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3 / 4 * setup.width;\n  let dx = setup.width / 20;\n  let backGround = new PIXI.Sprite.from(blueGradient);\n  backGround.width = setup.width;\n  backGround.height = setup.height;\n  backGround.interactive = true;\n  backGround.static = false;\n\n  if (true) {\n    app.stage.addChild(backGround);\n  }\n\n  window.createjs.Tween.get(backGround).to({\n    alpha: 1\n  }, 500, window.createjs.Ease.getPowInOut(4)); // CONSTANTS\n\n  const dim = setup.width / 12;\n  const centerLine = setup.height / 2;\n  const lineWidth = 10 * dim;\n  const topMargin = 3 / 4 * dim;\n  const pinkCircle = new PIXI.Graphics();\n  pinkCircle.lineStyle(2, 0x000000, 2);\n  pinkCircle.beginFill(CONST.COLORS.GRAY);\n  pinkCircle.drawCircle(dim / 5 + 1, dim / 5 + 1, dim / 5);\n  pinkCircle.endFill();\n  const blueCircle = new PIXI.Graphics();\n  blueCircle.lineStyle(2, 0x000000, 2);\n  blueCircle.beginFill(CONST.COLORS.BLUE);\n  blueCircle.drawCircle(dim / 5 + 1, dim / 5 + 1, dim / 5);\n  blueCircle.endFill(); // CONSTANTS\n\n  const DIM = setup.width / 12;\n  const NUMBERLINE_CENTER_Y = 3 * DIM;\n  const LINE_WIDTH = 10 * DIM;\n  const LEFT_X = 3 / 4 * setup.width;\n  const RIGHT_X = 1 / 4 * setup.width;\n  const WINDOW_CENTER_X = setup.width / 2;\n  const WINDOW_CENTER_Y = setup.width / 2;\n  const CONTAINER_WIDTH = LINE_WIDTH;\n  const CONTAINER_HEIGHT = CONTAINER_WIDTH / 12;\n  const CONTAINER_TOP = 0;\n  const CONTAINER_BOTTOM = CONTAINER_HEIGHT;\n  const CONTAINER_LEFT = 0;\n  const CONTAINER_RIGHT = CONTAINER_WIDTH;\n  const TWELFTH_WIDTH = CONTAINER_WIDTH / 12; // NUMBERLINE STATE\n\n  let ticksPerWhole = 1;\n  let maxValue = 10;\n  let ticksOnLine = [];\n  let labelsOnLine = [];\n  let pauseClick = false;\n  let expectedPins = 0; // STATE VARIABLES\n\n  let blocksOnLine = []; // Temp storage for feedback logic\n\n  let pinsCurrentlySet = [];\n  let feedBlocks;\n  let pinsOffLineCount = 0;\n  let presetPins = [];\n  let presetLabels = [];\n  let pinsInPlay = [];\n  let problemIndex = 0;\n  let feedBackLabels = [];\n  let blocksInWidget = [];\n  let firstTry = true;\n  let pinWidget = {};\n  let activeEntity = new PIXI.Sprite();\n  let lineMax; // Max value of the line\n\n  let wholeWidth; // physical width of \"one whole\" on the number line\n\n  let minStep; // Minmum block width for measuring or placing pins/labels\n\n  let originalMinStep;\n  let currentProblem;\n  let dT; // So i don't lose a reference to this shit when I'm resetting the game\n\n  let globalPinRef = [];\n  let globalLabelRef = [];\n  let activityQue;\n  let gridTool = createGridTool();\n  app.stage.addChild(gridTool);\n  gridTool.x = DIM;\n  gridTool.y = NUMBERLINE_CENTER_Y - CONTAINER_HEIGHT;\n\n  function drawLabels(n) {\n    for (let i = 0; i < n; i++) {\n      let lbl = createPureLbl([i, 1]);\n      labelsOnLine.push(lbl);\n      app.stage.addChild(lbl);\n      flipLbl(lbl);\n      lbl.x = DIM + LINE_WIDTH / (n - 1) * i;\n      lbl.y = NUMBERLINE_CENTER_Y;\n    }\n  }\n\n  drawLabels(11);\n\n  function initTicks(numberOfTicks) {\n    let ticks = [];\n    let tickSpace = lineWidth / (numberOfTicks - 1);\n\n    for (let i = 0; i < numberOfTicks; i++) {\n      let t = createTick(i, 0);\n      ticks.push(t);\n      app.stage.addChild(t);\n    }\n\n    ticksOnLine = ticks;\n  } //initTicks(31)\n\n\n  function animateTicks(n) {\n    let dx = LINE_WIDTH / n;\n\n    for (let i = 0; i < ticksOnLine.length; i++) {\n      if (i <= n) {\n        ticksOnLine[i].alpha = 1;\n        window.createjs.Tween.get(ticksOnLine[i]).to({\n          x: DIM + i * dx\n        }, 1000, window.createjs.Ease.getPowInOut(4));\n      } else if (i > n) {\n        window.createjs.Tween.get(ticksOnLine[i]).to({\n          alpha: 0,\n          x: DIM + LINE_WIDTH\n        }, 1000, window.createjs.Ease.getPowInOut(4));\n      }\n    }\n  }\n\n  animateTicks(10);\n\n  function animateLabels(max) {\n    pauseClick = true;\n    let lblsToAdd = [];\n    let n = Math.max(max, labelsOnLine.length); // console.log(\"n\", n);\n\n    for (let i = 0; i <= n; i++) {\n      // console.log(\"i\", i);\n      if (i < labelsOnLine.length) {\n        window.createjs.Tween.get(labelsOnLine[i]).to({\n          x: DIM + i * LINE_WIDTH / max\n        }, 300, window.createjs.Ease.getPowInOut(4)).call(() => {\n          pauseClick = false;\n        });\n      }\n\n      if (i >= labelsOnLine.length && i <= max) {\n        // console.log(\"APPENDING LABEL\");\n        let lbl = createPureLbl([i, 1]);\n        lblsToAdd.push(lbl);\n        app.stage.addChild(lbl);\n        lbl.x = LINE_WIDTH + DIM;\n        flipLbl(lbl);\n        lbl.y = NUMBERLINE_CENTER_Y;\n        window.createjs.Tween.get(lbl).to({\n          x: DIM + i * LINE_WIDTH / max\n        }, 300, window.createjs.Ease.getPowInOut(4)).call(() => {\n          labelsOnLine.push(...lblsToAdd);\n        });\n      }\n\n      if (i > max && i < labelsOnLine.length) {\n        window.createjs.Tween.get(labelsOnLine[i]).to({\n          alpha: 0\n        }, 300, window.createjs.Ease.getPowInOut(4)).call(() => {\n          app.stage.removeChild(labelsOnLine[i]);\n          removeElement(labelsOnLine[i], labelsOnLine);\n        });\n      }\n    } // console.log(\"labelsOnLine.length\", labelsOnLine.length);\n\n  }\n\n  let lblsPlusButton = createActionButton(\"+\", () => {\n    if (!pauseClick) {\n      animateLabels(labelsOnLine.length);\n    }\n  });\n  app.stage.addChild(lblsPlusButton);\n  lblsPlusButton.x = DIM + LINE_WIDTH;\n  lblsPlusButton.y = NUMBERLINE_CENTER_Y + DIM;\n  let lblsMinusButton = createActionButton(\"-\", () => {\n    if (!pauseClick) {\n      animateLabels(labelsOnLine.length - 2);\n    }\n  });\n  app.stage.addChild(lblsMinusButton);\n  lblsMinusButton.x = DIM;\n  lblsMinusButton.y = NUMBERLINE_CENTER_Y + DIM;\n\n  function areAllPinsSet(pins) {\n    let set = true;\n\n    for (let p of pinsInPlay) {\n      if (p.onLine == false) {\n        set = false;\n      }\n    }\n\n    return set;\n  }\n\n  function removeElement(e, arr) {\n    if (arr.length != 0) {\n      let i = arr.indexOf(e);\n      arr.splice(i, 1);\n    }\n  }\n\n  function createFeedBackLbl(labels) {\n    return labels.map(l => {\n      let t = new PIXI.Text(l._n + \"/\" + l._d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: dx / 2,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      t.anchor.set(0.5);\n      app.stage.addChild(t);\n      t.x = dim + (l.expectedLocation - dim) * minStep / originalMinStep;\n      l.expectedLocation = t.x;\n      t.y = 3.2 * dim;\n      return t;\n    });\n  }\n\n  function createPinFromWidget() {\n    pinsOffLineCount += 1;\n    let p = createPin();\n    p.on(\"pointerdown\", onPinDragStart).on(\"pointermove\", onPinDragMove).on(\"pointerup\", onPinDragEnd);\n    p.x = 11 * dim;\n    p.y = 4 * dim;\n    window.createjs.Tween.get(p).to({\n      x: 11 * dim - 1.1 * p.width * pinsOffLineCount,\n      y: 4 * dim\n    }, 500, window.createjs.Ease.getPowInOut(4));\n    p.onLine = false;\n    p.isSet = false;\n    p.mutable = true;\n    pinsInPlay.push(p);\n    globalPinRef.push(p);\n    app.stage.addChild(p);\n    app.stage.addChild(pinWidget);\n  }\n\n  function createTick(nodeIndex, width) {\n    let tick = new PIXI.Graphics();\n    tick.lineStyle(3, 0x000000, 1);\n    tick.moveTo(0, 0);\n    tick.lineTo(0, dim / 4);\n    tick.x = dim + width * nodeIndex;\n    tick.y = 2.875 * dim;\n    return tick;\n  }\n\n  function createActionButton(text, action) {\n    var graphics = new PIXI.Graphics();\n    graphics.lineStyle(0, 0xb7b7b7, 1);\n    graphics.beginFill(CONST.COLORS.CORAL);\n    graphics.drawRoundedRect(0, 0, 0.5 * dim, 0.5 * dim, 5);\n    graphics.endFill();\n    var texture = app.renderer.generateTexture(graphics);\n    let tile = new PIXI.Sprite(texture);\n    tile.anchor.set(0.5);\n    let den = new PIXI.Text(text, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: dim / 4,\n      fill: 0xffffff,\n      align: \"center\"\n    });\n    den.anchor.set(0.5);\n    let tileContainer = new PIXI.Container();\n    tileContainer.addChild(tile);\n    tileContainer.addChild(den);\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n    tileContainer.buttonMode = true;\n    tileContainer.on(\"pointerdown\", action); // move the sprite to its designated position\n\n    tileContainer.x = 10 * dim;\n    tileContainer.y = topMargin + tileContainer.height / 2;\n    tileContainer.checkAnswer = true;\n    tileContainer.text = den;\n    tileContainer.tile = tile;\n    return tileContainer;\n  }\n\n  function freezeView() {\n    for (let c of [...pinsInPlay, ...blocksOnLine, ...labelsOnLine, pinWidget, ...blocksInWidget]) {\n      c.interactive = false;\n    }\n\n    goButton.interactive = false;\n  }\n\n  function unfreezeView() {\n    for (let c of [...pinsInPlay, ...blocksOnLine, ...labelsOnLine, pinWidget, ...blocksInWidget, goButton]) {\n      if (c.isSet == false) {\n        c.interactive = true;\n      }\n    }\n\n    goButton.interactive = true;\n  }\n\n  function refreshGame() {\n    for (let e of [...pinsInPlay, ...labelsOnLine]) {\n      e.onLine = false;\n    }\n\n    firstTry = false;\n  }\n\n  function getMaxLabelX(lbls) {\n    let maxLabel;\n    let val = 0;\n\n    for (let i = 0; i < lbls.length; i++) {\n      let curr = lbls[i];\n      let currVal = curr._n / curr._d;\n\n      if (currVal > val) {\n        val = currVal;\n        maxLabel = curr;\n      }\n    }\n\n    return maxLabel.x;\n  }\n\n  let goButton; //xfgoButton.static = false;\n  //app.stage.addChild(goButton)\n\n  let t = createTick(20);\n  app.stage.addChild(t); //app.renderer.interactive = true\n\n  backGround.on(\"pointerup\", globalPointerUp);\n\n  function globalPointerUp() {\n    activeEntity.dragging = false;\n    activeEntity.alpha = 1; // console.log(\"PointerUP!!!!!\")\n    // WHAT THE FUCK IS THIS DOING!!!\n\n    if (activeEntity.x + activeEntity.width / 2 < dim && activeEntity.mutable == true) {\n      if (activeEntity.isFeedBlock) {\n        let i = blocksOnLine.indexOf(activeEntity);\n        blocksOnLine.splice(i, 1);\n      }\n\n      if (activeEntity.isPin) {\n        let i = pinsInPlay.indexOf(activeEntity);\n        pinsInPlay.splice(i, 1);\n      }\n\n      app.stage.removeChild(activeEntity);\n    }\n  }\n\n  function getNearestObject(pins, location) {\n    let closestPin = null;\n\n    if (pins.length != 0) {\n      closestPin = pins[0];\n      let deltaClosestPin = Math.abs(closestPin.x - location[0]);\n\n      for (let i = 1; i < pins.length; i++) {\n        let currentPin = pins[i];\n        let deltaCurrentPin = Math.abs(currentPin.x - location[0]);\n\n        if (deltaCurrentPin < deltaClosestPin) {\n          deltaClosestPin = deltaCurrentPin;\n          closestPin = currentPin;\n        }\n      }\n    }\n\n    return closestPin;\n  }\n\n  function itemsLessThan(x, items) {\n    let itemsLess = [];\n\n    if (items.length != 0) {\n      for (let l of items) {\n        // console.log(\"in loop\");\n        if (l.x < x && l.onLine == true) {\n          // console.log(\"pushing\");\n          itemsLess.push(l);\n        }\n      }\n    }\n\n    return itemsLess;\n  }\n\n  function animateFeedBack(blocks, start, pins, labels, i) {\n    // Loop end criteria is based on the feedBlocks\n    if (blocks.length == 0) {\n      // Check answer criteria is going to change.\n      // Make sure all necessary pins are set:\n      let allPinsSet = true;\n\n      for (let b of pinsCurrentlySet) {\n        if (!b) {\n          allPinsSet = false;\n        }\n      }\n\n      if (currentProblem.pinWidget) {\n        allPinsSet = true;\n      } // No leftover pins, no leftover labels, all required pins are set\n\n\n      if ((pins.length == 0 || currentProblem.dontScorePins || currentProblem.pinWidget) && labels.length == 0 && allPinsSet) {\n        goButton.interactive = true;\n        goButton.text.text = \"Next Problem\"; //dropGameOverModal(loadNextGame)\n\n        return;\n      } else {\n        for (let p of pins) {\n          if (!currentProblem.pinWidget) {\n            window.createjs.Tween.get(p).to({\n              x: p.originalLocation[0],\n              y: p.originalLocation[1]\n            }, 500, window.createjs.Ease.getPowInOut(4));\n          }\n        }\n\n        labelsOnLine = labels;\n        pinsInPlay = pins;\n        goButton.text.text = \"Try Again\";\n        goButton.interactive = true;\n        refreshGame();\n        return;\n      }\n    } else {\n      let b = blocks.pop();\n      let newStart = [start[0] + b.width, start[1]]; //\n\n      let animateTo = i == 0 ? [b.x, b.y] : [(i - 1) * minStep + dim, start[1]];\n      window.createjs.Tween.get(b).to({\n        x: animateTo[0],\n        y: animateTo[1]\n      }, 500, window.createjs.Ease.getPowInOut(4)).call(() => {\n        // HELLO! The nearest pin needs to also be on the line - maybe have boolean \"on the line\" property\n        let nearestPin = getNearestObject(pins, start); // Label Logic\n\n        let setLabel = false;\n        let nearestLabel = null;\n\n        for (let l of labels) {\n          let expectedLocation = l._n / l._d * minStep * currentProblem.partitionsPerWhole + dim;\n\n          if (Math.abs(start[0] - expectedLocation) < dT * minStep && Math.abs(l.x - expectedLocation) < dT * minStep) {\n            setLabel = true;\n            nearestLabel = l;\n            l.isSet = true;\n            l.interactive = false;\n            removeElement(l, labels);\n          }\n        }\n\n        let leftoverLabels = itemsLessThan(start[0], labels);\n        let setPin = nearestPin && Math.abs(nearestPin.x - start[0]) < dT * minStep && pinsCurrentlySet[i] == false ? true : false;\n\n        if (setPin) {\n          pinsCurrentlySet[i] = true;\n          nearestPin.circleSprite.texture = app.renderer.generateTexture(blueCircle);\n          nearestPin.draggable = false;\n          removeElement(nearestPin, pins);\n        }\n\n        if (setPin && setLabel) {\n          // console.log(\"HOLY SHIT SETTING LABEL AND PIN WTF WTF WTF\");\n          window.createjs.Tween.get(nearestPin).to({\n            x: animateTo[0] + minStep,\n            y: 2.5 * dim\n          }, 500, window.createjs.Ease.getPowInOut(4)).call(() => {\n            window.createjs.Tween.get(nearestLabel).to({\n              x: animateTo[0] + minStep,\n              y: 3 * dim\n            }, 500, window.createjs.Ease.getPowInOut(4)).call(() => {\n              i += 1;\n              nearestPin.isSet = true;\n\n              if (leftoverLabels.length != 0) {\n                eatLeftovers(leftoverLabels, () => {\n                  animateFeedBack(blocks, newStart, pins, labels, i);\n                });\n              } else {\n                animateFeedBack(blocks, newStart, pins, labels, i);\n              }\n            });\n          });\n        } else if (setPin) {\n          window.createjs.Tween.get(nearestPin).to({\n            x: animateTo[0] + minStep,\n            y: 2.5 * dim\n          }, 500, window.createjs.Ease.getPowInOut(4)).call(() => {\n            // console.log(\"JUST SETTING PIN\");\n            nearestPin.isSet = true;\n            i += 1;\n\n            if (leftoverLabels.length != 0) {\n              eatLeftovers(leftoverLabels, () => {\n                animateFeedBack(blocks, newStart, pins, labels, i);\n              });\n            } else {\n              animateFeedBack(blocks, newStart, pins, labels, i);\n            }\n          });\n        } else if (setLabel) {\n          window.createjs.Tween.get(nearestLabel).to({\n            x: animateTo[0] + minStep,\n            y: 3 * dim\n          }, 500, window.createjs.Ease.getPowInOut(4)).call(() => {\n            i += 1;\n\n            if (leftoverLabels.length != 0) {\n              eatLeftovers(leftoverLabels, () => {\n                animateFeedBack(blocks, newStart, pins, labels, i);\n              });\n            } else {\n              animateFeedBack(blocks, newStart, pins, labels, i);\n            }\n          });\n        } else {\n          i += 1;\n\n          if (leftoverLabels.length != 0) {\n            eatLeftovers(leftoverLabels, () => {\n              animateFeedBack(blocks, newStart, pins, labels, i);\n            });\n          } else {\n            animateFeedBack(blocks, newStart, pins, labels, i);\n          }\n        }\n      });\n    }\n  }\n\n  function eatLeftovers(leftovers, dessert) {\n    if (leftovers.length == 0) {\n      dessert();\n      return;\n    } else {\n      let curr = leftovers.pop();\n      let customFeedBlockWidth = curr.expectedLocation - dim;\n      let customFeedBlock = createFeedBlock(customFeedBlockWidth, curr._n, curr._d, true, true);\n      customFeedBlock.x = dim;\n      customFeedBlock.y = 2.7 * dim;\n      customFeedBlock.alpha = 0;\n      app.stage.addChild(customFeedBlock);\n      window.createjs.Tween.get(curr).to({\n        x: curr.originalLocation[0],\n        y: curr.originalLocation[1]\n      }, 1000, window.createjs.Ease.getPowInOut(4)).call(() => {\n        curr.onLine = false;\n        app.stage.removeChild(customFeedBlock);\n        eatLeftovers(leftovers, dessert);\n      });\n    }\n  }\n\n  function createBlockWidget(blocks, wholeWidth) {\n    for (let i = 0; i < blocks.length; i++) {\n      let block = new PIXI.Graphics();\n      block.beginFill(CONST.COLORS.BLUE);\n      block.drawRoundedRect(dim, topMargin + i * 3 * dim / 8, wholeWidth / blocks[i].den * blocks[i].num, dim / 4, 5);\n      block.endFill();\n      block.num = blocks[i].num;\n      block.den = blocks[i].den;\n      block.interactive = true;\n      block.isSet = false;\n      block.on(\"pointerdown\", onBlockWidgetSelected);\n      blocksInWidget.push(block);\n      app.stage.addChild(block);\n    }\n  } // Do I need to pass this the Numberline max so I can calculate the block\n  // width based on the fraction is supposed to represent.\n\n\n  function createMeasureBlock(width, num, den, label) {\n    let blockContainer = new PIXI.Container();\n    var block = new PIXI.Graphics();\n    block.beginFill(CONST.COLORS.BLUE);\n    block.drawRoundedRect(0, 0, width, dim / 4, 5);\n    block.endFill();\n    let blockTexture = app.renderer.generateTexture(block);\n    let blockSprite = new PIXI.Sprite(blockTexture);\n    blockSprite.alpha = 0.7;\n    blockContainer.addChild(blockSprite);\n    blockContainer.hitSpot = blockSprite;\n    let text = new PIXI.Text(num + \"/\" + den, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: 12,\n      fill: 0x000000,\n      align: \"center\"\n    });\n    text.anchor.set(0.5);\n    text.x = width / 2;\n    text.y = dim / 8;\n    text.style.fill = 0xffffff;\n\n    if (label) {\n      blockContainer.addChild(text);\n    }\n\n    blockContainer.text = text;\n    blockContainer.mutable = true;\n    blockContainer.interactive = true;\n    blockContainer.on(\"pointerdown\", onBlockDragStart).on(\"pointermove\", onBlockDragMove).on(\"pointerup\", onBlockDragEnd);\n    blocksOnLine.push(blockContainer);\n    return blockContainer;\n  }\n\n  function createFeedBlock(width, num, den, label, custom) {\n    let blockContainer = new PIXI.Container();\n    var block = new PIXI.Graphics();\n    let blockFill = custom ? 0xffffff : CONST.COLORS.BLUE;\n    block.beginFill(blockFill);\n    let lineWidth = custom ? 1 : 0;\n    block.lineStyle(lineWidth, 0x000000, 1);\n    block.drawRoundedRect(0, 0, width + 0.5, dim / 4, 5);\n    block.endFill();\n    let blockTexture = app.renderer.generateTexture(block);\n    let blockSprite = new PIXI.Sprite(blockTexture);\n    let alpha = custom ? 1 : 0.7;\n    blockSprite.alpha = alpha;\n    blockContainer.addChild(blockSprite);\n    blockContainer.hitSpot = blockSprite;\n    let textFill = custom ? 0x000000 : 0xffffff;\n    let text = new PIXI.Text(num + \"/\" + den, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: 12,\n      fill: textFill,\n      align: \"center\"\n    });\n    text.anchor.set(0.5);\n    text.x = width / 2;\n    text.y = dim / 8;\n\n    if (label) {\n      blockContainer.addChild(text);\n    }\n\n    blockContainer.text = text;\n    blockContainer.static = false;\n    blockContainer.isFeedBlock = true;\n    return blockContainer;\n  }\n\n  function createStaticPin() {\n    let h = 1 / 2 * dim;\n    let w = dim / 4;\n    var circleTexture = app.renderer.generateTexture(blueCircle);\n    let circleSprite = new PIXI.Sprite(circleTexture);\n    circleSprite.alpha = 0.5;\n    circleSprite.anchor.set(0.5);\n    var stem = new PIXI.Graphics();\n    stem.lineStyle(2, 0x000000, 10);\n    stem.moveTo(0, dim / 5);\n    stem.lineTo(0, dim / 2);\n    let pinContainer = new PIXI.Container();\n    pinContainer.addChild(circleSprite);\n    pinContainer.addChild(stem);\n    pinContainer.active = false;\n    pinContainer.interactive = false;\n    pinContainer.mutable = false;\n    pinContainer.x = 0;\n    pinContainer.y = 0;\n    pinContainer.draggable = true;\n    pinContainer.onLine = true;\n    pinContainer.isPin = true;\n    pinContainer.static = true;\n    pinContainer.circleSprite = circleSprite;\n    return pinContainer;\n  }\n\n  function createPin() {\n    let h = 1 / 2 * dim;\n    let w = dim / 4;\n    var circle = new PIXI.Graphics();\n    circle.lineStyle(2, 0x000000);\n    circle.beginFill(0xffffff); // why dim/5? - cause that's what I decided.\n\n    circle.drawCircle(dim / 5, dim / 5, dim / 5);\n    circle.endFill();\n    circle.x = 0.5;\n    circle.y = 0.5;\n    let circleTexture = app.renderer.generateTexture(circle);\n    let circleSprite = new PIXI.Sprite(circleTexture);\n    circleSprite.alpha = 0.5;\n    circleSprite.anchor.set(0.5); //circleSprite.texture = pinkCircleTexture\n\n    var stem = new PIXI.Graphics();\n    stem.lineStyle(2, 0x000000, 10);\n    stem.moveTo(0, dim / 5);\n    stem.lineTo(0, dim / 2);\n    let pinContainer = new PIXI.Container();\n    pinContainer.addChild(circleSprite);\n    pinContainer.addChild(stem);\n    pinContainer.active = false;\n    pinContainer.interactive = true;\n    pinContainer.x = 0;\n    pinContainer.y = 0;\n    pinContainer.draggable = true;\n    pinContainer.onLine = false;\n    pinContainer.isPin = true;\n    pinContainer.mutable = true;\n    pinContainer.circleSprite = circleSprite;\n    return pinContainer;\n  }\n\n  function createPureLbl(frac) {\n    let tileContainer = new PIXI.Container();\n    let n = frac[0];\n    let d = frac[1];\n    let whole = d == 1 ? true : false;\n    let h = d == 1 ? dim / 4 : 1 / 2 * dim;\n    let w = dim / 4;\n    let textSize = 0.7 * w;\n    var block = new PIXI.Graphics();\n    block.drawRoundedRect(0, 0, w, h, 3);\n    block.x = 1;\n    block.y = 1;\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5); // All or only some of these may exist depending on if we're using a \"whole\" or not.\n\n    let mid;\n    let num;\n    let den;\n    let l;\n\n    if (!whole) {\n      l = new PIXI.Graphics();\n      l.lineStyle(2, 0x000000, 2);\n      l.moveTo(0, dim / 4);\n      l.lineTo(0, dim / 2);\n      mid = new PIXI.Graphics();\n      mid.lineStyle(2, 0x000000, 2);\n      mid.moveTo(-dim / 10, 0);\n      mid.lineTo(dim / 10, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -h / 5;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = h / 5;\n    } else {\n      l = new PIXI.Graphics();\n      l.lineStyle(3, 0x000000);\n      l.moveTo(0, dim / 4);\n      l.lineTo(0, dim / 2);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = dim / 8;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.addChild(l);\n    tileContainer.hitSpot = tile; // Line style appears grey unless we add this after the prefious if block - not sure why.\n\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n    tileContainer.x = dim;\n    tileContainer.y = 0;\n    tileContainer.d = den;\n    tileContainer.n = num;\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = dim / 2;\n    tileContainer.onLine = false;\n    return tileContainer;\n  }\n\n  function createFractionLbl(frac) {\n    let tileContainer = new PIXI.Container();\n    let n = frac[0];\n    let d = frac[1];\n    let whole = d == 1 ? true : false;\n    let h = d == 1 ? dim / 4 : 1 / 2 * dim;\n    let w = dim / 4;\n    let textSize = 0.7 * w;\n    var block = new PIXI.Graphics();\n    block.lineStyle(2, 0x000000);\n    block.beginFill(0xffffff);\n    block.drawRoundedRect(0, 0, w, h, 3);\n    block.endFill();\n    block.x = 1;\n    block.y = 1;\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5); // All or only some of these may exist depending on if we're using a \"whole\" or not.\n\n    let mid;\n    let num;\n    let den;\n    let l;\n\n    if (!whole) {\n      l = new PIXI.Graphics();\n      l.lineStyle(2, 0x000000, 2);\n      l.moveTo(0, dim / 4);\n      l.lineTo(0, dim / 2);\n      mid = new PIXI.Graphics();\n      mid.lineStyle(2, 0x000000, 2);\n      mid.moveTo(-dim / 10, 0);\n      mid.lineTo(dim / 10, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -h / 5;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = h / 5;\n    } else {\n      l = new PIXI.Graphics();\n      l.lineStyle(2, 0x000000, 2);\n      l.moveTo(0, dim / 8);\n      l.lineTo(0, dim / 2);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = 0;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.addChild(l);\n    tileContainer.hitSpot = tile; // Line style appears grey unless we add this after the prefious if block - not sure why.\n\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n    tileContainer.x = dim;\n    tileContainer.y = 0;\n    tileContainer.d = den;\n    tileContainer.n = num;\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = dim / 2;\n    tileContainer.onLine = false;\n    return tileContainer;\n  }\n\n  let line = createNumberLine();\n  app.stage.addChild(line);\n\n  function createNumberLine(den) {\n    let line = new PIXI.Graphics();\n    line.lineStyle(4, 0x000000, 1);\n    line.moveTo(dim, 3 * dim);\n    line.lineTo(dim + 10 * dim, 3 * dim);\n    return line;\n  }\n\n  function onBlockWidgetSelected() {\n    let b = createMeasureBlock(this.width, this.num, this.den);\n    app.stage.addChild(b);\n    b.x = dim;\n    b.y = 3 * dim - b.height;\n  } // Label Actions\n  // Block Actions\n  // Label Actions\n\n\n  function onBlockDragStart(event) {\n    let touchedAtX = event.data.global.x;\n    let touchedAtY = event.data.global.y;\n    this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY]; // store a reference to the data\n    // the reason for this is because of multitouch\n    // we want to track the movement of this particular touch\n\n    this.data = event.data;\n    this.alpha = 0.5;\n    this.dragging = true;\n    activeEntity = this;\n    this.parent.addChild(this);\n  }\n\n  function onBlockDragEnd() {\n    this.alpha = 1;\n\n    if (this.x + this.width / 2 < dim) {\n      let i = blocksOnLine.indexOf(this);\n      blocksOnLine.splice(i, 1);\n      app.stage.removeChild(this);\n    }\n\n    this.dragging = false; // set the interaction data to null\n\n    this.data = null;\n  }\n\n  function onBlockDragMove() {\n    if (this.dragging) {\n      var newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch[0];\n    }\n  } // Pin Actions\n\n\n  function onPinDragStart(event) {\n    // Store a reference to the data\n    if (this.draggable) {\n      this.data = event.data;\n      this.alpha = 0.5;\n      this.dragging = true;\n      activeEntity = this;\n      this.onLine = true;\n      this.parent.addChild(this);\n    }\n\n    if (areAllPinsSet(pinsInPlay)) {\n      pinsOffLineCount = 0;\n    }\n  }\n\n  function onPinDragEnd() {\n    this.alpha = 1;\n\n    if (this.x + this.width / 2 < dim && this.mutable == true) {\n      let i = pinsInPlay.indexOf(this);\n      pinsInPlay.splice(i, 1);\n      app.stage.removeChild(this);\n    }\n\n    this.dragging = false; // set the interaction data to null\n\n    this.data = null;\n    this.onLine = true;\n  }\n\n  function onPinDragMove() {\n    if (this.dragging) {\n      var newPosition = this.data.getLocalPosition(this.parent);\n\n      if (false) {\n        this.dragging = false;\n        this.alpha = 1;\n      }\n\n      this.position.x = newPosition.x;\n      this.position.y = 2.5 * dim;\n    }\n  }\n\n  function flipLbl(lbl) {\n    if (lbl.d) {\n      lbl.scale.y = lbl.scale.y * -1;\n      lbl.d.scale.y = lbl.d.scale.y * -1;\n      lbl.n.scale.y = lbl.n.scale.y * -1;\n      let numY = lbl.n.y;\n      lbl.n.y = lbl.d.y;\n      lbl.d.y = numY;\n    } else {\n      lbl.scale.y = lbl.scale.y * -1;\n      lbl.n.scale.y = lbl.n.scale.y * -1;\n    }\n  }\n\n  function createGridTool() {\n    let grid = new PIXI.Container();\n    let currBlock = {\n      k: 0\n    };\n    currBlock.k = -1; //let vPlus = createCircleButton(\"+\");\n\n    let vPlus = new PIXI.Sprite.from(plusButton);\n    vPlus.interactive = true;\n    vPlus.anchor.set(0.5);\n    vPlus.height = DIM / 2;\n    vPlus.width = DIM / 2;\n    vPlus.y = CONTAINER_TOP - DIM / 4;\n    vPlus.x = 3 * CONTAINER_WIDTH / 4;\n    grid.addChild(vPlus);\n    let vMinus = new PIXI.Sprite.from(minusButton);\n    vMinus.interactive = true;\n    vMinus.anchor.set(0.5);\n    vMinus.height = DIM / 2;\n    vMinus.width = DIM / 2;\n    vMinus.y = CONTAINER_TOP - DIM / 4;\n    vMinus.x = CONTAINER_WIDTH / 4;\n    grid.addChild(vMinus);\n    let hPlus = createCircleButton(\"+\");\n    hPlus.x = CONTAINER_RIGHT + DIM / 4;\n    hPlus.y = CONTAINER_HEIGHT / 2; //grid.addChild(hPlus)\n\n    let hMinus = createCircleButton(\"-\");\n    hMinus.x = CONTAINER_LEFT - DIM / 4;\n    hMinus.y = CONTAINER_HEIGHT / 2; //grid.addChild(hMinus)\n\n    let frac = createFraction(0, 1);\n    frac.x = (CONTAINER_RIGHT - CONTAINER_LEFT) / 2;\n    frac.y = CONTAINER_TOP - DIM / 8; //  grid.addChild(frac);\n\n    let cont = createContainer(CONTAINER_WIDTH, CONTAINER_HEIGHT);\n    grid.addChild(cont);\n    cont.x = CONTAINER_WIDTH / 2;\n    cont.y = CONTAINER_HEIGHT / 2;\n    cont.interactive = true;\n    cont.on(\"pointerdown\", createStack);\n    let fractions = [];\n    let horizontalLines = [];\n    let verticalLines = [];\n    let vPartitions = 3;\n    let hPartitions = 0;\n    let colorIndex = 0;\n    let colors = [CONST.COLORS.BLUE, CONST.COLORS.RED, CONST.COLORS.GREEN, CONST.COLORS.ORANGE, CONST.COLORS.PURPLE];\n    let colorLength = colors.length;\n\n    let currentColor = () => {\n      return colors[colorIndex % colorLength];\n    };\n\n    let currFrac = [0, 1];\n\n    const v_part_dim = () => {\n      return CONTAINER_HEIGHT / hPartitions;\n    };\n\n    const h_part_dim = () => {\n      return CONTAINER_WIDTH / vPartitions;\n    };\n\n    const total_parts = () => {\n      return hPartitions * vPartitions;\n    };\n\n    initVerticalLines(1); //initHorizontalLines(1)\n\n    animateVerticalLines(1);\n    vPlus.on(\"pointerdown\", () => animateVerticalLines(1));\n    vMinus.on(\"pointerdown\", () => animateVerticalLines(-1)); //hPlus.on(\"pointerdown\", () => animateVerticalLines(1));\n    //hMinus.on(\"pointerdown\", () => animateVerticalLines(-1));\n    //grid.addChild()\n    // Helpers\n\n    function hideGrid() {\n      let toHide = [...verticalLines, ...horizontalLines];\n      toHide.forEach(h => h.alpha = 0);\n    }\n\n    function bringLinesToFront() {\n      let lines = [...verticalLines, ...horizontalLines];\n      lines.forEach(l => grid.addChild(l));\n    } // Constructors\n\n\n    function createCircleButton(text) {\n      let h = DIM / 4;\n      let w = DIM / 4;\n      var circle = new PIXI.Graphics();\n      circle.lineStyle(2, 0xb7b7b7);\n      circle.beginFill(0xffffff);\n      circle.drawCircle(DIM / 5, DIM / 5, DIM / 5);\n      circle.endFill();\n      circle.x = 1;\n      circle.y = 1;\n      let circleTexture = app.renderer.generateTexture(circle);\n      let circleSprite = new PIXI.Sprite(circleTexture);\n      circleSprite.alpha = 0.8;\n      circleSprite.anchor.set(0.5);\n      let pinContainer = new PIXI.Container();\n      pinContainer.addChild(circleSprite);\n      let operator = new PIXI.Text(text, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: dx / 2,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      operator.anchor.set(0.5);\n      operator.x = 0;\n      operator.y = 0;\n      pinContainer.addChild(operator);\n      pinContainer.interactive = true;\n      return pinContainer;\n    }\n\n    function createStack(event) {\n      bringLinesToFront();\n      let hdim = h_part_dim();\n      let vdim = v_part_dim();\n      let pos = event.data.getLocalPosition(this.parent);\n      let i = Math.floor((pos.x - CONTAINER_LEFT) / hdim);\n      let j = Math.floor((pos.y - CONTAINER_TOP) / vdim);\n      let k = i + 1;\n\n      if (false) {// do nothing\n      } else {\n        var block = new PIXI.Graphics();\n        block.beginFill(CONST.COLORS.BLUE);\n        block.drawRoundedRect(0, 0, CONTAINER_WIDTH * k / vPartitions, CONTAINER_HEIGHT, 5);\n        currFrac = [k, vPartitions];\n        block.endFill();\n        block.x = 1;\n        block.y = 1;\n        let blockTexture = app.renderer.generateTexture(block);\n        let blockSprite = new PIXI.Sprite(blockTexture);\n        blockSprite.alpha = 0.5;\n        blockSprite.x = 0;\n        blockSprite.y = 0;\n        blockSprite.anchor.set(0);\n        grid.removeChild(currBlock);\n\n        if (k == 1 && currBlock.k == 1) {\n          currBlock.k = 0;\n          currFrac[0] = 0;\n        } else {\n          grid.addChild(blockSprite);\n          blockSprite.k = k;\n          currBlock = blockSprite;\n        }\n\n        frac.write(currFrac[0], currFrac[1]);\n      }\n    }\n\n    function createContainer(width, height) {\n      let containerGraphic = new PIXI.Graphics();\n      containerGraphic.lineStyle(3, 0x000000);\n      containerGraphic.moveTo(0, 0);\n      containerGraphic.lineTo(0, height);\n      containerGraphic.lineTo(width, height);\n      containerGraphic.lineTo(width, 0);\n      containerGraphic.lineTo(0, 0);\n      containerGraphic.interactive = true;\n      containerGraphic.x = 1.5;\n      containerGraphic.y = 1.5;\n      let containerTexture = app.renderer.generateTexture(containerGraphic);\n      let containerSprite = new PIXI.Sprite(containerTexture);\n      containerSprite.anchor.set(0.5);\n      containerSprite.width = containerGraphic.width + 1.5;\n      containerSprite.height = containerGraphic.height + 1.5;\n      return containerSprite;\n    }\n\n    function initVerticalLines(partition) {\n      for (let i = 0; i < 13; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(0, CONTAINER_HEIGHT);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        verticalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function initHorizontalLines(partition) {\n      for (let i = 0; i < 11; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(CONTAINER_WIDTH, 0);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        horizontalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function animateVerticalLines(inc) {\n      // console.log(\"ANIMATING horizontalLines\");\n      vPartitions += inc;\n\n      if (vPartitions != 0 && vPartitions != 13) {\n        currFrac[1] = vPartitions;\n\n        if (currFrac[0] > vPartitions) {\n          currFrac[0] = vPartitions;\n        }\n\n        let dim = v_part_dim();\n        window.createjs.Tween.get(currBlock).to({\n          width: CONTAINER_WIDTH * currFrac[0] / currFrac[1]\n        }, 500, window.createjs.Ease.getPowInOut(4));\n        colorIndex += 1;\n        let spacing = CONTAINER_WIDTH / vPartitions;\n        verticalLines.forEach((l, i) => {\n          //// console.log(\"VERTICAL LINES WHATS UP!!\");\n          grid.addChild(l);\n\n          if (i > vPartitions) {\n            window.createjs.Tween.get(l).to({\n              x: CONTAINER_RIGHT\n            }, 500, window.createjs.Ease.getPowInOut(4));\n          } else {\n            window.createjs.Tween.get(l).to({\n              x: i * spacing + CONTAINER_LEFT\n            }, 500, window.createjs.Ease.getPowInOut(4));\n          }\n        });\n      } else {\n        vPartitions -= inc;\n      } // console.log(\"currFrac\", currFrac);\n\n\n      frac.write(currFrac[0], currFrac[1]);\n    }\n\n    function onFracStart(event) {\n      bringLinesToFront();\n      let touchedAtX = event.data.getLocalPosition(this.parent).x;\n      let touchedAtY = event.data.getLocalPosition(this.parent).y;\n      this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n      grid.addChild(this);\n      this.data = event.data;\n      this.dragging = true;\n    }\n\n    function round(val, origin) {\n      let i = Math.round(Math.abs(val - origin) / (CONTAINER_WIDTH / 12));\n      return origin + i * CONTAINER_WIDTH / 12;\n    }\n\n    function onFracEnd() {\n      this.data = null;\n      this.dragging = false;\n\n      if (this.y + this.height > setup.width) {\n        let i = fractions.indexOf(this);\n        fractions.splice(i, 1);\n        app.stage.removeChild(this);\n      }\n\n      let x = round(this.x, grid.x);\n      let y = round(this.y, grid.y);\n    }\n\n    function onFracMove() {\n      if (this.dragging) {\n        let pointerPosition = this.data.getLocalPosition(this.parent);\n        this.y = pointerPosition.y + this.deltaTouch[1];\n        this.x = pointerPosition.x + this.deltaTouch[0];\n      }\n    }\n\n    return grid;\n  }\n\n  function createFraction(n, d) {\n    let sf = 0.4;\n    let tileContainer = new PIXI.Container();\n    let whole = d == 1 ? true : false;\n    let h = 2 * DIM;\n    let w = DIM;\n    h = h * sf;\n    w = w * sf;\n    var block = new PIXI.Graphics(); //block.lineStyle(3, 0x000000, 2);\n\n    block.beginFill(0xffffff);\n    block.drawRoundedRect(0, 0, 1.2 * w, 1.2 * h, 5);\n    block.endFill();\n    block.x = 1;\n    block.y = 1;\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5); // All or only some of these may exist depending on if we're using a \"whole\" or not.\n\n    let mid;\n    let num;\n    let den;\n\n    if (true) {\n      mid = new PIXI.Graphics();\n      mid.lineStyle(4, 0x000000, 2);\n      mid.moveTo(-w / 2, 0);\n      mid.lineTo(w / 2, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -w / 2;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = w / 2;\n    } else {\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: 12,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = 0;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.border = tile; // Line style appears grey unless we add this after the prefious if block - not sure why.\n\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n    tileContainer.x = DIM;\n    tileContainer.y = 0; // Objects\n\n    tileContainer.d = den;\n    tileContainer.n = num; // Values\n\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = DIM / 2;\n    tileContainer.onLine = false;\n    tileContainer.alpha = 0.9;\n\n    tileContainer.write = (n, d) => {\n      num.text = n;\n      den.text = d;\n    };\n\n    return tileContainer;\n  }\n\n  app.destroyAll = () => {\n    // console.log(\"in destroyAll\")\n    gridTool.destroy(true);\n    backGround.destroy(true);\n    pinkCircle.destroy(true);\n    blueCircle.destroy(true);\n\n    for (let l of labelsOnLine) {\n      l.destroy(true);\n    }\n\n    for (let t of ticksOnLine) {\n      t.destroy(true);\n    }\n  };\n\n  let questionButton = new PIXI.Sprite.from(QuestionMark);\n  questionButton.x = setup.width - 1.5 * dx;\n  questionButton.y = dx / 4;\n  questionButton.width = dx;\n  questionButton.height = dx;\n  questionButton.interactive = true;\n  questionButton.on('pointerdown', () => {\n    app.help();\n  });\n  app.stage.addChild(questionButton);\n\n  function resize(newFrame) {\n    heightToWidthRatio = newFrame.height / newFrame.width;\n    LANDSCAPE = heightToWidthRatio < 3 / 4;\n    ARENA_WIDTH = LANDSCAPE ? 4 / 3 * newFrame.height : newFrame.width;\n    ARENA_HEIGHT = LANDSCAPE ? newFrame.height : 3 / 4 * newFrame.width;\n    /*\n    backGround.width = ARENA_WIDTH\n    backGround.height = ARENA_HEIGHT\n    app.renderer.resize(ARENA_WIDTH,ARENA_HEIGHT)\n    //TweenLite.to(backGround,5,{x: ARENA_WIDTH/2,y: ARENA_HEIGHT/2})\n    gridNodes.draw()\n    */\n\n    app.stage.width = ARENA_WIDTH;\n    app.stage.height = ARENA_HEIGHT;\n  }\n\n  app.resize = frame => resize(frame);\n};","map":{"version":3,"sources":["/Users/andrewfenner/Desktop/testcontent-master/src/js/numberlinetool.js"],"names":["PIXI","blueGradient","CONST","plusButton","minusButton","QuestionMark","init","app","setup","heightToWidthRatio","height","width","LANDSCAPE","ARENA_WIDTH","ARENA_HEIGHT","dx","backGround","Sprite","from","interactive","static","stage","addChild","window","createjs","Tween","get","to","alpha","Ease","getPowInOut","dim","centerLine","lineWidth","topMargin","pinkCircle","Graphics","lineStyle","beginFill","COLORS","GRAY","drawCircle","endFill","blueCircle","BLUE","DIM","NUMBERLINE_CENTER_Y","LINE_WIDTH","LEFT_X","RIGHT_X","WINDOW_CENTER_X","WINDOW_CENTER_Y","CONTAINER_WIDTH","CONTAINER_HEIGHT","CONTAINER_TOP","CONTAINER_BOTTOM","CONTAINER_LEFT","CONTAINER_RIGHT","TWELFTH_WIDTH","ticksPerWhole","maxValue","ticksOnLine","labelsOnLine","pauseClick","expectedPins","blocksOnLine","pinsCurrentlySet","feedBlocks","pinsOffLineCount","presetPins","presetLabels","pinsInPlay","problemIndex","feedBackLabels","blocksInWidget","firstTry","pinWidget","activeEntity","lineMax","wholeWidth","minStep","originalMinStep","currentProblem","dT","globalPinRef","globalLabelRef","activityQue","gridTool","createGridTool","x","y","drawLabels","n","i","lbl","createPureLbl","push","flipLbl","initTicks","numberOfTicks","ticks","tickSpace","t","createTick","animateTicks","length","animateLabels","max","lblsToAdd","Math","call","removeChild","removeElement","lblsPlusButton","createActionButton","lblsMinusButton","areAllPinsSet","pins","set","p","onLine","e","arr","indexOf","splice","createFeedBackLbl","labels","map","l","Text","_n","_d","fontFamily","fontSize","fill","align","anchor","expectedLocation","createPinFromWidget","createPin","on","onPinDragStart","onPinDragMove","onPinDragEnd","isSet","mutable","nodeIndex","tick","moveTo","lineTo","text","action","graphics","CORAL","drawRoundedRect","texture","renderer","generateTexture","tile","den","tileContainer","Container","active","buttonMode","checkAnswer","freezeView","c","goButton","unfreezeView","refreshGame","getMaxLabelX","lbls","maxLabel","val","curr","currVal","globalPointerUp","dragging","isFeedBlock","isPin","getNearestObject","location","closestPin","deltaClosestPin","abs","currentPin","deltaCurrentPin","itemsLessThan","items","itemsLess","animateFeedBack","blocks","start","allPinsSet","b","dontScorePins","originalLocation","pop","newStart","animateTo","nearestPin","setLabel","nearestLabel","partitionsPerWhole","leftoverLabels","setPin","circleSprite","draggable","eatLeftovers","leftovers","dessert","customFeedBlockWidth","customFeedBlock","createFeedBlock","createBlockWidget","block","num","onBlockWidgetSelected","createMeasureBlock","label","blockContainer","blockTexture","blockSprite","hitSpot","style","onBlockDragStart","onBlockDragMove","onBlockDragEnd","custom","blockFill","textFill","createStaticPin","h","w","circleTexture","stem","pinContainer","circle","frac","d","whole","textSize","mid","pivot","createFractionLbl","line","createNumberLine","event","touchedAtX","data","global","touchedAtY","deltaTouch","parent","newPosition","getLocalPosition","position","scale","numY","grid","currBlock","k","vPlus","vMinus","hPlus","createCircleButton","hMinus","createFraction","cont","createContainer","createStack","fractions","horizontalLines","verticalLines","vPartitions","hPartitions","colorIndex","colors","RED","GREEN","ORANGE","PURPLE","colorLength","currentColor","currFrac","v_part_dim","h_part_dim","total_parts","initVerticalLines","animateVerticalLines","hideGrid","toHide","forEach","bringLinesToFront","lines","operator","hdim","vdim","pos","floor","j","write","containerGraphic","containerTexture","containerSprite","partition","g","initHorizontalLines","inc","spacing","onFracStart","round","origin","onFracEnd","onFracMove","pointerPosition","sf","border","destroyAll","destroy","questionButton","help","resize","newFrame","frame"],"mappings":"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","sourcesContent":["// Problem que setup\nimport * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport plusButton from \"../assets/Plus.png\";\nimport minusButton from \"../assets/Minus.png\";\nimport QuestionMark from '../assets/QuestionMark.png'\n\n\nexport const init = (app, setup) => {\n \n\n  // Parameters (Only changes on resize)\n  let heightToWidthRatio = setup.height/setup.width\n  let LANDSCAPE = heightToWidthRatio < 3/4\n  let ARENA_WIDTH = LANDSCAPE ? 4/3*setup.height : setup.width\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3/4*setup.width\n\n\n  let dx = setup.width/20;\n\n  let backGround = new PIXI.Sprite.from(blueGradient);\n  backGround.width = setup.width;\n  backGround.height = setup.height;\n  backGround.interactive = true;\n  backGround.static = false;\n  if (true) {\n    app.stage.addChild(backGround);\n  }\n  window.createjs.Tween.get(backGround).to(\n    {\n      alpha: 1\n    },\n    500,\n    window.createjs.Ease.getPowInOut(4)\n  );\n\n  // CONSTANTS\n\n  const dim = setup.width / 12;\n  const centerLine = setup.height / 2;\n  const lineWidth = 10 * dim;\n  const topMargin = (3 / 4) * dim;\n\n  const pinkCircle = new PIXI.Graphics();\n  pinkCircle.lineStyle(2, 0x000000, 2);\n  pinkCircle.beginFill(CONST.COLORS.GRAY);\n  pinkCircle.drawCircle(dim / 5 + 1, dim / 5 + 1, dim / 5);\n  pinkCircle.endFill();\n\n  const blueCircle = new PIXI.Graphics();\n  blueCircle.lineStyle(2, 0x000000, 2);\n  blueCircle.beginFill(CONST.COLORS.BLUE);\n  blueCircle.drawCircle(dim / 5 + 1, dim / 5 + 1, dim / 5);\n  blueCircle.endFill();\n\n  // CONSTANTS\n  const DIM = setup.width / 12;\n  const NUMBERLINE_CENTER_Y = 3 * DIM;\n  const LINE_WIDTH = 10 * DIM;\n  const LEFT_X = (3 / 4) * setup.width;\n  const RIGHT_X = (1 / 4) * setup.width;\n  const WINDOW_CENTER_X = setup.width / 2;\n  const WINDOW_CENTER_Y = setup.width / 2;\n  const CONTAINER_WIDTH = LINE_WIDTH;\n  const CONTAINER_HEIGHT = CONTAINER_WIDTH / 12;\n  const CONTAINER_TOP = 0;\n  const CONTAINER_BOTTOM = CONTAINER_HEIGHT;\n  const CONTAINER_LEFT = 0;\n  const CONTAINER_RIGHT = CONTAINER_WIDTH;\n  const TWELFTH_WIDTH = CONTAINER_WIDTH / 12;\n\n  // NUMBERLINE STATE\n  let ticksPerWhole = 1;\n  let maxValue = 10;\n  let ticksOnLine = [];\n  let labelsOnLine = [];\n  let pauseClick = false;\n\n  let expectedPins = 0;\n\n  // STATE VARIABLES\n  let blocksOnLine = [];\n\n  // Temp storage for feedback logic\n  let pinsCurrentlySet = [];\n  let feedBlocks;\n\n  let pinsOffLineCount = 0;\n\n  let presetPins = [];\n  let presetLabels = [];\n  let pinsInPlay = [];\n  let problemIndex = 0;\n  let feedBackLabels = [];\n\n  let blocksInWidget = [];\n\n  let firstTry = true;\n  let pinWidget = {};\n\n  let activeEntity = new PIXI.Sprite();\n\n\n  let lineMax; // Max value of the line\n  let wholeWidth; // physical width of \"one whole\" on the number line\n  let minStep; // Minmum block width for measuring or placing pins/labels\n  let originalMinStep;\n  let currentProblem;\n  let dT;\n\n  // So i don't lose a reference to this shit when I'm resetting the game\n  let globalPinRef = [];\n  let globalLabelRef = [];\n\n  let activityQue;\n\n  let gridTool = createGridTool();\n  app.stage.addChild(gridTool);\n  gridTool.x = DIM;\n  gridTool.y = NUMBERLINE_CENTER_Y - CONTAINER_HEIGHT;\n\n  function drawLabels(n) {\n    for (let i = 0; i < n; i++) {\n      let lbl = createPureLbl([i, 1]);\n      labelsOnLine.push(lbl);\n      app.stage.addChild(lbl);\n      flipLbl(lbl);\n      lbl.x = DIM + (LINE_WIDTH / (n - 1)) * i;\n      lbl.y = NUMBERLINE_CENTER_Y;\n    }\n  }\n\n  drawLabels(11);\n\n  function initTicks(numberOfTicks) {\n    let ticks = [];\n    let tickSpace = lineWidth / (numberOfTicks - 1);\n    for (let i = 0; i < numberOfTicks; i++) {\n      let t = createTick(i, 0);\n      ticks.push(t);\n      app.stage.addChild(t);\n    }\n    ticksOnLine = ticks;\n  }\n\n  //initTicks(31)\n\n  function animateTicks(n) {\n    let dx = LINE_WIDTH / n;\n    for (let i = 0; i < ticksOnLine.length; i++) {\n      if (i <= n) {\n        ticksOnLine[i].alpha = 1;\n        window.createjs.Tween.get(ticksOnLine[i]).to(\n          {\n            x: DIM + i * dx\n          },\n          1000,\n          window.createjs.Ease.getPowInOut(4)\n        );\n      } else if (i > n) {\n        window.createjs.Tween.get(ticksOnLine[i]).to(\n          {\n            alpha: 0,\n            x: DIM + LINE_WIDTH\n          },\n          1000,\n          window.createjs.Ease.getPowInOut(4)\n        );\n      }\n    }\n  }\n\n  animateTicks(10);\n\n  function animateLabels(max) {\n    pauseClick = true;\n    let lblsToAdd = [];\n    let n = Math.max(max, labelsOnLine.length);\n    // console.log(\"n\", n);\n    for (let i = 0; i <= n; i++) {\n      // console.log(\"i\", i);\n      if (i < labelsOnLine.length) {\n        window.createjs.Tween.get(labelsOnLine[i])\n          .to(\n            {\n              x: DIM + (i * LINE_WIDTH) / max\n            },\n            300,\n            window.createjs.Ease.getPowInOut(4)\n          )\n          .call(() => {\n            pauseClick = false;\n          });\n      }\n\n      if (i >= labelsOnLine.length && i <= max) {\n        // console.log(\"APPENDING LABEL\");\n        let lbl = createPureLbl([i, 1]);\n        lblsToAdd.push(lbl);\n        app.stage.addChild(lbl);\n        lbl.x = LINE_WIDTH + DIM;\n        flipLbl(lbl);\n        lbl.y = NUMBERLINE_CENTER_Y;\n        window.createjs.Tween.get(lbl)\n          .to(\n            {\n              x: DIM + (i * LINE_WIDTH) / max\n            },\n            300,\n            window.createjs.Ease.getPowInOut(4)\n          )\n          .call(() => {\n            labelsOnLine.push(...lblsToAdd);\n          });\n      }\n\n      if (i > max && i < labelsOnLine.length) {\n        window.createjs.Tween.get(labelsOnLine[i])\n          .to(\n            {\n              alpha: 0\n            },\n            300,\n            window.createjs.Ease.getPowInOut(4)\n          )\n          .call(() => {\n            app.stage.removeChild(labelsOnLine[i]);\n            removeElement(labelsOnLine[i], labelsOnLine);\n          });\n      }\n    }\n\n    // console.log(\"labelsOnLine.length\", labelsOnLine.length);\n  }\n\n  let lblsPlusButton = createActionButton(\"+\", () => {\n    if (!pauseClick) {\n      animateLabels(labelsOnLine.length);\n    }\n  });\n  app.stage.addChild(lblsPlusButton);\n  lblsPlusButton.x = DIM + LINE_WIDTH;\n  lblsPlusButton.y = NUMBERLINE_CENTER_Y + DIM;\n\n  let lblsMinusButton = createActionButton(\"-\", () => {\n    if (!pauseClick) {\n      animateLabels(labelsOnLine.length - 2);\n    }\n  });\n  app.stage.addChild(lblsMinusButton);\n  lblsMinusButton.x = DIM;\n  lblsMinusButton.y = NUMBERLINE_CENTER_Y + DIM;\n\n  function areAllPinsSet(pins) {\n    let set = true;\n    for (let p of pinsInPlay) {\n      if (p.onLine == false) {\n        set = false;\n      }\n    }\n    return set;\n  }\n\n  function removeElement(e, arr) {\n    if (arr.length != 0) {\n      let i = arr.indexOf(e);\n      arr.splice(i, 1);\n    }\n  }\n\n  function createFeedBackLbl(labels) {\n    return labels.map(l => {\n      let t = new PIXI.Text(l._n + \"/\" + l._d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: dx / 2,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      t.anchor.set(0.5);\n      app.stage.addChild(t);\n      t.x = dim + ((l.expectedLocation - dim) * minStep) / originalMinStep;\n      l.expectedLocation = t.x;\n      t.y = 3.2 * dim;\n      return t;\n    });\n  }\n\n  function createPinFromWidget() {\n    pinsOffLineCount += 1;\n    let p = createPin();\n    p.on(\"pointerdown\", onPinDragStart)\n      .on(\"pointermove\", onPinDragMove)\n      .on(\"pointerup\", onPinDragEnd);\n    p.x = 11 * dim;\n    p.y = 4 * dim;\n    window.createjs.Tween.get(p).to(\n      {\n        x: 11 * dim - 1.1 * p.width * pinsOffLineCount,\n        y: 4 * dim\n      },\n      500,\n      window.createjs.Ease.getPowInOut(4)\n    );\n    p.onLine = false;\n    p.isSet = false;\n    p.mutable = true;\n    pinsInPlay.push(p);\n    globalPinRef.push(p);\n    app.stage.addChild(p);\n    app.stage.addChild(pinWidget);\n  }\n\n  function createTick(nodeIndex, width) {\n    let tick = new PIXI.Graphics();\n    tick.lineStyle(3, 0x000000, 1);\n    tick.moveTo(0, 0);\n    tick.lineTo(0, dim / 4);\n    tick.x = dim + width * nodeIndex;\n    tick.y = 2.875 * dim;\n    return tick;\n  }\n\n  function createActionButton(text, action) {\n    var graphics = new PIXI.Graphics();\n    graphics.lineStyle(0, 0xb7b7b7, 1);\n    graphics.beginFill(CONST.COLORS.CORAL);\n    graphics.drawRoundedRect(0, 0, 0.5 * dim, 0.5 * dim, 5);\n    graphics.endFill();\n\n    var texture = app.renderer.generateTexture(graphics);\n    let tile = new PIXI.Sprite(texture);\n    tile.anchor.set(0.5);\n\n    let den = new PIXI.Text(text, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: dim / 4,\n      fill: 0xffffff,\n      align: \"center\"\n    });\n    den.anchor.set(0.5);\n\n    let tileContainer = new PIXI.Container();\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(den);\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n    tileContainer.buttonMode = true;\n\n    tileContainer.on(\"pointerdown\", action);\n\n    // move the sprite to its designated position\n    tileContainer.x = 10 * dim;\n    tileContainer.y = topMargin + tileContainer.height / 2;\n    tileContainer.checkAnswer = true;\n    tileContainer.text = den;\n\n    tileContainer.tile = tile;\n    return tileContainer;\n  }\n\n  function freezeView() {\n    for (let c of [\n      ...pinsInPlay,\n      ...blocksOnLine,\n      ...labelsOnLine,\n      pinWidget,\n      ...blocksInWidget\n    ]) {\n      c.interactive = false;\n    }\n    goButton.interactive = false;\n  }\n\n  function unfreezeView() {\n    for (let c of [\n      ...pinsInPlay,\n      ...blocksOnLine,\n      ...labelsOnLine,\n      pinWidget,\n      ...blocksInWidget,\n      goButton\n    ]) {\n      if (c.isSet == false) {\n        c.interactive = true;\n      }\n    }\n    goButton.interactive = true;\n  }\n\n  function refreshGame() {\n    for (let e of [...pinsInPlay, ...labelsOnLine]) {\n      e.onLine = false;\n    }\n    firstTry = false;\n  }\n\n  function getMaxLabelX(lbls) {\n    let maxLabel;\n    let val = 0;\n    for (let i = 0; i < lbls.length; i++) {\n      let curr = lbls[i];\n      let currVal = curr._n / curr._d;\n      if (currVal > val) {\n        val = currVal;\n        maxLabel = curr;\n      }\n    }\n    return maxLabel.x;\n  }\n\n  let goButton;\n  //xfgoButton.static = false;\n\n  //app.stage.addChild(goButton)\n\n  let t = createTick(20);\n  app.stage.addChild(t);\n\n  //app.renderer.interactive = true\n  backGround.on(\"pointerup\", globalPointerUp);\n\n  function globalPointerUp() {\n    activeEntity.dragging = false;\n    activeEntity.alpha = 1;\n    // console.log(\"PointerUP!!!!!\")\n\n    // WHAT THE FUCK IS THIS DOING!!!\n    if (\n      activeEntity.x + activeEntity.width / 2 < dim &&\n      activeEntity.mutable == true\n    ) {\n      if (activeEntity.isFeedBlock) {\n        let i = blocksOnLine.indexOf(activeEntity);\n        blocksOnLine.splice(i, 1);\n      }\n      if (activeEntity.isPin) {\n        let i = pinsInPlay.indexOf(activeEntity);\n        pinsInPlay.splice(i, 1);\n      }\n      app.stage.removeChild(activeEntity);\n    }\n  }\n\n  function getNearestObject(pins, location) {\n    let closestPin = null;\n\n    if (pins.length != 0) {\n      closestPin = pins[0];\n\n      let deltaClosestPin = Math.abs(closestPin.x - location[0]);\n\n      for (let i = 1; i < pins.length; i++) {\n        let currentPin = pins[i];\n        let deltaCurrentPin = Math.abs(currentPin.x - location[0]);\n\n        if (deltaCurrentPin < deltaClosestPin) {\n          deltaClosestPin = deltaCurrentPin;\n          closestPin = currentPin;\n        }\n      }\n    }\n\n    return closestPin;\n  }\n\n  function itemsLessThan(x, items) {\n    let itemsLess = [];\n    if (items.length != 0) {\n      for (let l of items) {\n        // console.log(\"in loop\");\n        if (l.x < x && l.onLine == true) {\n          // console.log(\"pushing\");\n          itemsLess.push(l);\n        }\n      }\n    }\n    return itemsLess;\n  }\n\n  function animateFeedBack(blocks, start, pins, labels, i) {\n    // Loop end criteria is based on the feedBlocks\n    if (blocks.length == 0) {\n      // Check answer criteria is going to change.\n      // Make sure all necessary pins are set:\n      let allPinsSet = true;\n      for (let b of pinsCurrentlySet) {\n        if (!b) {\n          allPinsSet = false;\n        }\n      }\n\n      if (currentProblem.pinWidget) {\n        allPinsSet = true;\n      }\n\n      // No leftover pins, no leftover labels, all required pins are set\n      if (\n        (pins.length == 0 ||\n          currentProblem.dontScorePins ||\n          currentProblem.pinWidget) &&\n        labels.length == 0 &&\n        allPinsSet\n      ) {\n       \n        goButton.interactive = true;\n        goButton.text.text = \"Next Problem\";\n        //dropGameOverModal(loadNextGame)\n        return;\n      } else {\n        for (let p of pins) {\n          if (!currentProblem.pinWidget) {\n            window.createjs.Tween.get(p).to(\n              {\n                x: p.originalLocation[0],\n                y: p.originalLocation[1]\n              },\n              500,\n              window.createjs.Ease.getPowInOut(4)\n            );\n          }\n        }\n\n        labelsOnLine = labels;\n        pinsInPlay = pins;\n        goButton.text.text = \"Try Again\";\n        goButton.interactive = true;\n        refreshGame();\n        return;\n      }\n    } else {\n      let b = blocks.pop();\n      let newStart = [start[0] + b.width, start[1]];\n      //\n      let animateTo = i == 0 ? [b.x, b.y] : [(i - 1) * minStep + dim, start[1]];\n      window.createjs.Tween.get(b)\n        .to(\n          {\n            x: animateTo[0],\n            y: animateTo[1]\n          },\n          500,\n          window.createjs.Ease.getPowInOut(4)\n        )\n        .call(() => {\n          // HELLO! The nearest pin needs to also be on the line - maybe have boolean \"on the line\" property\n\n          let nearestPin = getNearestObject(pins, start);\n\n          // Label Logic\n          let setLabel = false;\n          let nearestLabel = null;\n\n          for (let l of labels) {\n            let expectedLocation =\n              (l._n / l._d) * minStep * currentProblem.partitionsPerWhole + dim;\n            if (\n              Math.abs(start[0] - expectedLocation) < dT * minStep &&\n              Math.abs(l.x - expectedLocation) < dT * minStep\n            ) {\n              setLabel = true;\n              nearestLabel = l;\n              l.isSet = true;\n              l.interactive = false;\n              removeElement(l, labels);\n            }\n          }\n\n          let leftoverLabels = itemsLessThan(start[0], labels);\n          let setPin =\n            nearestPin &&\n            Math.abs(nearestPin.x - start[0]) < dT * minStep &&\n            pinsCurrentlySet[i] == false\n              ? true\n              : false;\n\n          if (setPin) {\n            pinsCurrentlySet[i] = true;\n            nearestPin.circleSprite.texture = app.renderer.generateTexture(\n              blueCircle\n            );\n            nearestPin.draggable = false;\n            removeElement(nearestPin, pins);\n          }\n\n          if (setPin && setLabel) {\n            // console.log(\"HOLY SHIT SETTING LABEL AND PIN WTF WTF WTF\");\n\n            window.createjs.Tween.get(nearestPin)\n              .to(\n                {\n                  x: animateTo[0] + minStep,\n                  y: 2.5 * dim\n                },\n                500,\n                window.createjs.Ease.getPowInOut(4)\n              )\n              .call(() => {\n                window.createjs.Tween.get(nearestLabel)\n                  .to(\n                    {\n                      x: animateTo[0] + minStep,\n                      y: 3 * dim\n                    },\n                    500,\n                    window.createjs.Ease.getPowInOut(4)\n                  )\n                  .call(() => {\n                    i += 1;\n                    nearestPin.isSet = true;\n\n                    if (leftoverLabels.length != 0) {\n                      eatLeftovers(leftoverLabels, () => {\n                        animateFeedBack(blocks, newStart, pins, labels, i);\n                      });\n                    } else {\n                      animateFeedBack(blocks, newStart, pins, labels, i);\n                    }\n                  });\n              });\n          } else if (setPin) {\n            window.createjs.Tween.get(nearestPin)\n              .to(\n                {\n                  x: animateTo[0] + minStep,\n                  y: 2.5 * dim\n                },\n                500,\n                window.createjs.Ease.getPowInOut(4)\n              )\n              .call(() => {\n                // console.log(\"JUST SETTING PIN\");\n                nearestPin.isSet = true;\n                i += 1;\n                if (leftoverLabels.length != 0) {\n                  eatLeftovers(leftoverLabels, () => {\n                    animateFeedBack(blocks, newStart, pins, labels, i);\n                  });\n                } else {\n                  animateFeedBack(blocks, newStart, pins, labels, i);\n                }\n              });\n          } else if (setLabel) {\n            window.createjs.Tween.get(nearestLabel)\n              .to(\n                {\n                  x: animateTo[0] + minStep,\n                  y: 3 * dim\n                },\n                500,\n                window.createjs.Ease.getPowInOut(4)\n              )\n              .call(() => {\n                i += 1;\n                if (leftoverLabels.length != 0) {\n                  eatLeftovers(leftoverLabels, () => {\n                    animateFeedBack(blocks, newStart, pins, labels, i);\n                  });\n                } else {\n                  animateFeedBack(blocks, newStart, pins, labels, i);\n                }\n              });\n          } else {\n            i += 1;\n            if (leftoverLabels.length != 0) {\n              eatLeftovers(leftoverLabels, () => {\n                animateFeedBack(blocks, newStart, pins, labels, i);\n              });\n            } else {\n              animateFeedBack(blocks, newStart, pins, labels, i);\n            }\n          }\n        });\n    }\n  }\n\n  function eatLeftovers(leftovers, dessert) {\n    if (leftovers.length == 0) {\n      dessert();\n      return;\n    } else {\n      let curr = leftovers.pop();\n      let customFeedBlockWidth = curr.expectedLocation - dim;\n\n      let customFeedBlock = createFeedBlock(\n        customFeedBlockWidth,\n        curr._n,\n        curr._d,\n        true,\n        true\n      );\n\n      customFeedBlock.x = dim;\n      customFeedBlock.y = 2.7 * dim;\n      customFeedBlock.alpha = 0;\n\n      app.stage.addChild(customFeedBlock);\n\n      window.createjs.Tween.get(curr)\n        .to(\n          {\n            x: curr.originalLocation[0],\n            y: curr.originalLocation[1]\n          },\n          1000,\n          window.createjs.Ease.getPowInOut(4)\n        )\n        .call(() => {\n          curr.onLine = false;\n          app.stage.removeChild(customFeedBlock);\n          eatLeftovers(leftovers, dessert);\n        });\n    }\n  }\n\n  function createBlockWidget(blocks, wholeWidth) {\n    for (let i = 0; i < blocks.length; i++) {\n      let block = new PIXI.Graphics();\n      block.beginFill(CONST.COLORS.BLUE);\n      block.drawRoundedRect(\n        dim,\n        topMargin + (i * 3 * dim) / 8,\n        (wholeWidth / blocks[i].den) * blocks[i].num,\n        dim / 4,\n        5\n      );\n      block.endFill();\n      block.num = blocks[i].num;\n      block.den = blocks[i].den;\n      block.interactive = true;\n      block.isSet = false;\n      block.on(\"pointerdown\", onBlockWidgetSelected);\n      blocksInWidget.push(block);\n      app.stage.addChild(block);\n    }\n  }\n\n  // Do I need to pass this the Numberline max so I can calculate the block\n  // width based on the fraction is supposed to represent.\n\n  function createMeasureBlock(width, num, den, label) {\n    let blockContainer = new PIXI.Container();\n    var block = new PIXI.Graphics();\n    block.beginFill(CONST.COLORS.BLUE);\n    block.drawRoundedRect(0, 0, width, dim / 4, 5);\n    block.endFill();\n    let blockTexture = app.renderer.generateTexture(block);\n    let blockSprite = new PIXI.Sprite(blockTexture);\n    blockSprite.alpha = 0.7;\n    blockContainer.addChild(blockSprite);\n    blockContainer.hitSpot = blockSprite;\n\n    let text = new PIXI.Text(num + \"/\" + den, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: 12,\n      fill: 0x000000,\n      align: \"center\"\n    });\n    text.anchor.set(0.5);\n    text.x = width / 2;\n    text.y = dim / 8;\n    text.style.fill = 0xffffff;\n\n    if (label) {\n      blockContainer.addChild(text);\n    }\n\n    blockContainer.text = text;\n    blockContainer.mutable = true;\n    blockContainer.interactive = true;\n    blockContainer\n      .on(\"pointerdown\", onBlockDragStart)\n      .on(\"pointermove\", onBlockDragMove)\n      .on(\"pointerup\", onBlockDragEnd);\n\n    blocksOnLine.push(blockContainer);\n\n    return blockContainer;\n  }\n\n  function createFeedBlock(width, num, den, label, custom) {\n    let blockContainer = new PIXI.Container();\n    var block = new PIXI.Graphics();\n    let blockFill = custom ? 0xffffff : CONST.COLORS.BLUE;\n    block.beginFill(blockFill);\n    let lineWidth = custom ? 1 : 0;\n    block.lineStyle(lineWidth, 0x000000, 1);\n    block.drawRoundedRect(0, 0, width + 0.5, dim / 4, 5);\n    block.endFill();\n    let blockTexture = app.renderer.generateTexture(block);\n    let blockSprite = new PIXI.Sprite(blockTexture);\n    let alpha = custom ? 1 : 0.7;\n    blockSprite.alpha = alpha;\n    blockContainer.addChild(blockSprite);\n    blockContainer.hitSpot = blockSprite;\n\n    let textFill = custom ? 0x000000 : 0xffffff;\n    let text = new PIXI.Text(num + \"/\" + den, {\n      fontFamily: \"Chalkboard SE\",\n      fontSize: 12,\n      fill: textFill,\n      align: \"center\"\n    });\n    text.anchor.set(0.5);\n    text.x = width / 2;\n    text.y = dim / 8;\n\n    if (label) {\n      blockContainer.addChild(text);\n    }\n\n    blockContainer.text = text;\n    blockContainer.static = false;\n    blockContainer.isFeedBlock = true;\n\n    return blockContainer;\n  }\n\n  function createStaticPin() {\n    let h = (1 / 2) * dim;\n    let w = dim / 4;\n\n    var circleTexture = app.renderer.generateTexture(blueCircle);\n    let circleSprite = new PIXI.Sprite(circleTexture);\n    circleSprite.alpha = 0.5;\n    circleSprite.anchor.set(0.5);\n\n    var stem = new PIXI.Graphics();\n    stem.lineStyle(2, 0x000000, 10);\n    stem.moveTo(0, dim / 5);\n    stem.lineTo(0, dim / 2);\n\n    let pinContainer = new PIXI.Container();\n    pinContainer.addChild(circleSprite);\n    pinContainer.addChild(stem);\n\n    pinContainer.active = false;\n    pinContainer.interactive = false;\n    pinContainer.mutable = false;\n\n    pinContainer.x = 0;\n    pinContainer.y = 0;\n    pinContainer.draggable = true;\n    pinContainer.onLine = true;\n    pinContainer.isPin = true;\n    pinContainer.static = true;\n    pinContainer.circleSprite = circleSprite;\n\n    return pinContainer;\n  }\n\n  function createPin() {\n    let h = (1 / 2) * dim;\n    let w = dim / 4;\n\n    var circle = new PIXI.Graphics();\n    circle.lineStyle(2, 0x000000);\n    circle.beginFill(0xffffff);\n    // why dim/5? - cause that's what I decided.\n    circle.drawCircle(dim / 5, dim / 5, dim / 5);\n    circle.endFill();\n    circle.x = 0.5;\n    circle.y = 0.5;\n\n    let circleTexture = app.renderer.generateTexture(circle);\n    let circleSprite = new PIXI.Sprite(circleTexture);\n    circleSprite.alpha = 0.5;\n    circleSprite.anchor.set(0.5);\n    //circleSprite.texture = pinkCircleTexture\n\n    var stem = new PIXI.Graphics();\n    stem.lineStyle(2, 0x000000, 10);\n    stem.moveTo(0, dim / 5);\n    stem.lineTo(0, dim / 2);\n\n    let pinContainer = new PIXI.Container();\n    pinContainer.addChild(circleSprite);\n    pinContainer.addChild(stem);\n\n    pinContainer.active = false;\n    pinContainer.interactive = true;\n\n    pinContainer.x = 0;\n    pinContainer.y = 0;\n    pinContainer.draggable = true;\n    pinContainer.onLine = false;\n    pinContainer.isPin = true;\n    pinContainer.mutable = true;\n    pinContainer.circleSprite = circleSprite;\n\n    return pinContainer;\n  }\n\n  function createPureLbl(frac) {\n    let tileContainer = new PIXI.Container();\n\n    let n = frac[0];\n    let d = frac[1];\n    let whole = d == 1 ? true : false;\n\n    let h = d == 1 ? dim / 4 : (1 / 2) * dim;\n    let w = dim / 4;\n    let textSize = 0.7 * w;\n\n    var block = new PIXI.Graphics();\n    block.drawRoundedRect(0, 0, w, h, 3);\n    block.x = 1;\n    block.y = 1;\n\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5);\n\n    // All or only some of these may exist depending on if we're using a \"whole\" or not.\n    let mid;\n    let num;\n    let den;\n    let l;\n\n    if (!whole) {\n      l = new PIXI.Graphics();\n      l.lineStyle(2, 0x000000, 2);\n      l.moveTo(0, dim / 4);\n      l.lineTo(0, dim / 2);\n      mid = new PIXI.Graphics();\n      mid.lineStyle(2, 0x000000, 2);\n      mid.moveTo(-dim / 10, 0);\n      mid.lineTo(dim / 10, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -h / 5;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = h / 5;\n    } else {\n      l = new PIXI.Graphics();\n      l.lineStyle(3, 0x000000);\n      l.moveTo(0, dim / 4);\n      l.lineTo(0, dim / 2);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = dim / 8;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.addChild(l);\n    tileContainer.hitSpot = tile;\n\n    // Line style appears grey unless we add this after the prefious if block - not sure why.\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n\n    tileContainer.x = dim;\n    tileContainer.y = 0;\n    tileContainer.d = den;\n    tileContainer.n = num;\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = dim / 2;\n    tileContainer.onLine = false;\n\n    return tileContainer;\n  }\n\n  function createFractionLbl(frac) {\n    let tileContainer = new PIXI.Container();\n\n    let n = frac[0];\n    let d = frac[1];\n    let whole = d == 1 ? true : false;\n\n    let h = d == 1 ? dim / 4 : (1 / 2) * dim;\n    let w = dim / 4;\n    let textSize = 0.7 * w;\n\n    var block = new PIXI.Graphics();\n    block.lineStyle(2, 0x000000);\n    block.beginFill(0xffffff);\n    block.drawRoundedRect(0, 0, w, h, 3);\n    block.endFill();\n    block.x = 1;\n    block.y = 1;\n\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5);\n\n    // All or only some of these may exist depending on if we're using a \"whole\" or not.\n    let mid;\n    let num;\n    let den;\n    let l;\n\n    if (!whole) {\n      l = new PIXI.Graphics();\n      l.lineStyle(2, 0x000000, 2);\n      l.moveTo(0, dim / 4);\n      l.lineTo(0, dim / 2);\n      mid = new PIXI.Graphics();\n      mid.lineStyle(2, 0x000000, 2);\n      mid.moveTo(-dim / 10, 0);\n      mid.lineTo(dim / 10, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -h / 5;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = h / 5;\n    } else {\n      l = new PIXI.Graphics();\n      l.lineStyle(2, 0x000000, 2);\n      l.moveTo(0, dim / 8);\n      l.lineTo(0, dim / 2);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: textSize,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = 0;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.addChild(l);\n    tileContainer.hitSpot = tile;\n\n    // Line style appears grey unless we add this after the prefious if block - not sure why.\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n\n    tileContainer.x = dim;\n    tileContainer.y = 0;\n    tileContainer.d = den;\n    tileContainer.n = num;\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = dim / 2;\n    tileContainer.onLine = false;\n\n    return tileContainer;\n  }\n\n  let line = createNumberLine();\n  app.stage.addChild(line);\n\n  function createNumberLine(den) {\n    let line = new PIXI.Graphics();\n    line.lineStyle(4, 0x000000, 1);\n    line.moveTo(dim, 3 * dim);\n    line.lineTo(dim + 10 * dim, 3 * dim);\n    return line;\n  }\n\n  function onBlockWidgetSelected() {\n    let b = createMeasureBlock(this.width, this.num, this.den);\n    app.stage.addChild(b);\n    b.x = dim;\n    b.y = 3 * dim - b.height;\n  }\n\n  // Label Actions\n\n  // Block Actions\n\n  // Label Actions\n\n  function onBlockDragStart(event) {\n    let touchedAtX = event.data.global.x;\n    let touchedAtY = event.data.global.y;\n    this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n    // store a reference to the data\n    // the reason for this is because of multitouch\n    // we want to track the movement of this particular touch\n    this.data = event.data;\n    this.alpha = 0.5;\n    this.dragging = true;\n    activeEntity = this;\n    this.parent.addChild(this);\n  }\n\n  function onBlockDragEnd() {\n    this.alpha = 1;\n    if (this.x + this.width / 2 < dim) {\n      let i = blocksOnLine.indexOf(this);\n      blocksOnLine.splice(i, 1);\n      app.stage.removeChild(this);\n    }\n\n    this.dragging = false;\n    // set the interaction data to null\n    this.data = null;\n  }\n\n  function onBlockDragMove() {\n    if (this.dragging) {\n      var newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch[0];\n    }\n  }\n\n  // Pin Actions\n\n  function onPinDragStart(event) {\n    // Store a reference to the data\n    if (this.draggable) {\n      this.data = event.data;\n      this.alpha = 0.5;\n      this.dragging = true;\n      activeEntity = this;\n      this.onLine = true;\n      this.parent.addChild(this);\n    }\n    if (areAllPinsSet(pinsInPlay)) {\n      pinsOffLineCount = 0;\n    }\n  }\n\n  function onPinDragEnd() {\n    this.alpha = 1;\n\n    if (this.x + this.width / 2 < dim && this.mutable == true) {\n      let i = pinsInPlay.indexOf(this);\n      pinsInPlay.splice(i, 1);\n      app.stage.removeChild(this);\n    }\n\n    this.dragging = false;\n    // set the interaction data to null\n    this.data = null;\n    this.onLine = true;\n  }\n\n  function onPinDragMove() {\n    if (this.dragging) {\n      var newPosition = this.data.getLocalPosition(this.parent);\n      if (false) {\n        this.dragging = false;\n        this.alpha = 1;\n      }\n      this.position.x = newPosition.x;\n      this.position.y = 2.5 * dim;\n    }\n  }\n\n  function flipLbl(lbl) {\n    if (lbl.d) {\n      lbl.scale.y = lbl.scale.y * -1;\n      lbl.d.scale.y = lbl.d.scale.y * -1;\n      lbl.n.scale.y = lbl.n.scale.y * -1;\n      let numY = lbl.n.y;\n      lbl.n.y = lbl.d.y;\n      lbl.d.y = numY;\n    } else {\n      lbl.scale.y = lbl.scale.y * -1;\n      lbl.n.scale.y = lbl.n.scale.y * -1;\n    }\n  }\n\n  function createGridTool() {\n    let grid = new PIXI.Container();\n\n    let currBlock = { k: 0 };\n    currBlock.k = -1;\n\n    //let vPlus = createCircleButton(\"+\");\n    let vPlus = new PIXI.Sprite.from(plusButton);\n    vPlus.interactive = true;\n    vPlus.anchor.set(0.5);\n    vPlus.height = DIM / 2;\n    vPlus.width = DIM / 2;\n    vPlus.y = CONTAINER_TOP - DIM / 4;\n    vPlus.x = (3 * CONTAINER_WIDTH) / 4;\n    grid.addChild(vPlus);\n\n    let vMinus = new PIXI.Sprite.from(minusButton);\n    vMinus.interactive = true;\n    vMinus.anchor.set(0.5);\n    vMinus.height = DIM / 2;\n    vMinus.width = DIM / 2;\n    vMinus.y = CONTAINER_TOP - DIM / 4;\n    vMinus.x = CONTAINER_WIDTH / 4;\n    grid.addChild(vMinus);\n\n    let hPlus = createCircleButton(\"+\");\n    hPlus.x = CONTAINER_RIGHT + DIM / 4;\n    hPlus.y = CONTAINER_HEIGHT / 2;\n    //grid.addChild(hPlus)\n\n    let hMinus = createCircleButton(\"-\");\n    hMinus.x = CONTAINER_LEFT - DIM / 4;\n    hMinus.y = CONTAINER_HEIGHT / 2;\n    //grid.addChild(hMinus)\n\n    let frac = createFraction(0, 1);\n    frac.x = (CONTAINER_RIGHT - CONTAINER_LEFT) / 2;\n    frac.y = CONTAINER_TOP - DIM / 8;\n    //  grid.addChild(frac);\n\n    let cont = createContainer(CONTAINER_WIDTH, CONTAINER_HEIGHT);\n    grid.addChild(cont);\n    cont.x = CONTAINER_WIDTH / 2;\n    cont.y = CONTAINER_HEIGHT / 2;\n    cont.interactive = true;\n    cont.on(\"pointerdown\", createStack);\n\n    let fractions = [];\n    let horizontalLines = [];\n    let verticalLines = [];\n    let vPartitions = 3;\n    let hPartitions = 0;\n    let colorIndex = 0;\n    let colors = [\n      CONST.COLORS.BLUE,\n      CONST.COLORS.RED,\n      CONST.COLORS.GREEN,\n      CONST.COLORS.ORANGE,\n      CONST.COLORS.PURPLE\n    ];\n    let colorLength = colors.length;\n    let currentColor = () => {\n      return colors[colorIndex % colorLength];\n    };\n    let currFrac = [0, 1];\n\n    const v_part_dim = () => {\n      return CONTAINER_HEIGHT / hPartitions;\n    };\n\n    const h_part_dim = () => {\n      return CONTAINER_WIDTH / vPartitions;\n    };\n\n    const total_parts = () => {\n      return hPartitions * vPartitions;\n    };\n\n    initVerticalLines(1);\n    //initHorizontalLines(1)\n    animateVerticalLines(1);\n\n    vPlus.on(\"pointerdown\", () => animateVerticalLines(1));\n    vMinus.on(\"pointerdown\", () => animateVerticalLines(-1));\n    //hPlus.on(\"pointerdown\", () => animateVerticalLines(1));\n    //hMinus.on(\"pointerdown\", () => animateVerticalLines(-1));\n\n    //grid.addChild()\n\n    // Helpers\n\n    function hideGrid() {\n      let toHide = [...verticalLines, ...horizontalLines];\n      toHide.forEach(h => (h.alpha = 0));\n    }\n\n    function bringLinesToFront() {\n      let lines = [...verticalLines, ...horizontalLines];\n      lines.forEach(l => grid.addChild(l));\n    }\n\n    // Constructors\n    function createCircleButton(text) {\n      let h = DIM / 4;\n      let w = DIM / 4;\n\n      var circle = new PIXI.Graphics();\n      circle.lineStyle(2, 0xb7b7b7);\n      circle.beginFill(0xffffff);\n      circle.drawCircle(DIM / 5, DIM / 5, DIM / 5);\n      circle.endFill();\n      circle.x = 1;\n      circle.y = 1;\n\n      let circleTexture = app.renderer.generateTexture(circle);\n      let circleSprite = new PIXI.Sprite(circleTexture);\n      circleSprite.alpha = 0.8;\n      circleSprite.anchor.set(0.5);\n\n      let pinContainer = new PIXI.Container();\n      pinContainer.addChild(circleSprite);\n\n      let operator = new PIXI.Text(text, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: dx / 2,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      operator.anchor.set(0.5);\n      operator.x = 0;\n      operator.y = 0;\n      pinContainer.addChild(operator);\n      pinContainer.interactive = true;\n\n      return pinContainer;\n    }\n\n    function createStack(event) {\n      bringLinesToFront();\n\n      let hdim = h_part_dim();\n      let vdim = v_part_dim();\n      let pos = event.data.getLocalPosition(this.parent);\n      let i = Math.floor((pos.x - CONTAINER_LEFT) / hdim);\n      let j = Math.floor((pos.y - CONTAINER_TOP) / vdim);\n  \n      let k = i + 1\n  \n      if (false) {\n        // do nothing\n      } else {\n        var block = new PIXI.Graphics();\n        block.beginFill(CONST.COLORS.BLUE);\n        block.drawRoundedRect(\n          0,\n          0,\n          (CONTAINER_WIDTH * k) / vPartitions,\n          CONTAINER_HEIGHT,\n          5\n        );\n        currFrac = [k, vPartitions];\n        block.endFill();\n        block.x = 1;\n        block.y = 1;\n\n        let blockTexture = app.renderer.generateTexture(block);\n        let blockSprite = new PIXI.Sprite(blockTexture);\n        blockSprite.alpha = 0.5;\n\n        blockSprite.x = 0;\n        blockSprite.y = 0;\n        blockSprite.anchor.set(0);\n        grid.removeChild(currBlock);\n\n        if (k == 1 && currBlock.k == 1) {\n          currBlock.k = 0;\n          currFrac[0] = 0;\n        } else {\n          grid.addChild(blockSprite);\n          blockSprite.k = k;\n          currBlock = blockSprite;\n        }\n        frac.write(currFrac[0], currFrac[1]);\n      }\n    }\n\n    function createContainer(width, height) {\n      let containerGraphic = new PIXI.Graphics();\n      containerGraphic.lineStyle(3, 0x000000);\n      containerGraphic.moveTo(0, 0);\n      containerGraphic.lineTo(0, height);\n      containerGraphic.lineTo(width, height);\n      containerGraphic.lineTo(width, 0);\n      containerGraphic.lineTo(0, 0);\n      containerGraphic.interactive = true;\n      containerGraphic.x = 1.5;\n      containerGraphic.y = 1.5;\n\n      let containerTexture = app.renderer.generateTexture(containerGraphic);\n      let containerSprite = new PIXI.Sprite(containerTexture);\n      containerSprite.anchor.set(0.5);\n      containerSprite.width = containerGraphic.width + 1.5;\n      containerSprite.height = containerGraphic.height + 1.5;\n      return containerSprite;\n    }\n\n    function initVerticalLines(partition) {\n      for (let i = 0; i < 13; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(0, CONTAINER_HEIGHT);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        verticalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function initHorizontalLines(partition) {\n      for (let i = 0; i < 11; i++) {\n        let g = new PIXI.Graphics();\n        g.lineStyle(3, 0x000000);\n        g.lineTo(CONTAINER_WIDTH, 0);\n        g.y = CONTAINER_TOP;\n        g.x = CONTAINER_LEFT;\n        horizontalLines.push(g);\n        grid.addChild(g);\n      }\n    }\n\n    function animateVerticalLines(inc) {\n      // console.log(\"ANIMATING horizontalLines\");\n      vPartitions += inc;\n      if (vPartitions != 0 && vPartitions != 13) {\n        currFrac[1] = vPartitions;\n        if (currFrac[0] > vPartitions) {\n          currFrac[0] = vPartitions;\n        }\n\n        let dim = v_part_dim();\n        window.createjs.Tween.get(currBlock).to(\n          {\n            width: (CONTAINER_WIDTH * currFrac[0]) / currFrac[1]\n          },\n          500,\n          window.createjs.Ease.getPowInOut(4)\n        );\n\n        colorIndex += 1;\n\n        let spacing = CONTAINER_WIDTH / vPartitions;\n\n        verticalLines.forEach((l, i) => {\n          //// console.log(\"VERTICAL LINES WHATS UP!!\");\n          grid.addChild(l);\n          if (i > vPartitions) {\n            window.createjs.Tween.get(l).to(\n              {\n                x: CONTAINER_RIGHT\n              },\n              500,\n              window.createjs.Ease.getPowInOut(4)\n            );\n          } else {\n            window.createjs.Tween.get(l).to(\n              {\n                x: i * spacing + CONTAINER_LEFT\n              },\n              500,\n              window.createjs.Ease.getPowInOut(4)\n            );\n          }\n        });\n      } else {\n        vPartitions -= inc;\n      }\n\n      // console.log(\"currFrac\", currFrac);\n      frac.write(currFrac[0], currFrac[1]);\n    }\n\n    function onFracStart(event) {\n      bringLinesToFront();\n      let touchedAtX = event.data.getLocalPosition(this.parent).x;\n      let touchedAtY = event.data.getLocalPosition(this.parent).y;\n      this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n      grid.addChild(this);\n      this.data = event.data;\n      this.dragging = true;\n    }\n\n    function round(val, origin) {\n      let i = Math.round(Math.abs(val - origin) / (CONTAINER_WIDTH / 12));\n      return origin + (i * CONTAINER_WIDTH) / 12;\n    }\n\n    function onFracEnd() {\n      this.data = null;\n      this.dragging = false;\n      if (this.y + this.height > setup.width) {\n        let i = fractions.indexOf(this);\n        fractions.splice(i, 1);\n        app.stage.removeChild(this);\n      }\n\n      let x = round(this.x, grid.x);\n      let y = round(this.y, grid.y);\n    }\n\n    function onFracMove() {\n      if (this.dragging) {\n        let pointerPosition = this.data.getLocalPosition(this.parent);\n        this.y = pointerPosition.y + this.deltaTouch[1];\n        this.x = pointerPosition.x + this.deltaTouch[0];\n      }\n    }\n\n    return grid;\n  }\n\n  function createFraction(n, d) {\n    let sf = 0.4;\n\n    let tileContainer = new PIXI.Container();\n\n    let whole = d == 1 ? true : false;\n\n    let h = 2 * DIM;\n    let w = DIM;\n    h = h * sf;\n    w = w * sf;\n\n    var block = new PIXI.Graphics();\n    //block.lineStyle(3, 0x000000, 2);\n    block.beginFill(0xffffff);\n    block.drawRoundedRect(0, 0, 1.2 * w, 1.2 * h, 5);\n    block.endFill();\n    block.x = 1;\n    block.y = 1;\n\n    var blockTexture = app.renderer.generateTexture(block);\n    let tile = new PIXI.Sprite(blockTexture);\n    tile.anchor.set(0.5);\n\n    // All or only some of these may exist depending on if we're using a \"whole\" or not.\n    let mid;\n    let num;\n    let den;\n\n    if (true) {\n      mid = new PIXI.Graphics();\n      mid.lineStyle(4, 0x000000, 2);\n      mid.moveTo(-w / 2, 0);\n      mid.lineTo(w / 2, 0);\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = -w / 2;\n      den = new PIXI.Text(d, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: w,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      den.anchor.set(0.5);\n      den.y = w / 2;\n    } else {\n      num = new PIXI.Text(n, {\n        fontFamily: \"Chalkboard SE\",\n        fontSize: 12,\n        fill: 0x000000,\n        align: \"center\"\n      });\n      num.anchor.set(0.5);\n      num.y = 0;\n    }\n\n    tileContainer.addChild(tile);\n    tileContainer.addChild(num);\n    tileContainer.border = tile;\n\n    // Line style appears grey unless we add this after the prefious if block - not sure why.\n    if (mid) {\n      tileContainer.addChild(mid);\n      tileContainer.addChild(den);\n    }\n\n    tileContainer.active = false;\n    tileContainer.interactive = true;\n\n    tileContainer.x = DIM;\n    tileContainer.y = 0;\n    // Objects\n    tileContainer.d = den;\n    tileContainer.n = num;\n    // Values\n    tileContainer._d = d;\n    tileContainer._n = n;\n    tileContainer.isSet = false;\n    tileContainer.pivot.x = 0;\n    tileContainer.pivot.y = DIM / 2;\n    tileContainer.onLine = false;\n    tileContainer.alpha = 0.9;\n\n    tileContainer.write = (n, d) => {\n      num.text = n;\n      den.text = d;\n    };\n    return tileContainer;\n  }\n\n  app.destroyAll = ()=> {\n    // console.log(\"in destroyAll\")\n    gridTool.destroy(true)\n    backGround.destroy(true)\n    pinkCircle.destroy(true)\n    blueCircle.destroy(true)\n    for (let l of labelsOnLine){\n      l.destroy(true)\n    }\n    for (let t of ticksOnLine){\n      t.destroy(true)\n    }\n\n\n  }\n\n  let questionButton = new PIXI.Sprite.from(QuestionMark)\n    questionButton.x = setup.width - 1.5*dx\n    questionButton.y = dx/4\n    questionButton.width = dx\n    questionButton.height = dx\n    questionButton.interactive = true\n    questionButton.on('pointerdown',()=> {app.help()})\n    app.stage.addChild(questionButton)\n\n\n    function resize(newFrame){\n    \n      heightToWidthRatio = newFrame.height/newFrame.width\n      LANDSCAPE = heightToWidthRatio < 3/4\n      ARENA_WIDTH = LANDSCAPE ? 4/3*newFrame.height : newFrame.width\n      ARENA_HEIGHT = LANDSCAPE ? newFrame.height : 3/4*newFrame.width\n      /*\n      backGround.width = ARENA_WIDTH\n      backGround.height = ARENA_HEIGHT\n      app.renderer.resize(ARENA_WIDTH,ARENA_HEIGHT)\n      //TweenLite.to(backGround,5,{x: ARENA_WIDTH/2,y: ARENA_HEIGHT/2})\n      gridNodes.draw()\n      */\n     app.stage.width = ARENA_WIDTH\n     app.stage.height = ARENA_HEIGHT\n    }\n  \n    app.resize = (frame) => resize(frame)\n\n};\n"]},"metadata":{},"sourceType":"module"}