{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const LINE_PERCENTAGE = 0.8;\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN);\n  const MEASURE_PIN_TEXTURE = new PIXI.Texture.from(ASSETS.MEASURE_PIN); // Initial State\n\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 30\n  };\n  console.log(\"setupwidth\", setup.width);\n  console.log(\"windowheight\", window.innerHeight); // Layout Parameters\n\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let BAR_HEIGHT = WINDOW_HEIGHT / 15;\n\n  class Row extends PIXI.Container {\n    constructor(num, den, width, ID) {\n      super(); // Default values\n\n      this.incDenonimator = inc => {\n        frameGraphics.clear();\n        frameGraphics.lineStyle(3, 0x000000);\n        frameGraphics.drawRoundedRect(0, 0, this.width, BAR_HEIGHT, 1);\n        let R = app.renderer.generateTexture(g);\n        let s = new PIXI.Sprite();\n        this.container.addChild(s);\n        s.texture = R;\n        s.x = 0;\n\n        if (inc > 0) {\n          const onComplete = () => {\n            s.on('pointerdown', spritePointerDown);\n            s.on('pointerup', spritePointerUp);\n            s.on('pointermove', spritePointerMoved);\n            s.interactive = true;\n            s.active = false;\n            this.sprites.push(s);\n            this.draw();\n          };\n\n          TweenMax.to(this, 0.25, {\n            denominator: this.denominator + 1,\n            onUpdate: this.draw,\n            onComplete: onComplete\n          });\n        } else if (inc < 0) {\n          let removeme = this.sprites.pop();\n          this.container.removeChild(removeme);\n\n          const onComplete = () => {\n            this.draw();\n            this.container.removeChild(s);\n          };\n\n          TweenMax.to(this, 0.25, {\n            denominator: this.denominator - 1,\n            onUpdate: this.draw,\n            onComplete: onComplete\n          });\n        }\n      };\n\n      this.numerator = num;\n      this.denominator = den;\n      this.width = width;\n      this.id = ID;\n      this.sprites = [];\n      this.blockWidth = width / this.denominator; // Init Graphics A\n\n      this.graphicsA = new PIXI.Graphics();\n      this.graphicsA.lineStyle(3, 0x000000);\n      this.graphicsA.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureA = app.renderer.generateTexture(this.blockA); // Init Graphics B\n\n      this.graphicsB = new PIXI.Graphics();\n      this.graphicsB.beginFill(0xff4772);\n      this.graphicsB.lineStyle(3, 0x000000);\n      this.graphicsB.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureB = app.renderer.generateTexture(this.blockB); // Dummy frame for when animating between different fractional parts.\n\n      let _frameGraphics = new PIXI.Graphics();\n\n      for (let i = 0; i < this.denominator; i++) {\n        console.log(\"balls\");\n        let s = new PIXI.Sprite.from(myA);\n        s.on('pointerdown', spritePointerDown);\n        s.on('pointerup', spritePointerUp);\n        s.on('pointermove', spritePointerMoved);\n        s.interactive = true;\n        s.active = false;\n        s.x = i * LINE_WIDTH / this.denominator;\n        s.y = WINDOW_HEIGHT / 2 - BAR_HEIGHT;\n        this.sprites.push(s);\n        this.container.addChild(s);\n      } //  Attached methods\n\n\n      this.container.on('pointerdown', containerPointerDown);\n      this.container.on('pointerup', containerPointerUp);\n      this.container.on('pointermove', containerPointerMove);\n    }\n\n    draw(width) {\n      if (width) {\n        this.width = width;\n      }\n\n      this.blockWidth = this.width / this.denominator;\n      this.blockA.clear();\n      this.blockA.lineStyle(3, 0x000000);\n      this.blockA.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureA = app.renderer.generateTexture(this.blockA);\n      this.blockB.clear();\n      this.blockB.beginFill(0xff4772);\n      this.blockB.lineStyle(3, 0x000000);\n      this.blockB.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureB = app.renderer.generateTexture(this.blockB);\n\n      for (let i = 0; i < this.sprites.length; i++) {\n        if (this.sprites[i].active) {\n          this.sprites[i].texture = myB;\n        } else {\n          this.sprites[i].texture = myA;\n        }\n\n        this.sprites[i].x = this.blockWidth * i;\n        this.sprites[i].y = 0;\n      }\n    }\n\n    spritePointerDown(event) {\n      this.touched = true;\n      this.dragged = false;\n    }\n\n    spritePointerMoved(event) {\n      if (this.touched) {\n        console.log(\"pointermove\");\n        this.dragged = true;\n      }\n    }\n\n    spritePointerUp(event) {\n      this.touched = false;\n      console.log('this.draggeed', this.dragged);\n\n      if (!this.dragged && activated) {\n        this.dragged = false;\n        this.active = !this.active;\n        this.alpha = 0.2;\n        this.texture = this.active ? myB : myA;\n        TweenLite.to(this, 0.4, {\n          alpha: 1\n        });\n      }\n    }\n\n    containerPointerDown(event) {\n      app.stage.addChild(this);\n      activated = this.id == ActiveIndex;\n      ActiveIndex = this.id;\n      ActiveRow = Rows[ActiveIndex];\n      disableAllRowsExceptActive();\n      drawWhiskers();\n      placeButtons();\n      pinA.sprite.x = this.width + LINE_START;\n      pinA.sprite.round();\n      this.data = event.data;\n      this.startWidth = this.width;\n      this.dragStartY = event.data.global.y;\n      this.touching = true;\n      touching = true;\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      };\n    }\n\n    containerPointerUp(event) {\n      globalPointerUp();\n      this.touching = false;\n      touching = false;\n    }\n\n    containerPointerMove(event) {\n      if (this.touching) {\n        const newPosition = this.data.getLocalPosition(this.parent);\n        this.y = event.data.global.y + this.deltaTouch.y; // Keep within number line bounds.\n\n        if (this.y < TOP_LINE_Y) {\n          this.dragging = false;\n          this.y = TOP_LINE_Y;\n        } else if (this.y > BOTTOM_LINE_Y - BAR_HEIGHT) {\n          this.dragging = false;\n          this.y = BOTTOM_LINE_Y - BAR_HEIGHT;\n        } //this.x = event.data.global.x + this.deltaTouch.x\n        //pinA.sprite.x = this.x + this.width\n\n\n        this.dragged = true;\n      }\n    }\n\n  }\n\n  function globalPointerUp() {} // \n  // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame);\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n  } // Loading Script\n\n\n  function load() {\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n  } // Functions attached to app: (need to be destroyed)\n\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n  load();\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/newfractionstacks.js"],"names":["PIXI","CONST","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","ASSETS","init","app","setup","BLUE_TEXTURE","Texture","from","BLUE_CIRCLE","LINE_PERCENTAGE","PIN_TEXTURE","SHARP_PIN","MEASURE_PIN_TEXTURE","MEASURE_PIN","state","valA","valB","lineMax","console","log","width","window","innerHeight","WINDOW_WIDTH","WINDOW_HEIGHT","height","BAR_HEIGHT","Row","Container","constructor","num","den","ID","incDenonimator","inc","frameGraphics","clear","lineStyle","drawRoundedRect","R","renderer","generateTexture","g","s","Sprite","container","addChild","texture","x","onComplete","on","spritePointerDown","spritePointerUp","spritePointerMoved","interactive","active","sprites","push","draw","to","denominator","onUpdate","removeme","pop","removeChild","numerator","id","blockWidth","graphicsA","Graphics","textureA","blockA","graphicsB","beginFill","textureB","blockB","i","myA","LINE_WIDTH","y","containerPointerDown","containerPointerUp","containerPointerMove","length","myB","event","touched","dragged","activated","alpha","stage","ActiveIndex","ActiveRow","Rows","disableAllRowsExceptActive","drawWhiskers","placeButtons","pinA","sprite","LINE_START","round","data","startWidth","dragStartY","global","touching","deltaTouch","globalPointerUp","newPosition","getLocalPosition","parent","TOP_LINE_Y","dragging","BOTTOM_LINE_Y","resize","newFrame","flex","updateLayoutParams","frame","load","props","features","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nconst ASSETS = CONST.ASSETS\n\nexport const init = (app, setup) => {\n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const LINE_PERCENTAGE = 0.8\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN)\n  const MEASURE_PIN_TEXTURE = new PIXI.Texture.from(ASSETS.MEASURE_PIN)\n\n\n // Initial State\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 30,\n  }\n\n  console.log(\"setupwidth\",setup.width)\n  console.log(\"windowheight\",window.innerHeight)\n\n  // Layout Parameters\n  let WINDOW_WIDTH = setup.width\n  let WINDOW_HEIGHT = setup.height\n  let BAR_HEIGHT = WINDOW_HEIGHT/15\n\n  class Row extends PIXI.Container {\n\n    constructor(num,den,width,ID) {\n      super()\n        // Default values\n      this.numerator = num\n      this.denominator = den\n      this.width = width\n      this.id = ID\n      this.sprites = []\n      this.blockWidth = width / this.denominator\n\n\n      // Init Graphics A\n      this.graphicsA = new PIXI.Graphics()\n      this.graphicsA.lineStyle(3,0x000000) \n      this.graphicsA.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureA = app.renderer.generateTexture(this.blockA)\n\n      // Init Graphics B\n      this.graphicsB  = new PIXI.Graphics()\n      this.graphicsB.beginFill(0xff4772)\n      this.graphicsB.lineStyle(3,0x000000) \n      this.graphicsB.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureB = app.renderer.generateTexture(this.blockB)\n\n      // Dummy frame for when animating between different fractional parts.\n      let frameGraphics = new PIXI.Graphics()    \n  \n      for (let i = 0;i<this.denominator;i++) {\n        console.log(\"balls\")\n        let s = new PIXI.Sprite.from(myA)\n        s.on('pointerdown',spritePointerDown)\n        s.on('pointerup',spritePointerUp)\n        s.on('pointermove',spritePointerMoved)\n        s.interactive = true\n        s.active = false\n        s.x = i*LINE_WIDTH/this.denominator\n        s.y = WINDOW_HEIGHT/2 - BAR_HEIGHT\n        this.sprites.push(s)\n        this.container.addChild(s)\n      }\n            //  Attached methods\n      this.container.on('pointerdown',containerPointerDown)\n      this.container.on('pointerup',containerPointerUp)\n      this.container.on('pointermove',containerPointerMove)\n\n    }\n  \n\n    incDenonimator = (inc) => {\n      frameGraphics.clear()\n      frameGraphics.lineStyle(3,0x000000) \n      frameGraphics.drawRoundedRect(0,0,this.width,BAR_HEIGHT,1)\n      let R = app.renderer.generateTexture(g)\n      let s = new PIXI.Sprite()\n      this.container.addChild(s)\n      s.texture = R\n      s.x  = 0\n\n      if (inc > 0){\n        const onComplete = ()=>{\n          s.on('pointerdown',spritePointerDown)\n          s.on('pointerup',spritePointerUp)\n          s.on('pointermove',spritePointerMoved)\n          s.interactive = true\n          s.active = false\n          this.sprites.push(s)\n          this.draw()\n        }\n        TweenMax.to(this, 0.25, {denominator: this.denominator+1,onUpdate: this.draw,onComplete: onComplete})\n      } else if (inc < 0) {\n        let removeme  = this.sprites.pop()\n        this.container.removeChild(removeme)\n        const onComplete = ()=>{\n          this.draw()\n          this.container.removeChild(s)\n        }\n        TweenMax.to(this, 0.25, {denominator: this.denominator-1,onUpdate: this.draw,onComplete: onComplete})\n      }\n    }\n\n    draw(width) {\n\n      if (width) {\n        this.width = width\n      }\n      this.blockWidth = this.width/this.denominator\n\n      this.blockA.clear()\n      this.blockA.lineStyle(3,0x000000) \n      this.blockA.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureA = app.renderer.generateTexture(this.blockA)\n\n      this.blockB.clear()\n      this.blockB.beginFill(0xff4772)\n      this.blockB.lineStyle(3,0x000000) \n      this.blockB.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureB = app.renderer.generateTexture(this.blockB)\n\n      for (let i = 0;i<this.sprites.length;i++){\n        if (this.sprites[i].active){\n          this.sprites[i].texture = myB\n        } else {\n          this.sprites[i].texture = myA\n        }\n\n        this.sprites[i].x = this.blockWidth*i\n        this.sprites[i].y = 0\n      }\n    }\n\n    spritePointerDown(event){\n      this.touched = true\n      this.dragged = false\n    }\n\n    spritePointerMoved(event) {\n\n      if (this.touched){\n        console.log(\"pointermove\")\n        this.dragged = true\n      }\n    }\n\n    spritePointerUp(event){\n         this.touched = false\n         console.log('this.draggeed',this.dragged)\n     if (!this.dragged && activated) {\n        this.dragged = false\n        this.active = !this.active\n        this.alpha = 0.2\n        this.texture = this.active ? myB : myA\n        TweenLite.to(this,0.4,{alpha: 1})\n       }\n    }\n\n \n   containerPointerDown(event) {\n     app.stage.addChild(this)\n      activated = this.id == ActiveIndex\n      ActiveIndex = this.id\n      ActiveRow = Rows[ActiveIndex]\n      disableAllRowsExceptActive()\n      drawWhiskers()\n      placeButtons()\n      pinA.sprite.x = this.width + LINE_START\n      pinA.sprite.round()\n      this.data = event.data\n      this.startWidth = this.width\n      this.dragStartY = event.data.global.y\n      this.touching = true\n      touching = true\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n    }\n \n   containerPointerUp(event) {\n      globalPointerUp()\n      this.touching = false\n      touching = false\n    }\n\n    containerPointerMove(event) {\n\n      if (this.touching){\n        const newPosition = this.data.getLocalPosition(this.parent);\n        this.y = event.data.global.y + this.deltaTouch.y\n      // Keep within number line bounds.\n      if (this.y < TOP_LINE_Y){\n        this.dragging = false\n        this.y = TOP_LINE_Y\n      } else if (this.y > BOTTOM_LINE_Y-BAR_HEIGHT) {\n        this.dragging = false\n        this.y = BOTTOM_LINE_Y  - BAR_HEIGHT\n      }\n        //this.x = event.data.global.x + this.deltaTouch.x\n        //pinA.sprite.x = this.x + this.width\n        this.dragged = true\n      }\n    }\n  }\n\n\n\n  function globalPointerUp(){\n    // \n  }\n  \n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n  }\n\n  // Loading Script\n  function load(){\n    if (setup.props.features){\n      features = setup.props.features\n    }\n  }\n\n  // Functions attached to app: (need to be destroyed)\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n\n  load()\n};\n"]},"metadata":{},"sourceType":"module"}