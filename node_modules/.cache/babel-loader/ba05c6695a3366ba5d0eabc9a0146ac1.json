{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png';\nconst createjs = window.createjs;\nexport const init = (app, setup) => {\n  const WINDOW_WIDTH = setup.width;\n  const WINDOW_HEIGHT = setup.height;\n  const DIM = WINDOW_WIDTH / 12;\n  const WHOLE_WIDTH = 5 * DIM;\n  const JIJI_CONT_LEFT = 3 * DIM;\n  const JIJI_CONT_TOP = DIM;\n  const TWELFTH_WIDTH = WHOLE_WIDTH / 12;\n  const WINDOW_CENTER_X = WINDOW_WIDTH / 2;\n  const WINDOW_CENTER_Y = WINDOW_HEIGHT / 2;\n  const CONTAINER_ORIGIN_X = TWELFTH_WIDTH;\n  const CONTAINER_ORIGIN_Y = 5 * TWELFTH_WIDTH;\n  const CONTAINER_WIDTH = DIM;\n  const CONTAINER_HEIGHT = DIM;\n  const CONTAINER_CENTER_X = DIM;\n  const CONTAINER_CENTER_Y = 2.5 * DIM;\n  const CONTAINER_TOP = CONTAINER_CENTER_Y - CONTAINER_WIDTH / 2;\n  const CONTAINER_BOTTOM = CONTAINER_CENTER_Y + CONTAINER_WIDTH / 2;\n  const CONTAINER_LEFT = CONTAINER_CENTER_X - CONTAINER_WIDTH / 2;\n  const CONTAINER_RIGHT = CONTAINER_CENTER_X + CONTAINER_WIDTH / 2;\n  let backGround = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n  backGround.width = WINDOW_WIDTH;\n  backGround.height = WINDOW_HEIGHT;\n  backGround.x = 0;\n  backGround.y = 0;\n  backGround.alpha = 0;\n  app.stage.addChild(backGround);\n  createjs.Tween.get(backGround).to({\n    alpha: 1\n  }, 500, createjs.Ease.getPowInOut(4));\n  let mostRecentRow = 0;\n  let rows = [[], [], [], [], [], [], [], []];\n  let constructorBlock;\n  let jijis = [];\n  let plusJiji;\n  let minusJiji;\n  let jijiDIM;\n  let cuttingTool;\n  let deleteTool;\n  let resetTool;\n  let blocks = [];\n  let jijiIcon;\n  let activeBlock;\n  let cutterContainer = new PIXI.Container();\n  let fractions = [];\n  let horizontalLines = [];\n  let verticalLines = [];\n  let vPartitions = 1;\n  let hPartitions = 1;\n  let colorIndex = 0;\n  let vPlus;\n  let vMinus;\n  let activePoly;\n  let hPlus;\n  let hMinus;\n  let cont;\n  let trashCan;\n  let cutting = false;\n  let blockBeingCut;\n  let cutOperators = []; // ENUM\n\n  const OBJ_TYPE = {\n    BLOCK: 0,\n    CUT: 1,\n    DELETE: 2\n  }; // Init\n  //createMenuButtons()\n  //layoutMenu()\n  //initVerticalLines(1)\n  // Rouge Init\n\n  resetTool = createReset();\n  resetTool.interactive = true;\n  resetTool.on('pointerdown', reset); //app.stage.addChild(resetTool)\n\n  resetTool.x = WINDOW_WIDTH - DIM / 2;\n  resetTool.y = DIM / 2;\n  trashCan = createTrashCan(); //app.stage.addChild(trashCan)\n\n  trashCan.x = WINDOW_WIDTH - DIM / 2;\n  trashCan.y = 1.5 * DIM; // Factory Functions\n\n  function createReset() {\n    let reset = new PIXI.Sprite.from(CONST.ASSETS.RESET);\n    reset.width = DIM / 2;\n    reset.height = DIM / 2;\n    reset.anchor.set(0.5);\n    return reset;\n  }\n\n  function createTrashCan() {\n    let trashCan = new PIXI.Sprite.from(CONST.ASSETS.TRASH);\n    trashCan.width = DIM / 2;\n    trashCan.height = DIM / 2;\n    trashCan.anchor.set(0.5);\n    return trashCan;\n  }\n\n  function reset() {\n    // console.log(\"reset\")\n    for (let b of blocks) {\n      app.stage.removeChild(b);\n    }\n\n    blocks = [];\n    fractions = [];\n  }\n\n  function createContainer(w, h) {\n    let containerGraphic = new PIXI.Graphics();\n    containerGraphic.lineStyle(2, 0x000000);\n    containerGraphic.moveTo(0, 0);\n    containerGraphic.lineTo(0, h);\n    containerGraphic.lineTo(w, h);\n    containerGraphic.lineTo(w, 0);\n    containerGraphic.lineTo(0, 0);\n    containerGraphic.interactive = true;\n    containerGraphic.x = 1;\n    containerGraphic.y = 1;\n    let containerTexture = app.renderer.generateTexture(containerGraphic);\n    let containerSprite = new PIXI.Sprite(containerTexture);\n    containerSprite.width = containerGraphic.width;\n    containerSprite.height = containerGraphic.height; // console.log(\"container anchor\",containerSprite.anchor)\n\n    return containerSprite;\n  }\n\n  let container = createContainer(2 * WHOLE_WIDTH, 8 * TWELFTH_WIDTH);\n  app.stage.addChild(container);\n  container.x = CONTAINER_ORIGIN_X;\n  container.y = CONTAINER_ORIGIN_Y;\n\n  function initVerticalLines(partition) {\n    for (let i = 0; i < 11; i++) {\n      let g = new PIXI.Graphics();\n      g.lineStyle(2, 0x000000);\n      g.lineTo(0, CONTAINER_WIDTH);\n      g.y = CONTAINER_TOP;\n      g.x = CONTAINER_LEFT;\n      verticalLines.push(g);\n      app.stage.addChild(g);\n    }\n  }\n\n  function initHorizontalLines(partition) {\n    for (let i = 0; i < 11; i++) {\n      let g = new PIXI.Graphics();\n      g.lineStyle(2, 0x000000);\n      g.lineTo(CONTAINER_WIDTH, 0);\n      g.y = CONTAINER_BOTTOM;\n      g.x = CONTAINER_LEFT;\n      horizontalLines.push(g);\n    }\n  }\n\n  function animateVerticalLines(inc) {\n    vPartitions += inc;\n\n    if (vPartitions != 0 && vPartitions != 11) {\n      colorIndex += 1;\n      let spacing = CONTAINER_WIDTH / vPartitions;\n      verticalLines.forEach((l, i) => {\n        app.stage.addChild(l);\n\n        if (i > vPartitions) {\n          createjs.Tween.get(l).to({\n            x: CONTAINER_RIGHT\n          }, 500, createjs.Ease.getPowInOut(4));\n        } else {\n          createjs.Tween.get(l).to({\n            x: i * spacing + CONTAINER_LEFT\n          }, 500, createjs.Ease.getPowInOut(4));\n        }\n      });\n    } else {\n      vPartitions -= inc;\n    }\n  } // Pass it the level and it will layout the buttons for that new level.\n\n\n  function createBlockConstructor(w, h, i) {\n    let blockContainer = new PIXI.Container();\n    var graphics = new PIXI.Graphics();\n    let color = CONST.CUISENAIRE_COLORS[12 - i];\n    graphics.lineStyle(1, 0xFFFFFF);\n    graphics.beginFill(color);\n    graphics.drawRoundedRect(0, 0, w, h, 2);\n    graphics.endFill();\n    graphics.color = color; // console.log(\"graphics dims\",graphics.width,graphics.height)\n\n    let graphicsTexture = app.renderer.generateTexture(graphics);\n    let graphicsSprite = new PIXI.Sprite(graphicsTexture);\n    blockContainer.addChild(graphicsSprite);\n    blockContainer.interactive = true;\n    blockContainer.color = color;\n    blockContainer.den = 12 - i;\n    let fracText = i == 1 ? \"1\" : \"1/\" + i;\n    let frac = new PIXI.Text(fracText, {\n      fontFamily: 'Chalkboard SE',\n      fontSize: graphicsSprite.height / 3,\n      fill: 0x000000,\n      align: 'center'\n    });\n    frac.anchor.set(0.5);\n    frac.x = graphicsSprite.width / 2;\n    frac.y = graphicsSprite.height / 2;\n    blockContainer.on('pointerdown', () => {\n      setTimeout(() => {\n        newBlock(blockContainer);\n      }, 100);\n    });\n    blockContainer.addChild(graphicsSprite); //blockContainer.addChild(frac)\n\n    return blockContainer;\n  }\n\n  function newBlock(g, frac) {\n    let newBlock = createBlock(g.width, g.height, g.color, g.den);\n    app.stage.addChild(newBlock);\n    newBlock.x = g.x;\n    newBlock.y = g.y;\n    let rowMax = getRowMax(rows[mostRecentRow]);\n    rows[mostRecentRow].push(newBlock);\n    newBlock.currentRow = mostRecentRow;\n    createjs.Tween.get(newBlock).to({\n      x: TWELFTH_WIDTH + rowMax,\n      y: CONTAINER_ORIGIN_Y + mostRecentRow * TWELFTH_WIDTH\n    }, 700, createjs.Ease.getPowInOut(4));\n  }\n\n  function createCuisenaireMenu() {\n    let cumSum = 0;\n    let j = 0;\n    let h = WHOLE_WIDTH / 12;\n\n    for (let i = 0; i < 12; i++) {\n      let w = (12 - i) * TWELFTH_WIDTH;\n      let newConstructor = createBlockConstructor(w, h, i);\n      newConstructor.x = TWELFTH_WIDTH + cumSum;\n      newConstructor.y = TWELFTH_WIDTH / 4 + 1.1 * j * h;\n      cumSum = cumSum + w + 10;\n\n      if (cumSum > 1.6 * WHOLE_WIDTH) {\n        j += 1;\n        cumSum = 0;\n      }\n\n      app.stage.addChild(newConstructor);\n    }\n  }\n\n  createCuisenaireMenu();\n\n  function condenseAfter(row, k, blank) {\n    for (let i = 0; i < row.length; i++) {\n      if (i >= k) {\n        createjs.Tween.get(row[i]).to({\n          x: row[i].x - blank.i * TWELFTH_WIDTH\n        }, 500, createjs.Ease.getPowInOut(4));\n      }\n    }\n  }\n\n  function createBlock(w, h, color, i) {\n    let blockContainer = new PIXI.Container();\n    var graphics = new PIXI.Graphics();\n    graphics.lineStyle(1, 0xFFFFFF);\n    graphics.beginFill(color);\n    graphics.drawRoundedRect(0, 0, w - 1.5, h, 2);\n    graphics.endFill();\n    graphics.color = color; // console.log(\"graphics dims\",graphics.width,graphics.height)\n\n    let graphicsTexture = app.renderer.generateTexture(graphics);\n    let graphicsSprite = new PIXI.Sprite(graphicsTexture);\n    blockContainer.addChild(graphicsSprite);\n    blockContainer.interactive = true;\n    blockContainer.color = color;\n    blockContainer.i = i;\n    let fracText = i == 1 ? \"1\" : \"1/\" + i;\n    let frac = new PIXI.Text(fracText, {\n      fontFamily: 'Chalkboard SE',\n      fontSize: graphicsSprite.height / 3,\n      fill: 0x000000,\n      align: 'center'\n    });\n    frac.anchor.set(0.5);\n    frac.x = graphicsSprite.width / 2;\n    frac.y = graphicsSprite.height / 2;\n    blockContainer.addChild(graphicsSprite); //blockContainer.addChild(frac)\n\n    blockContainer.on('pointerdown', onPolyTouched);\n    blockContainer.on('pointerup', onPolyMoveEnd);\n    blockContainer.on('pointermove', onPolyTouchMoved);\n    return blockContainer;\n  }\n\n  function onPolyTouched(event) {\n    if (this.TYPE == OBJ_TYPE.CUT) {\n      cutting = true;\n    }\n\n    activePoly = this;\n    let touchedAtX = event.data.global.x;\n    let touchedAtY = event.data.global.y;\n    app.stage.addChild(this);\n    this.dragging = true;\n    this.wasDragged = false;\n    this.deltaTouch = [this.x - touchedAtX, this.y - touchedAtY];\n    this.dragStartedAt = [this.x, this.y];\n    this.data = event.data;\n  }\n\n  function onPolyMoveEnd() {\n    this.dragging = false;\n    this.data = null;\n    this.deltaTouch = [];\n    let newXVal;\n    let p = new PIXI.Point(this.x + this.width / 2, this.y + this.height / 2);\n    let inContainer = pointInRect(p, container);\n    let y = roundY(this.y);\n    let x = roundX(this.x);\n    let r = getRow(this.y);\n    let i = rows[this.currentRow].indexOf(this);\n\n    if (inContainer) {\n      rows[this.currentRow].splice(i, 1);\n      condenseAfter(rows[this.currentRow], i, this);\n      mostRecentRow = r;\n\n      if (r != this.currentRow) {\n        newXVal = CONTAINER_ORIGIN_X + getRowMax(rows[r]);\n        rows[r].push(this);\n        this.currentRow = r;\n      } else {\n        rows[this.currentRow].push(this);\n        newXVal = CONTAINER_ORIGIN_X + getRowMax(rows[r]) - this.i * TWELFTH_WIDTH;\n      }\n\n      createjs.Tween.get(this).to({\n        x: newXVal,\n        y: y\n      }, 500, createjs.Ease.getPowInOut(4));\n    } else {\n      rows[this.currentRow].splice(i, 1);\n      condenseAfter(rows[this.currentRow], i, this);\n      app.stage.removeChild(this);\n    }\n  }\n\n  function getRowMax(row) {\n    let sum = 0;\n    row.forEach(r => {\n      sum = sum + r.i * TWELFTH_WIDTH;\n    });\n    return sum;\n  }\n\n  function getRow(yVal) {\n    return Math.round((yVal - CONTAINER_ORIGIN_Y) / (WHOLE_WIDTH / 12));\n  }\n\n  function roundY(val) {\n    let i = Math.round((val - CONTAINER_ORIGIN_Y) / (WHOLE_WIDTH / 12));\n    return CONTAINER_ORIGIN_Y + TWELFTH_WIDTH * i;\n  }\n\n  function roundX(val) {\n    let i = Math.round((val - CONTAINER_ORIGIN_X) / (WHOLE_WIDTH / 12));\n    return TWELFTH_WIDTH * i;\n  }\n\n  function onPolyTouchMoved() {\n    if (this.dragging) {\n      this.wasDragged = true;\n      var newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch[0];\n      this.y = newPosition.y + this.deltaTouch[1];\n    }\n  }\n\n  function pointInRect(p, rect) {\n    // This is for a rect with anchor in center\n    let top;\n    let bottom;\n    let left;\n    let right;\n\n    if (rect.anchor._x == 0.5) {\n      top = rect.y - rect.height / 2;\n      bottom = rect.y + rect.height / 2;\n      left = rect.x - rect.width / 2;\n      right = rect.x + rect.width / 2;\n    } else {\n      top = rect.y;\n      bottom = rect.y + rect.height;\n      left = rect.x;\n      right = rect.x + rect.width;\n    } // console.log(\"top,bottom,left,right\",top,bottom,left,right)\n\n\n    let c1 = p.x < right;\n    let c2 = p.x > left;\n    let c3 = p.y < bottom;\n    let c4 = p.y > top;\n    return c1 && c2 && c3 && c4;\n  }\n};","map":{"version":3,"sources":["/Users/andrewfenner/Desktop/testcontent-master/src/js/cuisenairetool.js"],"names":["PIXI","blueGradient","CONST","QuestionMark","createjs","window","init","app","setup","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","DIM","WHOLE_WIDTH","JIJI_CONT_LEFT","JIJI_CONT_TOP","TWELFTH_WIDTH","WINDOW_CENTER_X","WINDOW_CENTER_Y","CONTAINER_ORIGIN_X","CONTAINER_ORIGIN_Y","CONTAINER_WIDTH","CONTAINER_HEIGHT","CONTAINER_CENTER_X","CONTAINER_CENTER_Y","CONTAINER_TOP","CONTAINER_BOTTOM","CONTAINER_LEFT","CONTAINER_RIGHT","backGround","Sprite","from","ASSETS","BLUE_GRADIENT","x","y","alpha","stage","addChild","Tween","get","to","Ease","getPowInOut","mostRecentRow","rows","constructorBlock","jijis","plusJiji","minusJiji","jijiDIM","cuttingTool","deleteTool","resetTool","blocks","jijiIcon","activeBlock","cutterContainer","Container","fractions","horizontalLines","verticalLines","vPartitions","hPartitions","colorIndex","vPlus","vMinus","activePoly","hPlus","hMinus","cont","trashCan","cutting","blockBeingCut","cutOperators","OBJ_TYPE","BLOCK","CUT","DELETE","createReset","interactive","on","reset","createTrashCan","RESET","anchor","set","TRASH","b","removeChild","createContainer","w","h","containerGraphic","Graphics","lineStyle","moveTo","lineTo","containerTexture","renderer","generateTexture","containerSprite","container","initVerticalLines","partition","i","g","push","initHorizontalLines","animateVerticalLines","inc","spacing","forEach","l","createBlockConstructor","blockContainer","graphics","color","CUISENAIRE_COLORS","beginFill","drawRoundedRect","endFill","graphicsTexture","graphicsSprite","den","fracText","frac","Text","fontFamily","fontSize","fill","align","setTimeout","newBlock","createBlock","rowMax","getRowMax","currentRow","createCuisenaireMenu","cumSum","j","newConstructor","condenseAfter","row","k","blank","length","onPolyTouched","onPolyMoveEnd","onPolyTouchMoved","event","TYPE","touchedAtX","data","global","touchedAtY","dragging","wasDragged","deltaTouch","dragStartedAt","newXVal","p","Point","inContainer","pointInRect","roundY","roundX","r","getRow","indexOf","splice","sum","yVal","Math","round","val","newPosition","getLocalPosition","parent","rect","top","bottom","left","right","_x","c1","c2","c3","c4"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png'\nconst createjs = window.createjs\n\nexport const init = (app, setup) => {\n\nconst WINDOW_WIDTH = setup.width \nconst WINDOW_HEIGHT = setup.height\n\nconst DIM = WINDOW_WIDTH/12\nconst WHOLE_WIDTH = 5*DIM\nconst JIJI_CONT_LEFT = 3*DIM\nconst JIJI_CONT_TOP = DIM\nconst TWELFTH_WIDTH = WHOLE_WIDTH/12\nconst WINDOW_CENTER_X = WINDOW_WIDTH/2\nconst WINDOW_CENTER_Y = WINDOW_HEIGHT/2\nconst CONTAINER_ORIGIN_X = TWELFTH_WIDTH\nconst CONTAINER_ORIGIN_Y = 5*TWELFTH_WIDTH\nconst CONTAINER_WIDTH = DIM\nconst CONTAINER_HEIGHT = DIM\nconst CONTAINER_CENTER_X = DIM\nconst CONTAINER_CENTER_Y = 2.5*DIM\nconst CONTAINER_TOP = CONTAINER_CENTER_Y-CONTAINER_WIDTH/2\nconst CONTAINER_BOTTOM = CONTAINER_CENTER_Y+CONTAINER_WIDTH/2\nconst CONTAINER_LEFT = CONTAINER_CENTER_X-CONTAINER_WIDTH/2\nconst CONTAINER_RIGHT = CONTAINER_CENTER_X+CONTAINER_WIDTH/2\n\n\nlet backGround = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT)\nbackGround.width = WINDOW_WIDTH\nbackGround.height = WINDOW_HEIGHT\nbackGround.x = 0\nbackGround.y = 0\nbackGround.alpha = 0\napp.stage.addChild(backGround)\ncreatejs.Tween.get(backGround).to({alpha: 1}, 500, createjs.Ease.getPowInOut(4))\n\n\nlet mostRecentRow = 0\nlet rows = [[],[],[],[],[],[],[],[]]\nlet constructorBlock;\nlet jijis = []\nlet plusJiji;\nlet minusJiji;\nlet jijiDIM;\nlet cuttingTool;\nlet deleteTool;\nlet resetTool;\nlet blocks = []\nlet jijiIcon;\nlet activeBlock;\nlet cutterContainer = new PIXI.Container()\nlet fractions = []\nlet horizontalLines = []\nlet verticalLines = []\nlet vPartitions = 1\nlet hPartitions = 1\nlet colorIndex = 0\nlet vPlus;\nlet vMinus;\nlet activePoly;\nlet hPlus;\nlet hMinus;\nlet cont;\nlet trashCan\nlet cutting = false\nlet blockBeingCut;\nlet cutOperators = []\n\n// ENUM\nconst OBJ_TYPE = {\n  BLOCK: 0,\n  CUT: 1,\n  DELETE: 2\n}\n\n// Init\n//createMenuButtons()\n//layoutMenu()\n//initVerticalLines(1)\n\n\n// Rouge Init\n\nresetTool = createReset()\nresetTool.interactive = true\nresetTool.on('pointerdown',reset)\n//app.stage.addChild(resetTool)\nresetTool.x = WINDOW_WIDTH - DIM/2\nresetTool.y = DIM/2\n\ntrashCan = createTrashCan()\n//app.stage.addChild(trashCan)\ntrashCan.x = WINDOW_WIDTH - DIM/2\ntrashCan.y = 1.5*DIM\n\n// Factory Functions\n\nfunction createReset(){\n  let reset = new PIXI.Sprite.from(CONST.ASSETS.RESET)\n  reset.width = DIM/2\n  reset.height = DIM/2\n  reset.anchor.set(0.5)\n  return reset\n}\n\nfunction createTrashCan(){\n  let trashCan = new PIXI.Sprite.from(CONST.ASSETS.TRASH)\n  trashCan.width = DIM/2\n  trashCan.height = DIM/2\n  trashCan.anchor.set(0.5)\n  return trashCan\n}\n\n\n\nfunction reset(){\n  // console.log(\"reset\")\n  for (let b of blocks){\n    app.stage.removeChild(b)\n  }\n\n  blocks = []\n  fractions = []\n}\n\n\n\n\nfunction createContainer(w,h){\n  let containerGraphic = new PIXI.Graphics()\n  containerGraphic.lineStyle(2,0x000000)\n  containerGraphic.moveTo(0,0)\n  containerGraphic.lineTo(0,h)\n  containerGraphic.lineTo(w,h)\n  containerGraphic.lineTo(w,0)\n  containerGraphic.lineTo(0,0)\n  containerGraphic.interactive = true\n  containerGraphic.x = 1\n  containerGraphic.y = 1\n\n  let containerTexture = app.renderer.generateTexture(containerGraphic)\n  let containerSprite = new PIXI.Sprite(containerTexture)\n  containerSprite.width = containerGraphic.width\n  containerSprite.height = containerGraphic.height\n  // console.log(\"container anchor\",containerSprite.anchor)\n  return containerSprite\n}\n\nlet container = createContainer(2*WHOLE_WIDTH,8*TWELFTH_WIDTH)\napp.stage.addChild(container)\ncontainer.x = CONTAINER_ORIGIN_X\ncontainer.y = CONTAINER_ORIGIN_Y\n\nfunction initVerticalLines(partition){\n\n  for (let i = 0;i<11;i++){\n    let g = new PIXI.Graphics()\n    g.lineStyle(2,0x000000)\n    g.lineTo(0,CONTAINER_WIDTH)\n    g.y = CONTAINER_TOP\n    g.x = CONTAINER_LEFT\n    verticalLines.push(g)\n    app.stage.addChild(g)\n  }\n\n}\n\nfunction initHorizontalLines(partition){\n  for (let i = 0;i<11;i++){\n    let g = new PIXI.Graphics()\n    g.lineStyle(2,0x000000)\n    g.lineTo(CONTAINER_WIDTH,0)\n    g.y = CONTAINER_BOTTOM\n    g.x = CONTAINER_LEFT\n    horizontalLines.push(g)\n  }\n}\n\nfunction animateVerticalLines(inc){\n\n  vPartitions  += inc\n  if (vPartitions != 0 && vPartitions != 11){\n    colorIndex += 1\n\n  let spacing = CONTAINER_WIDTH/vPartitions\n\n  verticalLines.forEach((l,i) => {\n    app.stage.addChild(l)\n    if (i>vPartitions){\n        createjs.Tween.get(l).to({x: CONTAINER_RIGHT}, 500, createjs.Ease.getPowInOut(4))\n    } else {\n        createjs.Tween.get(l).to({x: i*spacing+CONTAINER_LEFT}, 500, createjs.Ease.getPowInOut(4))\n    }\n    })\n  } else {\n    vPartitions -= inc\n  }\n}\n\n\n// Pass it the level and it will layout the buttons for that new level.\nfunction createBlockConstructor(w,h,i) {\n  let blockContainer = new PIXI.Container()\n  var graphics = new PIXI.Graphics();\n   let color = CONST.CUISENAIRE_COLORS[12-(i)]\n   graphics.lineStyle(1,0xFFFFFF)\n    graphics.beginFill(color);\n    graphics.drawRoundedRect(0,0,w,h,2)\n    graphics.endFill();\n    graphics.color = color\n    // console.log(\"graphics dims\",graphics.width,graphics.height)\n    let graphicsTexture = app.renderer.generateTexture(graphics)\n    let graphicsSprite = new PIXI.Sprite(graphicsTexture)\n    blockContainer.addChild(graphicsSprite)\n    blockContainer.interactive = true\n    blockContainer.color = color\n    blockContainer.den = 12-i\n    let fracText = i == 1 ? \"1\" : \"1/\"+i\n    let frac = new PIXI.Text(fracText,{fontFamily : 'Chalkboard SE', fontSize: graphicsSprite.height/3, fill : 0x000000, align : 'center'});\n\n    frac.anchor.set(0.5)\n    frac.x = graphicsSprite.width/2\n    frac.y = graphicsSprite.height/2\n    blockContainer.on('pointerdown',() => {\n      setTimeout(()=>{\n        newBlock(blockContainer)},100)\n    })\n\n    blockContainer.addChild(graphicsSprite)\n    //blockContainer.addChild(frac)\n\n    return blockContainer\n}\n\nfunction newBlock(g,frac) {\n    let newBlock = createBlock(g.width,g.height,g.color,g.den)\n    app.stage.addChild(newBlock)\n    newBlock.x = g.x\n    newBlock.y = g.y\n    let rowMax = getRowMax(rows[mostRecentRow])\n    rows[mostRecentRow].push(newBlock)\n    newBlock.currentRow = mostRecentRow\n    createjs.Tween.get(newBlock).to({x: TWELFTH_WIDTH+rowMax,y: CONTAINER_ORIGIN_Y+mostRecentRow*TWELFTH_WIDTH}, 700, createjs.Ease.getPowInOut(4))\n}\n\nfunction createCuisenaireMenu(){\n  let cumSum = 0\n  let j = 0\n  let h = WHOLE_WIDTH/12\n  for (let i = 0;i<12;i++){\n    let w = (12-i)*TWELFTH_WIDTH\n    let newConstructor = createBlockConstructor(w,h,i)\n    newConstructor.x = TWELFTH_WIDTH+cumSum\n    newConstructor.y = TWELFTH_WIDTH/4+1.1*j*h\n    cumSum = cumSum + w + 10\n    if (cumSum > 1.6*WHOLE_WIDTH){\n      j += 1\n      cumSum = 0\n    }\n    app.stage.addChild(newConstructor)\n  }\n}\n\ncreateCuisenaireMenu()\n\nfunction condenseAfter(row,k,blank){\n  for (let i = 0;i<row.length;i++){\n    if (i >= k){\n      createjs.Tween.get(row[i]).to({x: row[i].x-blank.i*TWELFTH_WIDTH}, 500, createjs.Ease.getPowInOut(4))\n    }\n  }\n}\n\nfunction createBlock(w,h,color,i) {\n  let blockContainer = new PIXI.Container()\n  var graphics = new PIXI.Graphics();\n   graphics.lineStyle(1,0xFFFFFF)\n    graphics.beginFill(color);\n    graphics.drawRoundedRect(0,0,w-1.5,h,2)\n    graphics.endFill();\n    graphics.color = color\n    // console.log(\"graphics dims\",graphics.width,graphics.height)\n    let graphicsTexture = app.renderer.generateTexture(graphics)\n    let graphicsSprite = new PIXI.Sprite(graphicsTexture)\n    blockContainer.addChild(graphicsSprite)\n    blockContainer.interactive = true\n    blockContainer.color = color\n    blockContainer.i = i\n    let fracText = i == 1 ? \"1\" : \"1/\"+i\n    let frac = new PIXI.Text(fracText,{fontFamily : 'Chalkboard SE', fontSize: graphicsSprite.height/3, fill : 0x000000, align : 'center'});\n\n    frac.anchor.set(0.5)\n    frac.x = graphicsSprite.width/2\n    frac.y = graphicsSprite.height/2\n    blockContainer.addChild(graphicsSprite)\n    //blockContainer.addChild(frac)\n\n    blockContainer.on('pointerdown', onPolyTouched)\n    blockContainer.on('pointerup', onPolyMoveEnd)\n    blockContainer.on('pointermove', onPolyTouchMoved);\n  return blockContainer\n}\n\n\n\nfunction onPolyTouched(event) {\n\n  if (this.TYPE == OBJ_TYPE.CUT){\n    cutting = true\n  }\n    activePoly = this\n    let touchedAtX = event.data.global.x\n    let touchedAtY = event.data.global.y\n\n    app.stage.addChild(this)\n    this.dragging = true;\n    this.wasDragged = false\n    this.deltaTouch = [this.x-touchedAtX,this.y-touchedAtY]\n    this.dragStartedAt = [this.x,this.y]\n    this.data = event.data;\n}\n\nfunction onPolyMoveEnd() {\n    this.dragging = false;\n    this.data = null;\n    this.deltaTouch = []\n\n    let newXVal;\n    let p = new PIXI.Point(this.x+this.width/2,this.y+this.height/2)\n    let inContainer = pointInRect(p,container)\n    let y = roundY(this.y)\n    let x = roundX(this.x)\n    let r = getRow(this.y)\n    let i = rows[this.currentRow].indexOf(this)\n\n    if (inContainer){\n    rows[this.currentRow].splice(i,1)\n    condenseAfter(rows[this.currentRow],i,this)\n    mostRecentRow = r\n    if (r != this.currentRow){\n      newXVal = CONTAINER_ORIGIN_X+getRowMax(rows[r])\n      rows[r].push(this)\n      this.currentRow = r\n    } else {\n      rows[this.currentRow].push(this)\n      newXVal = CONTAINER_ORIGIN_X+getRowMax(rows[r]) - this.i*TWELFTH_WIDTH\n    }\n      createjs.Tween.get(this).to({x: newXVal,y: y}, 500, createjs.Ease.getPowInOut(4))\n  } else {\n      rows[this.currentRow].splice(i,1)\n      condenseAfter(rows[this.currentRow],i,this)\n      app.stage.removeChild(this)\n  }\n}\n\nfunction getRowMax(row){\n  let sum = 0\n  row.forEach(r => {sum = sum + r.i*TWELFTH_WIDTH})\n  return sum\n}\n\nfunction getRow(yVal){\n  return Math.round((yVal-CONTAINER_ORIGIN_Y)/(WHOLE_WIDTH/12))\n}\n\nfunction roundY(val){\n  let i = Math.round((val-CONTAINER_ORIGIN_Y)/(WHOLE_WIDTH/12))\n  return CONTAINER_ORIGIN_Y+TWELFTH_WIDTH*i\n}\n\nfunction roundX(val){\n  let i = Math.round((val-CONTAINER_ORIGIN_X)/(WHOLE_WIDTH/12))\n  return TWELFTH_WIDTH*i\n}\n\nfunction onPolyTouchMoved() {\n    if (this.dragging) {\n        this.wasDragged = true\n        var newPosition = this.data.getLocalPosition(this.parent);\n          this.x = newPosition.x + this.deltaTouch[0]\n          this.y = newPosition.y + this.deltaTouch[1]\n    }\n}\n\nfunction pointInRect(p,rect){\n  // This is for a rect with anchor in center\n  let top;\n  let bottom;\n  let left;\n  let right;\n\n  if (rect.anchor._x == 0.5){\n    top = rect.y - rect.height/2\n    bottom = rect.y + rect.height/2\n    left = rect.x - rect.width/2\n    right = rect.x + rect.width/2\n } else {\n   top = rect.y\n   bottom = rect.y + rect.height\n   left = rect.x\n   right = rect.x + rect.width\n }\n  // console.log(\"top,bottom,left,right\",top,bottom,left,right)\n\n  let c1 = p.x < right\n  let c2 = p.x > left\n  let c3 = p.y < bottom\n  let c4 = p.y > top\n\n  return c1 && c2 && c3 && c4\n}\n\n\n};\n"]},"metadata":{},"sourceType":"module"}