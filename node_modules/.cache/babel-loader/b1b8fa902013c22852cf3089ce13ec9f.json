{"ast":null,"code":"import _slicedToArray from \"/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/components/TeacherSlides.js\";\nimport React, { Component, Text, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Arena from \"./Arena\";\nimport * as FractionWallScript from \"../js/fractionwall.js\";\nimport * as NumberLineToolScript from \"../js/numberlinetool.js\";\nimport * as GridToolScript from \"../js/gridtool.js\";\nimport * as OrderingToolScript from \"../js/orderingtool.js\";\nimport * as SharingToolScript from \"../js/sharingtool.js\";\nimport * as CuisenaireToolScript from \"../js/cuisenairetool.js\";\nimport * as CapacityTalkData from \"../activitydata/CapacityTalk.json\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport * as Pixi from \"pixi.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Page, Document, pdfjs } from \"react-pdf\";\nimport Panels from \"./Panels\";\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\nexport default function LessonPanel(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(1),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        panelNumber = _React$useState2[0],\n        setPanel = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"Problem 1\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        label = _React$useState4[0],\n        setLabel = _React$useState4[1];\n\n  const keys = [0, 1, 2];\n  var panel;\n  let page1;\n  let width;\n  const page100 = React.createElement(Document, {\n    file: \"pdf/pk07.pdf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", React.createElement(Page, {\n    pageNumber: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \" \"); // So that the correct panel is highlighted on startup\n\n  useEffect(() => {\n    console.log(\"panel\", panel.clientWidth);\n    width = panel.clientWidth;\n    page1 = React.createElement(Document, {\n      file: \"pdf/pk07.pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" \", React.createElement(Page, {\n      width: 200,\n      pageNumber: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), \" \");\n  });\n\n  function animate(k) {\n    var tl = new TimelineMax();\n\n    if (k == -1) {\n      tl.to(panel, 0.5, {\n        x: panel.clientWidth,\n        alpha: 0\n      }).to(panel, 0, {\n        x: -panel.clientWidth,\n        alpha: 1\n      }).to(panel, 1, {\n        x: 0\n      });\n    } else if (k == 1) {\n      tl.to(panel, 0.5, {\n        x: -panel.clientWidth,\n        alpha: 0\n      }).to(panel, 0, {\n        x: panel.clientWidth,\n        alpha: 1\n      }).to(panel, 1, {\n        x: 0\n      });\n    }\n\n    setPanel(panelNumber + 1);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Panels, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/components/TeacherSlides.js"],"names":["React","Component","Text","useEffect","makeStyles","useTheme","Arena","FractionWallScript","NumberLineToolScript","GridToolScript","OrderingToolScript","SharingToolScript","CuisenaireToolScript","CapacityTalkData","Grid","TextField","Pixi","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","Button","Paper","Page","Document","pdfjs","Panels","GlobalWorkerOptions","workerSrc","version","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","LessonPanel","props","classes","useState","panelNumber","setPanel","label","setLabel","keys","panel","page1","page100","console","log","clientWidth","animate","k","tl","to","x","alpha"],"mappings":"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","sourcesContent":["import React , {Component, Text,useEffect} from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Arena from \"./Arena\";\nimport * as FractionWallScript from \"../js/fractionwall.js\";\nimport * as NumberLineToolScript from \"../js/numberlinetool.js\";\nimport * as GridToolScript from \"../js/gridtool.js\";\nimport * as OrderingToolScript from \"../js/orderingtool.js\";\nimport * as SharingToolScript from \"../js/sharingtool.js\";\nimport * as CuisenaireToolScript from \"../js/cuisenairetool.js\";\nimport * as CapacityTalkData from \"../activitydata/CapacityTalk.json\";\nimport { Grid , TextField} from \"@material-ui/core\";\nimport * as Pixi from \"pixi.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Page,Document,pdfjs} from \"react-pdf\"\nimport Panels from \"./Panels\"\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function LessonPanel(props) {\n  const classes = useStyles();\n  const [panelNumber,setPanel] = React.useState(1)\n  const [label,setLabel] = React.useState(\"Problem 1\")\n  const keys = [0,1,2]\n  var panel;\n  let page1;\n  let width;\n  const page100 = <Document file=\"pdf/pk07.pdf\"> <Page pageNumber = {1} /> </Document>\n\n\n// So that the correct panel is highlighted on startup\nuseEffect(()=> {\n    console.log(\"panel\",panel.clientWidth)\n    width = panel.clientWidth\n    page1 = <Document file=\"pdf/pk07.pdf\"> <Page width = {200}  pageNumber = {1} /> </Document>\n})\n  function animate(k){\n    var tl = new TimelineMax()\n    if (k == -1) {\n      tl.to(panel, 0.5, {x: panel.clientWidth,alpha: 0})\n        .to(panel,0, {x: -panel.clientWidth,alpha: 1})\n        .to(panel,1,{x: 0})\n    \n    } else if (k == 1) {\n      tl.to(panel, 0.5, {x: -panel.clientWidth,alpha: 0})\n        .to(panel,0, {x: panel.clientWidth,alpha: 1})\n        .to(panel,1,{x: 0})\n    }\n    setPanel(panelNumber+1)\n  }\n\n\n    return (\n      <div className = \"center\" >\n        <Panels/>\n      </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}