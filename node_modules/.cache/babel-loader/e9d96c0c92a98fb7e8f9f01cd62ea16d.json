{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const LINE_PERCENTAGE = 0.8;\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN);\n  const MEASURE_PIN_TEXTURE = new PIXI.Texture.from(ASSETS.MEASURE_PIN); // Initial State\n\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 30\n  }; // Global Vars \n\n  let features; // Layout Parameters\n\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let BAR_HEIGHT = WINDOW_HEIGHT / 15;\n  let LINE_WIDTH = WINDOW_WIDTH * 0.8;\n\n  class Row extends PIXI.Container {\n    constructor(num, den, width, ID) {\n      super(); // This\n\n      this.incDenonimator = inc => {\n        this.frameGraphics.clear();\n        this.frameGraphics.lineStyle(3, 0x000000);\n        this.frameGraphics.drawRoundedRect(0, 0, this.width, BAR_HEIGHT, 1);\n        let R = app.renderer.generateTexture(this.frameGraphics);\n        let s = new PIXI.Sprite();\n        this.container.addChild(s);\n        s.texture = R;\n        s.x = 0;\n\n        if (inc > 0) {\n          const onComplete = () => {\n            s.on('pointerdown', this.spritePointerDown);\n            s.on('pointerup', this.spritePointerUp);\n            s.on('pointermove', this.spritePointerMoved);\n            s.interactive = true;\n            s.active = false;\n            this.sprites.push(s);\n            this.draw();\n          };\n\n          TweenMax.to(this, 0.25, {\n            denominator: this.denominator + 1,\n            onUpdate: this.draw,\n            onComplete: onComplete\n          });\n        } else if (inc < 0) {\n          let removeme = this.sprites.pop();\n          this.container.removeChild(removeme);\n\n          const onComplete = () => {\n            this.draw();\n            this.container.removeChild(s);\n          };\n\n          TweenMax.to(this, 0.25, {\n            denominator: this.denominator - 1,\n            onUpdate: this.draw,\n            onComplete: onComplete\n          });\n        }\n      };\n\n      this.interactive = true; // Default values\n\n      this.numerator = num;\n      this.denominator = den;\n      this.width = width;\n      this.id = ID;\n      this.sprites = [];\n      this.blockWidth = width / this.denominator; // Init Graphics A\n\n      this.graphicsA = new PIXI.Graphics();\n      this.graphicsA.lineStyle(3, 0x000000);\n      this.graphicsA.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureA = app.renderer.generateTexture(this.graphicsA); // Init Graphics B\n\n      this.graphicsB = new PIXI.Graphics();\n      this.graphicsB.beginFill(0xff4772);\n      this.graphicsB.lineStyle(3, 0x000000);\n      this.graphicsB.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureB = app.renderer.generateTexture(this.graphicsB); // Dummy frame for when animating between different fractional parts.\n\n      this.frameGraphics = new PIXI.Graphics(); // Generate Row\n\n      for (let i = 0; i < this.denominator; i++) {\n        console.log(\"balls\");\n        let s = new PIXI.Sprite.from(this.textureA);\n        s.on('pointerdown', this.spritePointerDown);\n        s.on('pointerup', this.spritePointerUp);\n        s.on('pointermove', this.spritePointerMoved);\n        s.interactive = true;\n        s.active = false;\n        s.x = i * LINE_WIDTH / this.denominator;\n        s.y = WINDOW_HEIGHT / 2 - BAR_HEIGHT;\n        this.sprites.push(s);\n        this.addChild(s);\n      } //  Attached methods\n\n\n      this.on('pointerdown', this.pointerDown);\n      this.on('pointerup', this.pointerUp);\n      this.on('pointermove', this.pointerMove);\n    }\n\n    draw(width) {\n      if (width) {\n        this.width = width;\n      }\n\n      this.blockWidth = this.width / this.denominator;\n      this.graphicsA.clear();\n      this.graphicsA.lineStyle(3, 0x000000);\n      this.graphicsA.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureA = app.renderer.generateTexture(this.graphicsA);\n      this.graphicsB.clear();\n      this.graphicsB.beginFill(0xff4772);\n      this.graphicsB.lineStyle(3, 0x000000);\n      this.graphicsB.drawRoundedRect(0, 0, this.blockWidth, BAR_HEIGHT, 1);\n      this.textureB = app.renderer.generateTexture(this.graphicsB);\n\n      for (let i = 0; i < this.sprites.length; i++) {\n        if (this.sprites[i].active) {\n          this.sprites[i].texture = this.textureA;\n        } else {\n          this.sprites[i].texture = this.textureB;\n        }\n\n        this.sprites[i].x = this.blockWidth * i;\n        this.sprites[i].y = 0;\n      }\n    }\n\n    spritePointerDown(event) {\n      this.touched = true;\n      this.dragged = false;\n    }\n\n    spritePointerMoved(event) {\n      if (this.touched) {\n        console.log(\"pointermove\");\n        this.dragged = true;\n      }\n    }\n\n    spritePointerUp(event) {\n      this.touched = false;\n      console.log('this.draggeed', this.dragged);\n\n      if (!this.dragged) {\n        this.dragged = false;\n        this.active = !this.active;\n        this.alpha = 0.2;\n        this.texture = this.active ? this.parent.textureB : this.parent.textureA;\n        TweenLite.to(this, 0.4, {\n          alpha: 1\n        });\n      }\n    }\n\n    pointerDown(event) {\n      app.stage.addChild(this);\n      this.data = event.data;\n      this.startWidth = this.width;\n      this.dragStartY = event.data.global.y;\n      this.touching = true;\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      };\n    }\n\n    pointerUp(event) {\n      globalPointerUp();\n      this.touching = false;\n    }\n\n    pointerMove(event) {\n      if (this.touching) {\n        this.y = event.data.global.y + this.deltaTouch.y;\n        this.dragged = true;\n      }\n    }\n\n  }\n\n  function globalPointerUp() {} // \n  // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame);\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n  } // Loading Script\n\n\n  function load() {\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    let row = new Row(0, 4, LINE_WIDTH, 0);\n    app.stage.addChild(row);\n  } // Functions attached to app: (need to be destroyed)\n\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n  load();\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/newfractionstacks.js"],"names":["PIXI","CONST","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","ASSETS","init","app","setup","BLUE_TEXTURE","Texture","from","BLUE_CIRCLE","LINE_PERCENTAGE","PIN_TEXTURE","SHARP_PIN","MEASURE_PIN_TEXTURE","MEASURE_PIN","state","valA","valB","lineMax","features","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","BAR_HEIGHT","LINE_WIDTH","Row","Container","constructor","num","den","ID","incDenonimator","inc","frameGraphics","clear","lineStyle","drawRoundedRect","R","renderer","generateTexture","s","Sprite","container","addChild","texture","x","onComplete","on","spritePointerDown","spritePointerUp","spritePointerMoved","interactive","active","sprites","push","draw","to","denominator","onUpdate","removeme","pop","removeChild","numerator","id","blockWidth","graphicsA","Graphics","textureA","graphicsB","beginFill","textureB","i","console","log","y","pointerDown","pointerUp","pointerMove","length","event","touched","dragged","alpha","parent","stage","data","startWidth","dragStartY","global","touching","deltaTouch","globalPointerUp","resize","newFrame","flex","updateLayoutParams","frame","load","props","row","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nconst ASSETS = CONST.ASSETS\n\nexport const init = (app, setup) => {\n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const LINE_PERCENTAGE = 0.8\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN)\n  const MEASURE_PIN_TEXTURE = new PIXI.Texture.from(ASSETS.MEASURE_PIN)\n\n\n // Initial State\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 30,\n  }\n\n// Global Vars \n  let features;\n\n\n\n  // Layout Parameters\n  let WINDOW_WIDTH = setup.width\n  let WINDOW_HEIGHT = setup.height\n  let BAR_HEIGHT = WINDOW_HEIGHT/15\n  let LINE_WIDTH = WINDOW_WIDTH*0.8\n\n  class Row extends PIXI.Container {\n\n    constructor(num,den,width,ID) {\n      super()\n\n      // This\n      this.interactive = true\n\n\n        // Default values\n      this.numerator = num\n      this.denominator = den\n      this.width = width\n      this.id = ID\n      this.sprites = []\n      this.blockWidth = width / this.denominator\n\n\n      // Init Graphics A\n      this.graphicsA = new PIXI.Graphics()\n      this.graphicsA.lineStyle(3,0x000000) \n      this.graphicsA.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureA = app.renderer.generateTexture(this.graphicsA)\n\n      // Init Graphics B\n      this.graphicsB  = new PIXI.Graphics()\n      this.graphicsB.beginFill(0xff4772)\n      this.graphicsB.lineStyle(3,0x000000) \n      this.graphicsB.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureB = app.renderer.generateTexture(this.graphicsB)\n\n      // Dummy frame for when animating between different fractional parts.\n      this.frameGraphics = new PIXI.Graphics()    \n  \n      // Generate Row\n      for (let i = 0;i<this.denominator;i++) {\n        console.log(\"balls\")\n        let s = new PIXI.Sprite.from(this.textureA)\n        s.on('pointerdown',this.spritePointerDown)\n        s.on('pointerup',this.spritePointerUp)\n        s.on('pointermove',this.spritePointerMoved)\n        s.interactive = true\n        s.active = false\n        s.x = i*LINE_WIDTH/this.denominator\n        s.y = WINDOW_HEIGHT/2 - BAR_HEIGHT\n        this.sprites.push(s)\n        this.addChild(s)\n      }\n            //  Attached methods\n      this.on('pointerdown',this.pointerDown)\n      this.on('pointerup',this.pointerUp)\n      this.on('pointermove',this.pointerMove)\n\n    }\n  \n\n    incDenonimator = (inc) => {\n      this.frameGraphics.clear()\n      this.frameGraphics.lineStyle(3,0x000000) \n      this.frameGraphics.drawRoundedRect(0,0,this.width,BAR_HEIGHT,1)\n      let R = app.renderer.generateTexture(this.frameGraphics)\n      let s = new PIXI.Sprite()\n      this.container.addChild(s)\n      s.texture = R\n      s.x  = 0\n\n      if (inc > 0){\n        const onComplete = ()=>{\n          s.on('pointerdown',this.spritePointerDown)\n          s.on('pointerup',this.spritePointerUp)\n          s.on('pointermove',this.spritePointerMoved)\n          s.interactive = true\n          s.active = false\n          this.sprites.push(s)\n          this.draw()\n        }\n        TweenMax.to(this, 0.25, {denominator: this.denominator+1,onUpdate: this.draw,onComplete: onComplete})\n      } else if (inc < 0) {\n        let removeme  = this.sprites.pop()\n        this.container.removeChild(removeme)\n        const onComplete = ()=>{\n          this.draw()\n          this.container.removeChild(s)\n        }\n        TweenMax.to(this, 0.25, {denominator: this.denominator-1,onUpdate: this.draw,onComplete: onComplete})\n      }\n    }\n\n    draw(width) {\n\n      if (width) {\n        this.width = width\n      }\n\n      this.blockWidth = this.width/this.denominator\n\n      this.graphicsA.clear()\n      this.graphicsA.lineStyle(3,0x000000) \n      this.graphicsA.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureA = app.renderer.generateTexture(this.graphicsA)\n\n      this.graphicsB.clear()\n      this.graphicsB.beginFill(0xff4772)\n      this.graphicsB.lineStyle(3,0x000000) \n      this.graphicsB.drawRoundedRect(0,0,this.blockWidth,BAR_HEIGHT,1)\n      this.textureB = app.renderer.generateTexture(this.graphicsB)\n\n      for (let i = 0;i<this.sprites.length;i++){\n        if (this.sprites[i].active){\n          this.sprites[i].texture = this.textureA\n        } else {\n          this.sprites[i].texture = this.textureB\n        }\n\n        this.sprites[i].x = this.blockWidth*i\n        this.sprites[i].y = 0\n      }\n    }\n\n    spritePointerDown(event){\n      this.touched = true\n      this.dragged = false\n    }\n\n    spritePointerMoved(event) {\n\n      if (this.touched){\n        console.log(\"pointermove\")\n        this.dragged = true\n      }\n    }\n\n    spritePointerUp(event){\n         this.touched = false\n         console.log('this.draggeed',this.dragged)\n     if (!this.dragged) {\n        this.dragged = false\n        this.active = !this.active\n        this.alpha = 0.2\n        this.texture = this.active ? this.parent.textureB : this.parent.textureA\n        TweenLite.to(this,0.4,{alpha: 1})\n       }\n    }\n\n \n   pointerDown(event) {\n      app.stage.addChild(this)\n      this.data = event.data\n      this.startWidth = this.width\n      this.dragStartY = event.data.global.y\n      this.touching = true\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n    }\n \n   pointerUp(event) {\n      globalPointerUp()\n      this.touching = false\n    }\n\n    pointerMove(event) {\n      if (this.touching){\n        this.y = event.data.global.y + this.deltaTouch.y\n        this.dragged = true\n      }\n    }\n  }\n\n\n\n  function globalPointerUp(){\n    // \n  }\n  \n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n  }\n\n  // Loading Script\n  function load(){\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n    let row = new Row(0,4,LINE_WIDTH,0)\n    app.stage.addChild(row)\n\n  }\n\n  // Functions attached to app: (need to be destroyed)\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n\n  load()\n};\n"]},"metadata":{},"sourceType":"module"}