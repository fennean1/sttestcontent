{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const RED_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.RED_CIRCLE);\n  const EMPTY_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.EMPTY_CIRCLE);\n  const LOCK_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.LOCKED_LOCK);\n  const UNLOCK_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.UNLOCKED_LOCK); // State - can be used to reconstruct the app at any point in time.\n\n  let state = {\n    pivot: null,\n    val: 0\n  }; // Parameters (Only changes on resize)\n\n  let H_W_RATIO = setup.height / setup.width;\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let LANDSCAPE = H_W_RATIO < 3 / 4;\n  let ARENA_WIDTH = LANDSCAPE ? 4 / 3 * setup.height : setup.width;\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3 / 4 * setup.width;\n  let GRID_HEIGHT = 0.75 * WINDOW_HEIGHT;\n  let GRID_WIDTH = GRID_HEIGHT; // Entities - objects that appear on screen\n\n  let lockButton;\n  let backGround;\n  let plusOneButton;\n  let plusTenButton;\n  let minusTenButton;\n  let minusOneButton;\n  let gridCounters; // Circles that represent numbers\n\n  let gridNodes; // Placeholders / small dots\n\n  let zeroButton; // Constructors (should not be called on re-draw)\n  // START HERE: Let's try ot make this grid a container object and give it a redraw property.\n\n  function makeGridNodes(dim) {\n    this.grid = []; // State: Texture: {Hollow,Blue,Red,None} , Hidden: {True,False}\n\n    for (let i = 0; i < dim; i++) {\n      let row = [];\n\n      for (let j = 0; j < dim; j++) {\n        let newNode = new PIXI.Graphics();\n        app.stage.addChild(newNode);\n        row.push(newNode);\n      }\n\n      this.grid.push(row);\n    } // Draw function\n\n\n    this.draw = () => {\n      let dx = GRID_WIDTH / dim;\n      let dy = dx;\n      let w = dx / 5;\n      let h = w;\n      this.grid.map((r, i) => {\n        r.map((e, j) => {\n          let x = WINDOW_WIDTH / 2 - dim / 2 * dx + dx * j;\n          let y = WINDOW_HEIGHT / 2 + dim / 2 * dy - dy * i;\n          e.clear();\n          e.beginFill(0x000000);\n          e.drawCircle(x, y, w / 2);\n        });\n      });\n    };\n\n    this.draw();\n  }\n\n  function makeGridCounters(dim) {\n    this.grid = []; // State: Texture: {Hollow,Blue,Red,None} , Hidden: {True,False}\n\n    for (let i = 0; i < dim; i++) {\n      let row = [];\n\n      for (let j = 0; j < dim; j++) {\n        let newCounter = new PIXI.Sprite();\n        newCounter.texture = null;\n        newCounter.anchor.set(0.5);\n        app.stage.addChild(newCounter);\n        row.push(newCounter);\n      }\n\n      this.grid.push(row);\n    } // Draw function\n\n\n    this.draw = () => {\n      let dx = GRID_WIDTH / dim;\n      let dy = dx;\n      let w = dx;\n      let h = w;\n      this.grid.map((r, i) => {\n        r.map((e, j) => {\n          let x = WINDOW_WIDTH / 2 - dim / 2 * dx + dx * j;\n          let y = WINDOW_HEIGHT / 2 + dim / 2 * dy - dy * i;\n          e.x = x;\n          e.y = y;\n          e.width = w;\n          e.height = h;\n        });\n      });\n    };\n\n    this.draw();\n  }\n\n  function getLockButton() {\n    let btn = new PIXI.Sprite.from(CONST.ASSETS.UNLOCKED_LOCK);\n\n    btn.draw = () => {\n      let w = GRID_WIDTH / 8;\n      let h = w * 0.8;\n      btn.x = WINDOW_WIDTH / 2 - 1.10 * GRID_WIDTH / 2 + -w;\n      btn.y = 0;\n      btn.width = w;\n      btn.height = h;\n    };\n\n    btn.interactive = true;\n    btn.on('pointerdown', () => setPivot());\n    btn.draw();\n    return btn;\n  }\n\n  function getZeroButton() {\n    let btn = new PIXI.Sprite.from(CONST.ASSETS.ZERO_OUT);\n\n    btn.draw = () => {\n      let w = GRID_WIDTH / 8;\n      let h = w * 0.8;\n      btn.x = WINDOW_WIDTH / 2 + 1.10 * GRID_WIDTH / 2;\n      btn.y = 0;\n      btn.width = w;\n      btn.height = h;\n    };\n\n    btn.interactive = true;\n    btn.on('pointerdown', () => {\n      state.val = 0;\n      updateGrid(0);\n    });\n    btn.draw();\n    return btn;\n  }\n\n  function getPlusTenButton() {\n    let btn = new PIXI.Sprite.from(CONST.ASSETS.PLUS_TEN);\n\n    btn.draw = () => {\n      let w = GRID_WIDTH / 4;\n      let h = w / 2;\n      btn.x = WINDOW_WIDTH / 2 - 1.10 * GRID_WIDTH / 2 + 3 * w;\n      btn.y = 0;\n      btn.width = w;\n      btn.height = h;\n    };\n\n    btn.interactive = true;\n    btn.on('pointerdown', () => updateGrid(10));\n    btn.draw();\n    return btn;\n  }\n\n  function getPlusOneButton() {\n    let btn = new PIXI.Sprite.from(CONST.ASSETS.PLUS_ONE);\n\n    btn.draw = () => {\n      let w = GRID_WIDTH / 4;\n      let h = w / 2;\n      btn.x = WINDOW_WIDTH / 2 - 1.10 * GRID_WIDTH / 2 + 2 * w;\n      btn.y = 0;\n      btn.width = w;\n      btn.height = h;\n    };\n\n    btn.interactive = true;\n    btn.on('pointerdown', () => updateGrid(1));\n    btn.draw();\n    return btn;\n  }\n\n  function getMinusTenButton() {\n    let btn = new PIXI.Sprite.from(CONST.ASSETS.MINUS_TEN);\n\n    btn.draw = () => {\n      let w = GRID_WIDTH / 4;\n      let h = w / 2;\n      btn.x = WINDOW_WIDTH / 2 - 1.10 * GRID_WIDTH / 2;\n      btn.y = 0;\n      btn.width = w;\n      btn.height = h;\n    };\n\n    btn.interactive = true;\n    btn.on('pointerdown', () => updateGrid(-10));\n    btn.draw();\n    return btn;\n  }\n\n  function getMinusOneButton() {\n    let btn = new PIXI.Sprite.from(CONST.ASSETS.MINUS_ONE);\n\n    btn.draw = () => {\n      let w = GRID_WIDTH / 4;\n      let h = w / 2;\n      btn.x = WINDOW_WIDTH / 2 - 1.10 * GRID_WIDTH / 2 + w;\n      btn.y = 0;\n      btn.width = w;\n      btn.height = h;\n    };\n\n    btn.interactive = true;\n    btn.on('pointerdown', () => updateGrid(-1));\n    btn.draw();\n    return btn;\n  } // Called on resize\n\n\n  function resize(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n\n    WINDOW_WIDTH = frame.width;\n    WINDOW_HEIGHT = frame.height; // Recompute\n\n    H_W_RATIO = newFrame.height / newFrame.width;\n    LANDSCAPE = H_W_RATIO < 3 / 4;\n    ARENA_WIDTH = LANDSCAPE ? 4 / 3 * newFrame.height : newFrame.width;\n    ARENA_HEIGHT = LANDSCAPE ? newFrame.height : 3 / 4 * newFrame.width;\n    GRID_HEIGHT = 0.75 * WINDOW_HEIGHT;\n    GRID_WIDTH = GRID_HEIGHT; // Set\n\n    backGround.width = WINDOW_WIDTH;\n    backGround.height = WINDOW_HEIGHT;\n    app.renderer.resize(WINDOW_WIDTH, WINDOW_HEIGHT);\n    gridNodes.draw();\n    gridCounters.draw();\n    lockButton.draw();\n    plusOneButton.draw();\n    minusOneButton.draw();\n    minusTenButton.draw();\n    plusTenButton.draw();\n    zeroButton.draw();\n  } // Actions\n\n\n  function setPivot() {\n    console.log(\"state.pivot\", state.pivot);\n\n    if (state.pivot != null) {\n      console.log(\"unlocking\");\n      state.pivot = null;\n      lockButton.texture = UNLOCK_TEXTURE;\n      updateGrid(0);\n    } else {\n      console.log(\"locking\");\n      state.pivot = state.val;\n      lockButton.texture = LOCK_TEXTURE;\n    }\n  }\n\n  function updateGrid(inc) {\n    let newVal = state.val + inc;\n    let onesInNewVal = newVal % 10;\n    let tensInNewVal = newVal - onesInNewVal;\n    let onesInPivot = state.pivot % 10;\n    let tensInPivot = state.pivot - onesInPivot;\n    let difference = Math.abs(state.pivot - newVal);\n    let onesInDifference = difference % 10;\n    let tensInDifference = difference - onesInDifference;\n\n    if (newVal >= 0 && newVal <= 100) {\n      state.val = newVal;\n      let pivot = state.pivot,\n          val = state.val;\n      let count = 0;\n      gridCounters.grid.map((row, i) => {\n        row.map((e, j) => {\n          count += 1;\n\n          if (count <= val && pivot == null) {\n            e.texture = BLUE_TEXTURE;\n            console.log(\"first\");\n          } else if (count <= tensInPivot) {\n            e.texture = BLUE_TEXTURE;\n          } else if (count <= tensInDifference + tensInPivot) {\n            e.texture = RED_TEXTURE;\n          } else if (count > tensInDifference + tensInPivot && count < tensInNewVal + onesInPivot) {\n            e.texture = RED_TEXTURE;\n          } else if (count <= val && count > tensInNewVal) {\n            e.texture = BLUE_TEXTURE;\n          } else if (count > tensInPivot && count <= pivot) {\n            e.texture = RED_TEXTURE;\n          } else if (count <= val && count <= pivot) {\n            console.log(\"second\");\n            e.texture = BLUE_TEXTURE;\n          } else if (count <= tensInNewVal && count >= pivot) {\n            console.log(\"third\");\n            e.texture = RED_TEXTURE;\n          } else if (count >= val && count <= pivot) {\n            console.log(\"fourth\");\n            e.texture = EMPTY_TEXTURE;\n          } else {\n            e.texture = null;\n          }\n        });\n      });\n    }\n  } // Loading Script\n\n\n  function load() {\n    let features = {\n      'lock': true,\n      'fives': true,\n      'touchable': true\n    };\n\n    if (setup.props.features) {\n      features = setup.props.features;\n    } // Setup Background\n\n\n    backGround = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    backGround.width = WINDOW_WIDTH;\n    backGround.height = WINDOW_HEIGHT;\n    backGround.x = 0;\n    backGround.y = 0;\n    backGround.interactive = true;\n    backGround.on('pointerdown', updateGrid);\n    app.stage.addChild(backGround); // Initialize counters\n\n    gridNodes = new makeGridNodes(10);\n    gridCounters = new makeGridCounters(10);\n    zeroButton = getZeroButton();\n    app.stage.addChild(zeroButton);\n    plusTenButton = getPlusTenButton();\n    app.stage.addChild(plusTenButton);\n    plusOneButton = getPlusOneButton();\n    app.stage.addChild(plusOneButton);\n    minusTenButton = getMinusTenButton();\n    app.stage.addChild(minusTenButton);\n    minusOneButton = getMinusOneButton();\n    app.stage.addChild(minusOneButton);\n    lockButton = getLockButton();\n\n    if (features['lock']) {\n      app.stage.addChild(lockButton);\n    }\n  } // Call load script\n\n\n  load(); // Resize assignment\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/hundredsarray.js"],"names":["PIXI","CONST","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","init","app","setup","BLUE_TEXTURE","Texture","from","ASSETS","BLUE_CIRCLE","RED_TEXTURE","RED_CIRCLE","EMPTY_TEXTURE","EMPTY_CIRCLE","LOCK_TEXTURE","LOCKED_LOCK","UNLOCK_TEXTURE","UNLOCKED_LOCK","state","pivot","val","H_W_RATIO","height","width","WINDOW_WIDTH","WINDOW_HEIGHT","LANDSCAPE","ARENA_WIDTH","ARENA_HEIGHT","GRID_HEIGHT","GRID_WIDTH","lockButton","backGround","plusOneButton","plusTenButton","minusTenButton","minusOneButton","gridCounters","gridNodes","zeroButton","makeGridNodes","dim","grid","i","row","j","newNode","Graphics","stage","addChild","push","draw","dx","dy","w","h","map","r","e","x","y","clear","beginFill","drawCircle","makeGridCounters","newCounter","Sprite","texture","anchor","set","getLockButton","btn","interactive","on","setPivot","getZeroButton","ZERO_OUT","updateGrid","getPlusTenButton","PLUS_TEN","getPlusOneButton","PLUS_ONE","getMinusTenButton","MINUS_TEN","getMinusOneButton","MINUS_ONE","resize","newFrame","frame","renderer","console","log","inc","newVal","onesInNewVal","tensInNewVal","onesInPivot","tensInPivot","difference","Math","abs","onesInDifference","tensInDifference","count","load","features","props","BLUE_GRADIENT","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\n\nexport const init = (app, setup) => {\n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const RED_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.RED_CIRCLE)\n  const EMPTY_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.EMPTY_CIRCLE)\n  const LOCK_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.LOCKED_LOCK)\n  const UNLOCK_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.UNLOCKED_LOCK)\n\n // State - can be used to reconstruct the app at any point in time.\n  let state = {\n    pivot: null,\n    val: 0,\n  }\n\n  // Parameters (Only changes on resize)\n  let H_W_RATIO = setup.height/setup.width\n  let WINDOW_WIDTH = setup.width\n  let WINDOW_HEIGHT = setup.height\n  let LANDSCAPE = H_W_RATIO < 3/4\n  let ARENA_WIDTH = LANDSCAPE ? 4/3*setup.height : setup.width\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3/4*setup.width\n  let GRID_HEIGHT = 0.75*WINDOW_HEIGHT\n  let GRID_WIDTH = GRID_HEIGHT\n\n  // Entities - objects that appear on screen\n  let lockButton;\n  let backGround;\n  let plusOneButton;\n  let plusTenButton;\n  let minusTenButton;\n  let minusOneButton;\n  let gridCounters;  // Circles that represent numbers\n  let gridNodes;  // Placeholders / small dots\n  let zeroButton;\n \n  // Constructors (should not be called on re-draw)\n  // START HERE: Let's try ot make this grid a container object and give it a redraw property.\n\n\n  function makeGridNodes(dim){\n      this.grid = []\n      // State: Texture: {Hollow,Blue,Red,None} , Hidden: {True,False}\n      for (let i = 0;i<dim;i++){\n        let row = []\n        for (let j = 0;j<dim;j++) {\n          let newNode = new PIXI.Graphics()\n          app.stage.addChild(newNode)\n          row.push(newNode)\n        }\n        this.grid.push(row)\n     }\n     // Draw function\n      this.draw = () => {\n        let dx = GRID_WIDTH/dim\n        let dy = dx\n        let w = dx/5\n        let h = w\n        this.grid.map((r,i)=>{\n          r.map(((e,j)=>{\n            let x = WINDOW_WIDTH/2 - dim/2*dx + dx*j\n            let y = WINDOW_HEIGHT/2 + dim/2*dy - dy*i\n            e.clear()\n            e.beginFill(0x000000)\n            e.drawCircle(x,y,w/2)\n          }))\n        })\n      }\n      this.draw()\n  }\n\n  function makeGridCounters(dim){\n    this.grid = []\n    // State: Texture: {Hollow,Blue,Red,None} , Hidden: {True,False}\n    for (let i = 0;i<dim;i++){\n      let row = []\n      for (let j = 0;j<dim;j++) {\n        let newCounter = new PIXI.Sprite()\n        newCounter.texture = null\n        newCounter.anchor.set(0.5)\n        app.stage.addChild(newCounter)\n        row.push(newCounter)\n      }\n      this.grid.push(row)\n   }\n   // Draw function\n    this.draw = () => {\n      let dx = GRID_WIDTH/dim\n      let dy = dx\n      let w = dx\n      let h = w\n      this.grid.map((r,i)=>{\n        r.map(((e,j)=>{\n          let x = WINDOW_WIDTH/2 - dim/2*dx + dx*j\n          let y = WINDOW_HEIGHT/2 + dim/2*dy - dy*i\n          e.x = x \n          e.y = y\n          e.width = w\n          e.height = h\n        }))\n      })\n    }\n    this.draw()\n}\n\n  function getLockButton(){\n    let btn  = new PIXI.Sprite.from(CONST.ASSETS.UNLOCKED_LOCK)\n\n    btn.draw = () => {\n      let w = GRID_WIDTH/8\n      let h = w*0.8\n      btn.x = WINDOW_WIDTH/2 - 1.10*GRID_WIDTH/2 + -w\n      btn.y = 0\n      btn.width = w\n      btn.height = h\n    } \n\n    btn.interactive = true\n    btn.on('pointerdown',()=>setPivot())\n    btn.draw()\n    return btn;\n  }\n\n  function getZeroButton(){\n    let btn  = new PIXI.Sprite.from(CONST.ASSETS.ZERO_OUT)\n\n    btn.draw = () => {\n      let w = GRID_WIDTH/8\n      let h = w*0.8\n      btn.x = WINDOW_WIDTH/2 + 1.10*GRID_WIDTH/2 \n      btn.y = 0\n      btn.width = w\n      btn.height = h\n    } \n\n    btn.interactive = true\n    btn.on('pointerdown',()=>{\n      state.val = 0\n      updateGrid(0)\n    })\n    btn.draw()\n    return btn;\n  }\n\n\n\n  function getPlusTenButton(){\n    let btn  = new PIXI.Sprite.from(CONST.ASSETS.PLUS_TEN)\n\n    btn.draw = () => {\n      let w = GRID_WIDTH/4\n      let h = w/2\n      btn.x = WINDOW_WIDTH/2 - 1.10*GRID_WIDTH/2 + 3*w\n      btn.y = 0\n      btn.width = w\n      btn.height = h\n    } \n\n    btn.interactive = true\n    btn.on('pointerdown',()=>updateGrid(10))\n    btn.draw()\n    return btn;\n  }\n\n  function getPlusOneButton(){\n    let btn  = new PIXI.Sprite.from(CONST.ASSETS.PLUS_ONE)\n\n    btn.draw = () => {\n      let w = GRID_WIDTH/4\n      let h = w/2\n      btn.x = WINDOW_WIDTH/2 - 1.10*GRID_WIDTH/2 + 2*w\n      btn.y = 0\n      btn.width = w\n      btn.height = h\n    } \n\n    btn.interactive = true\n    btn.on('pointerdown',() => updateGrid(1))\n    btn.draw()\n    return btn;\n  }\n\n  function getMinusTenButton(){\n    let btn  = new PIXI.Sprite.from(CONST.ASSETS.MINUS_TEN)\n\n    btn.draw = () => {\n      let w = GRID_WIDTH/4\n      let h = w/2\n      btn.x = WINDOW_WIDTH/2 - 1.10*GRID_WIDTH/2\n      btn.y = 0\n      btn.width = w\n      btn.height = h\n    } \n\n    btn.interactive = true\n    btn.on('pointerdown',()=>updateGrid(-10))\n    btn.draw()\n    return btn;\n  }\n\n  function getMinusOneButton(){\n    let btn  = new PIXI.Sprite.from(CONST.ASSETS.MINUS_ONE)\n\n    btn.draw = () => {\n      let w = GRID_WIDTH/4\n      let h = w/2\n      btn.x = WINDOW_WIDTH/2 - 1.10*GRID_WIDTH/2 + w\n      btn.y = 0\n      btn.width = w\n      btn.height = h\n    } \n\n    btn.interactive = true\n    btn.on('pointerdown',()=>updateGrid(-1))\n    btn.draw()\n    return btn;\n  }\n\n  // Called on resize\n  function resize(newFrame){\n    \n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n    WINDOW_WIDTH = frame.width\n    WINDOW_HEIGHT = frame.height\n    // Recompute\n    H_W_RATIO= newFrame.height/newFrame.width\n    LANDSCAPE = H_W_RATIO < 3/4\n    ARENA_WIDTH = LANDSCAPE ? 4/3*newFrame.height : newFrame.width\n    ARENA_HEIGHT = LANDSCAPE ? newFrame.height : 3/4*newFrame.width\n    GRID_HEIGHT = 0.75*WINDOW_HEIGHT\n    GRID_WIDTH = GRID_HEIGHT\n\n    // Set\n    backGround.width = WINDOW_WIDTH\n    backGround.height = WINDOW_HEIGHT\n    app.renderer.resize(WINDOW_WIDTH,WINDOW_HEIGHT)\n    gridNodes.draw()\n    gridCounters.draw()\n    lockButton.draw()\n    plusOneButton.draw()\n    minusOneButton.draw()\n    minusTenButton.draw()\n    plusTenButton.draw()\n    zeroButton.draw()\n\n\n  }\n\n  // Actions\n  function setPivot(){\n    console.log(\"state.pivot\",state.pivot)\n    if (state.pivot != null){\n      console.log(\"unlocking\")\n      state.pivot = null\n      lockButton.texture = UNLOCK_TEXTURE\n      updateGrid(0)\n    } else {\n      console.log(\"locking\")\n      state.pivot = state.val\n      lockButton.texture = LOCK_TEXTURE\n    }\n  }\n\n  function updateGrid(inc){\n    let newVal = state.val + inc\n    let onesInNewVal = newVal%10\n    let tensInNewVal = newVal-onesInNewVal\n    let onesInPivot = state.pivot%10\n    let tensInPivot = state.pivot-onesInPivot\n    let difference = Math.abs(state.pivot - newVal)\n    let onesInDifference = difference%10\n    let tensInDifference = difference - onesInDifference\n    if (newVal >= 0 && newVal <= 100) {\n      state.val = newVal\n      let {pivot,val} = state\n      let count = 0\n      gridCounters.grid.map((row,i)=>{\n        row.map((e,j)=>{\n          count += 1\n        if (count <= val && pivot == null) {\n            e.texture = BLUE_TEXTURE\n            console.log(\"first\")\n        } else if (count <= tensInPivot){\n            e.texture = BLUE_TEXTURE\n        } else if (count <= tensInDifference+tensInPivot){\n          e.texture = RED_TEXTURE\n        } else if (count > tensInDifference+tensInPivot && count < tensInNewVal+onesInPivot) {\n          e.texture = RED_TEXTURE\n        }\n        else if (count <= val && count > tensInNewVal){\n            e.texture = BLUE_TEXTURE\n        } else if (count > tensInPivot && count <= pivot){\n            e.texture = RED_TEXTURE\n        } else if (count <= val && count <= pivot){\n          console.log(\"second\")\n            e.texture = BLUE_TEXTURE\n        } else if (count <= tensInNewVal && count >= pivot) {\n          console.log(\"third\")\n            e.texture = RED_TEXTURE\n        } \n        else if (count >= val && count <= pivot){\n          console.log(\"fourth\")\n          e.texture = EMPTY_TEXTURE\n        } \n        else {\n          e.texture = null\n        }\n        })\n      })\n    }\n  }\n\n  // Loading Script\n  function load(){\n    let features = {'lock': true,'fives': true,'touchable': true}\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n    // Setup Background\n    backGround = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    backGround.width = WINDOW_WIDTH\n    backGround.height = WINDOW_HEIGHT\n    backGround.x = 0;\n    backGround.y = 0;\n    backGround.interactive = true\n    backGround.on('pointerdown',updateGrid)\n    app.stage.addChild(backGround)\n\n    // Initialize counters\n    gridNodes = new makeGridNodes(10)\n    gridCounters = new makeGridCounters(10)\n\n    zeroButton = getZeroButton()\n    app.stage.addChild(zeroButton)\n\n    plusTenButton = getPlusTenButton()\n    app.stage.addChild(plusTenButton)\n\n    plusOneButton = getPlusOneButton()\n    app.stage.addChild(plusOneButton)\n\n    minusTenButton = getMinusTenButton()\n    app.stage.addChild(minusTenButton)\n\n    minusOneButton = getMinusOneButton()\n    app.stage.addChild(minusOneButton)\n\n    lockButton = getLockButton()\n    if (features['lock']){\n      app.stage.addChild(lockButton)\n    }\n    \n  }\n  // Call load script\n  load()\n  // Resize assignment\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n};\n"]},"metadata":{},"sourceType":"module"}