{"ast":null,"code":"import _slicedToArray from \"/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/components/Panels.js\";\nimport React, { Component, Text, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Arena from \"./Arena\";\nimport * as FractionWallScript from \"../js/fractionwall.js\";\nimport * as NumberLineToolScript from \"../js/numberlinetool.js\";\nimport * as GridToolScript from \"../js/gridtool.js\";\nimport * as OrderingToolScript from \"../js/orderingtool.js\";\nimport * as SharingToolScript from \"../js/sharingtool.js\";\nimport * as CuisenaireToolScript from \"../js/cuisenairetool.js\";\nimport * as CapacityTalkData from \"../activitydata/CapacityTalk.json\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport * as Pixi from \"pixi.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\"; //import { Document } from '@react-pdf/renderer'\n//pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n/* <Document\nfile=\"pdf/NumberLineLesson.pdf\"\n>\n  <Page pageNumber={1} />\n</Document>\n\n*/\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\nexport default function LessonPanel(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(1),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        panelNumber = _React$useState2[0],\n        setPanel = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"Problem 1\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        label = _React$useState4[0],\n        setLabel = _React$useState4[1];\n\n  const keys = [0, 1, 2];\n  var panel;\n  let page1;\n  let width; // So that the correct panel is highlighted on startup\n\n  useEffect(() => {});\n\n  function animate(k) {\n    var tl = new TimelineMax();\n\n    if (k == -1) {\n      tl.to(panel, 0.5, {\n        x: panel.clientWidth,\n        alpha: 0\n      }).to(panel, 0, {\n        x: -panel.clientWidth,\n        alpha: 1\n      }).to(panel, 1, {\n        x: 0\n      });\n      setTimeout(() => setPanel(panelNumber - 1), 500);\n    } else if (k == 1) {\n      tl.to(panel, 0.5, {\n        x: -panel.clientWidth,\n        alpha: 0\n      }).to(panel, 0, {\n        x: panel.clientWidth,\n        alpha: 1\n      }).to(panel, 1, {\n        x: 0\n      });\n      setTimeout(() => setPanel(panelNumber + 1), 500);\n    }\n  }\n\n  function initButtons() {\n    let buttons = [React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Default\")];\n    return buttons;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, initButtons()), React.createElement(\"div\", {\n    ref: me => panel = me,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/components/Panels.js"],"names":["React","Component","Text","useEffect","makeStyles","useTheme","Arena","FractionWallScript","NumberLineToolScript","GridToolScript","OrderingToolScript","SharingToolScript","CuisenaireToolScript","CapacityTalkData","Grid","TextField","Pixi","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","Button","Paper","useStyles","theme","button","margin","spacing","container","justifyContent","flexDirection","textField","marginLeft","marginRight","dense","marginTop","menu","width","LessonPanel","props","classes","useState","panelNumber","setPanel","label","setLabel","keys","panel","page1","animate","k","tl","to","x","clientWidth","alpha","setTimeout","initButtons","buttons","me"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAgCC,SAAhC,QAAgD,OAAhD;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,KAAKC,kBAAZ,MAAoC,uBAApC;AACA,OAAO,KAAKC,oBAAZ,MAAsC,yBAAtC;AACA,OAAO,KAAKC,cAAZ,MAAgC,mBAAhC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,uBAApC;AACA,OAAO,KAAKC,iBAAZ,MAAmC,sBAAnC;AACA,OAAO,KAAKC,oBAAZ,MAAsC,yBAAtC;AACA,OAAO,KAAKC,gBAAZ,MAAkC,mCAAlC;AACA,SAASC,IAAT,EAAgBC,SAAhB,QAAgC,mBAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,MAAjC,EAAyCC,OAAzC,EAAkDC,SAAlD,EAA6DC,SAA7D,EAAwEC,WAAxE,QAA2F,eAA3F;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;AACA;;AAEA;;;;;;;;AAQA,MAAMC,SAAS,GAAGtB,UAAU,CAACuB,KAAK,KAAK;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,GAD6B;AAIrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,aAAa,EAAE;AAFN,GAJ0B;AAQrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAETM,IAAAA,WAAW,EAAET,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GAR0B;AAYrCO,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEX,KAAK,CAACG,OAAN,CAAc,CAAd;AADN,GAZ8B;AAerCS,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AAf+B,CAAL,CAAN,CAA5B;AAoBA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAGzC,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;;AAHyC,0BAIV1B,KAAK,CAAC4C,QAAN,CAAe,CAAf,CAJU;AAAA;AAAA,QAIlCC,WAJkC;AAAA,QAItBC,QAJsB;;AAAA,2BAKhB9C,KAAK,CAAC4C,QAAN,CAAe,WAAf,CALgB;AAAA;AAAA,QAKlCG,KALkC;AAAA,QAK5BC,QAL4B;;AAMzC,QAAMC,IAAI,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAb;AACA,MAAIC,KAAJ;AACA,MAAIC,KAAJ;AACA,MAAIX,KAAJ,CATyC,CAY3C;;AACArC,EAAAA,SAAS,CAAC,MAAK,CAEd,CAFQ,CAAT;;AAGE,WAASiD,OAAT,CAAiBC,CAAjB,EAAmB;AACjB,QAAIC,EAAE,GAAG,IAAI/B,WAAJ,EAAT;;AACA,QAAI8B,CAAC,IAAI,CAAC,CAAV,EAAa;AACXC,MAAAA,EAAE,CAACC,EAAH,CAAML,KAAN,EAAa,GAAb,EAAkB;AAACM,QAAAA,CAAC,EAAEN,KAAK,CAACO,WAAV;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAlB,EACGH,EADH,CACML,KADN,EACY,CADZ,EACe;AAACM,QAAAA,CAAC,EAAE,CAACN,KAAK,CAACO,WAAX;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OADf,EAEGH,EAFH,CAEML,KAFN,EAEY,CAFZ,EAEc;AAACM,QAAAA,CAAC,EAAE;AAAJ,OAFd;AAGEG,MAAAA,UAAU,CAAC,MAAIb,QAAQ,CAACD,WAAW,GAAC,CAAb,CAAb,EAA6B,GAA7B,CAAV;AACH,KALD,MAKO,IAAIQ,CAAC,IAAI,CAAT,EAAY;AACjBC,MAAAA,EAAE,CAACC,EAAH,CAAML,KAAN,EAAa,GAAb,EAAkB;AAACM,QAAAA,CAAC,EAAE,CAACN,KAAK,CAACO,WAAX;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAAlB,EACGH,EADH,CACML,KADN,EACY,CADZ,EACe;AAACM,QAAAA,CAAC,EAAEN,KAAK,CAACO,WAAV;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OADf,EAEGH,EAFH,CAEML,KAFN,EAEY,CAFZ,EAEc;AAACM,QAAAA,CAAC,EAAE;AAAJ,OAFd;AAGEG,MAAAA,UAAU,CAAC,MAAIb,QAAQ,CAACD,WAAW,GAAC,CAAb,CAAb,EAA6B,GAA7B,CAAV;AACH;AACF;;AAED,WAASe,WAAT,GAAsB;AACpB,QAAIC,OAAO,GAAG,CAAC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA+C,MAAA,SAAS,EAAElB,OAAO,CAACf,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAD,CAAd;AAGA,WAAOiC,OAAP;AACD;;AAGC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,WAAW,EADd,CADA,EAIE;AAAK,IAAA,GAAG,EAAIE,EAAE,IAAIZ,KAAK,GAAGY,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAUH","sourcesContent":["import React , {Component, Text,useEffect} from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Arena from \"./Arena\";\nimport * as FractionWallScript from \"../js/fractionwall.js\";\nimport * as NumberLineToolScript from \"../js/numberlinetool.js\";\nimport * as GridToolScript from \"../js/gridtool.js\";\nimport * as OrderingToolScript from \"../js/orderingtool.js\";\nimport * as SharingToolScript from \"../js/sharingtool.js\";\nimport * as CuisenaireToolScript from \"../js/cuisenairetool.js\";\nimport * as CapacityTalkData from \"../activitydata/CapacityTalk.json\";\nimport { Grid , TextField} from \"@material-ui/core\";\nimport * as Pixi from \"pixi.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\n//import { Document } from '@react-pdf/renderer'\n//pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n/* <Document\nfile=\"pdf/NumberLineLesson.pdf\"\n>\n  <Page pageNumber={1} />\n</Document>\n\n*/\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function LessonPanel(props) {\n\n\n  const classes = useStyles();\n  const [panelNumber,setPanel] = React.useState(1)\n  const [label,setLabel] = React.useState(\"Problem 1\")\n  const keys = [0,1,2]\n  var panel;\n  let page1;\n  let width;\n\n\n// So that the correct panel is highlighted on startup\nuseEffect(()=> {\n\n})\n  function animate(k){\n    var tl = new TimelineMax()\n    if (k == -1) {\n      tl.to(panel, 0.5, {x: panel.clientWidth,alpha: 0})\n        .to(panel,0, {x: -panel.clientWidth,alpha: 1})\n        .to(panel,1,{x: 0})\n        setTimeout(()=>setPanel(panelNumber-1),500)\n    } else if (k == 1) {\n      tl.to(panel, 0.5, {x: -panel.clientWidth,alpha: 0})\n        .to(panel,0, {x: panel.clientWidth,alpha: 1})\n        .to(panel,1,{x: 0})\n        setTimeout(()=>setPanel(panelNumber+1),500)\n    }\n  }\n\n  function initButtons(){\n    let buttons = [<Button variant=\"contained\" color=\"secondary\"  className={classes.button}>\n    Default\n  </Button>]\n    return buttons;\n  }\n\n\n    return (\n      <div>\n      <div className = 'center' >\n        {initButtons()}\n      </div>\n        <div ref = {me => panel = me } > \n       \n        </div>\n      </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}