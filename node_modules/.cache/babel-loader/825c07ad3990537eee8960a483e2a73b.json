{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png';\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { Fraction, Draggable } from \"./api.js\";\nimport { isObject } from \"util\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN);\n  const LINE_PERCENTAGE = 0.8; // Layout Parameters\n\n  let WINDOW_WIDTH = setup.width;\n  let BAR_HEIGHT = setup.height / 15;\n  let WINDOW_HEIGHT = setup.height;\n  let H_W_RATIO = setup.height / setup.width;\n  let LANDSCAPE = H_W_RATIO < 3 / 4;\n  let ARENA_WIDTH = LANDSCAPE ? 4 / 3 * setup.height : setup.width;\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3 / 4 * setup.width;\n  let SQUARE_DIM = ARENA_HEIGHT * 0.8;\n  let Nodes = [];\n  let CurrenPolygon = [];\n\n  class Node extends PIXI.Sprite {\n    constructor() {\n      super();\n      this.on('pointerdown', this.pointerDown);\n      this.on('pointerup', this.pointerUp);\n      this.on('pointerupoutside', this.pointerUpOutside);\n      this.anchor.set(0.5);\n      this.activated = false;\n      this.texture = PIN_TEXTURE;\n      this.interactive = true;\n    }\n\n    pointerDown() {\n      this.activated = !this.activated;\n      CurrenPolygon.push([this.x, this.y]);\n      this.alpha = 0.5;\n    }\n\n    pointerUp() {}\n\n    pointerUpOutside() {\n      console.log(\"UPOUTSIDE\");\n      let xS = [];\n      let yS = [];\n\n      for (let i = 0; i < CurrenPolygon.length / 2; i = i + 2) {\n        xS.push(CurrenPolygon[i]);\n      }\n\n      for (let i = 1; i < CurrenPolygon.length / 2; i = i + 2) {\n        yS.push(CurrenPolygon[i]);\n      }\n\n      console.log(xS);\n      console.log(yS);\n      var graphics = new PIXI.Graphics();\n      graphics.beginFill(0xd7d7d7);\n      graphics.drawPolygon(CurrenPolygon);\n      graphics.endFill();\n      app.stage.addChild(graphics);\n      let setAt = graphics.location.in;\n      app.stage.removeChild(graphics);\n      console.log(\"setat\", setAt);\n      let d = new Draggable();\n      d.hitArea = new PIXI.Polygon(CurrenPolygon);\n      let t = app.renderer.generateTexture(graphics);\n      d.texture = t;\n      d.x = CurrenPolygon[0];\n      d.y = CurrenPolygon[1];\n      app.stage.addChild(d);\n      CurrenPolygon = [];\n    }\n\n  }\n\n  function set(a, b) {\n    let dx = SQUARE_DIM / a;\n    let dy = SQUARE_DIM / b;\n    let dim = SQUARE_DIM / 20;\n\n    for (let i = 0; i < a; i++) {\n      for (let j = 0; j < a; j++) {\n        let n = new Node();\n        Nodes.push(n);\n        n.x = i * dx;\n        n.y = j * dy;\n        n.w = dx / 10;\n        n.height = dim;\n        n.width = dim;\n        app.stage.addChild(n);\n      }\n    }\n  } // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame);\n    app.renderer.resize(WINDOW_WIDTH, WINDOW_HEIGHT);\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n\n    WINDOW_WIDTH = frame.width;\n    WINDOW_HEIGHT = frame.height;\n    H_W_RATIO = frame.height / frame.width;\n    LANDSCAPE = H_W_RATIO < 3 / 4;\n    ARENA_WIDTH = LANDSCAPE ? 4 / 3 * frame.height : frame.width;\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3 / 4 * frame.width;\n  } // Loading Script\n\n\n  function load() {\n    let features = {};\n\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    set(4, 4);\n  } // Call load script\n\n\n  load(); // Not sure where else to put this.\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/gridnodes.js"],"names":["PIXI","blueGradient","CONST","QuestionMark","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","Fraction","Draggable","isObject","ASSETS","init","app","setup","BLUE_TEXTURE","Texture","from","BLUE_CIRCLE","PIN_TEXTURE","SHARP_PIN","LINE_PERCENTAGE","WINDOW_WIDTH","width","BAR_HEIGHT","height","WINDOW_HEIGHT","H_W_RATIO","LANDSCAPE","ARENA_WIDTH","ARENA_HEIGHT","SQUARE_DIM","Nodes","CurrenPolygon","Node","Sprite","constructor","on","pointerDown","pointerUp","pointerUpOutside","anchor","set","activated","texture","interactive","push","x","y","alpha","console","log","xS","yS","i","length","graphics","Graphics","beginFill","drawPolygon","endFill","stage","addChild","setAt","location","in","removeChild","d","hitArea","Polygon","t","renderer","generateTexture","a","b","dx","dy","dim","j","n","w","resize","newFrame","flex","updateLayoutParams","frame","load","features","props","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png'\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport {Fraction, Draggable} from \"./api.js\"\nimport { isObject } from \"util\";\nconst ASSETS = CONST.ASSETS\n\n\nexport const init = (app, setup) => {\n \n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN)\n  const LINE_PERCENTAGE = 0.8\n\n  // Layout Parameters\n  let WINDOW_WIDTH = setup.width\n  let BAR_HEIGHT = setup.height/15\n  let WINDOW_HEIGHT = setup.height\n  let H_W_RATIO = setup.height/setup.width\n  let LANDSCAPE = H_W_RATIO < 3/4\n  let ARENA_WIDTH = LANDSCAPE ? 4/3*setup.height : setup.width\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3/4*setup.width\n  let SQUARE_DIM = ARENA_HEIGHT*0.8\n  \n\n  let Nodes = []\n  let CurrenPolygon = []\n\n  class Node extends PIXI.Sprite {\n    constructor(){\n      super()\n      this.on('pointerdown',this.pointerDown)\n      this.on('pointerup',this.pointerUp)\n      this.on('pointerupoutside',this.pointerUpOutside)\n      this.anchor.set(0.5)\n      this.activated = false\n      this.texture = PIN_TEXTURE\n      this.interactive = true\n    }\n\n    pointerDown(){\n      this.activated = !this.activated\n      CurrenPolygon.push([this.x,this.y])\n      this.alpha = 0.5\n    }\n\n    pointerUp(){\n      \n    }\n\n    pointerUpOutside(){\n      console.log(\"UPOUTSIDE\")\n      let xS = []\n      let yS = []\n      for (let i = 0;i<CurrenPolygon.length/2;i = i+2){\n        xS.push(CurrenPolygon[i])\n      }\n      for (let i = 1;i<CurrenPolygon.length/2;i = i+2){\n        yS.push(CurrenPolygon[i])\n      }\n\n      console.log(xS)\n      console.log(yS)\n\n      var graphics = new PIXI.Graphics();\n    \n      graphics.beginFill(0xd7d7d7);\n      graphics.drawPolygon(CurrenPolygon);\n      graphics.endFill();\n      app.stage.addChild(graphics)\n  \n      let setAt = graphics.location.in\n      app.stage.removeChild(graphics)\n      console.log(\"setat\",setAt)\n      let d = new Draggable()\n      d.hitArea = new PIXI.Polygon(CurrenPolygon)\n      let t = app.renderer.generateTexture(graphics)\n      d.texture = t\n      d.x = CurrenPolygon[0]\n      d.y = CurrenPolygon[1]\n      app.stage.addChild(d)\n      CurrenPolygon = []\n    }\n\n  }\n\n  function set(a,b){\n    let dx = SQUARE_DIM/a\n    let dy = SQUARE_DIM/b\n    let dim = SQUARE_DIM/20\n    for (let i=0;i<a;i++){\n      for (let j=0;j<a;j++){\n        let n = new Node()\n        Nodes.push(n)\n        n.x = i*dx \n        n.y = j*dy\n        n.w = dx/10\n        n.height = dim\n        n.width = dim\n        app.stage.addChild(n)\n      }\n    }\n  }\n\n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n    app.renderer.resize(WINDOW_WIDTH,WINDOW_HEIGHT)\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n    WINDOW_WIDTH = frame.width\n    WINDOW_HEIGHT = frame.height\n    H_W_RATIO = frame.height/frame.width\n    LANDSCAPE = H_W_RATIO < 3/4\n    ARENA_WIDTH = LANDSCAPE ? 4/3*frame.height : frame.width\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3/4*frame.width\n  }\n\n  // Loading Script\n  function load(){\n    let features = {}\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n    set(4,4)\n\n  }\n\n  // Call load script\n  load()\n  // Not sure where else to put this.\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n};\n"]},"metadata":{},"sourceType":"module"}