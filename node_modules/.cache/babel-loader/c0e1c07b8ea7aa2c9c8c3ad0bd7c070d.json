{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png';\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { Fraction, Draggable } from \"./api.js\";\nimport { isObject } from \"util\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Layout Parameters\n  const LINE_PERCENTAGE = 0.8;\n  let WINDOW_WIDTH = setup.width;\n  let BAR_HEIGHT = setup.height / 15;\n  let WINDOW_HEIGHT = setup.height;\n  let H_W_RATIO = setup.height / setup.width;\n  let LANDSCAPE = H_W_RATIO < 3 / 4;\n  let ARENA_WIDTH = LANDSCAPE ? 4 / 3 * setup.height : setup.width;\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3 / 4 * setup.width;\n  let SQUARE_DIM = ARENA_HEIGHT * 0.6;\n  let SQUARE_AREA = SQUARE_DIM * SQUARE_DIM;\n  let stencil;\n  let Nodes = [];\n  let CurrentPolygon = [];\n  let fraction; // Constants\n\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.GLASS_CIRCLE);\n  const DOT_TEXTURE = new PIXI.Texture.from(ASSETS.GLASS_CIRCLE);\n\n  function makeBackground() {\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH;\n    this.sprite.height = WINDOW_HEIGHT;\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.interactive = true;\n    app.stage.addChild(this.sprite);\n\n    this.draw = () => {\n      this.sprite.width = WINDOW_WIDTH;\n      this.sprite.height = WINDOW_HEIGHT;\n    };\n  }\n\n  class Stencil extends PIXI.Graphics {\n    constructor() {\n      super();\n    }\n\n    draw(nodes) {\n      console.log(\"draw called\");\n      console.log(\"nodes\", nodes);\n      this.clear();\n      this.lineStyle(4, 0xff3b55);\n      this.moveTo(nodes[0][0], nodes[0][1]);\n\n      for (let n of nodes) {\n        let x = n[0];\n        let y = n[1];\n        this.lineTo(x, y);\n      }\n    }\n\n  }\n\n  function intersects(lineOnePointPair, lineTwoPointPair) {\n    let x11 = lineOnePointPair[0][0];\n    let y11 = lineOnePointPair[0][1];\n    let x21 = lineOnePointPair[1][0];\n    let y21 = lineOnePointPair[1][1];\n    let x12 = lineTwoPointPair[0][0];\n    let y12 = lineTwoPointPair[0][1];\n    let x22 = lineTwoPointPair[1][0];\n    let y22 = lineTwoPointPair[1][1];\n    let yMax1 = Math.max(y11, y21);\n    let yMin1 = Math.min(y11, y21);\n    let xMax1 = Math.max(x11, x21);\n    let xMin1 = Math.min(x11, x21);\n    let yMax2 = Math.max(y12, y22);\n    let yMin2 = Math.min(y12, y22);\n    let xMax2 = Math.max(x12, x22);\n    let xMin2 = Math.min(x12, x22);\n    let m1 = (y21 - y11) / (x21 - x11);\n    let m2 = (y22 - y12) / (x22 - x12);\n    let b1 = y11 - m1 * x11;\n    let b2 = y12 - m2 * x12;\n\n    const y1 = x => m1 * x + b1;\n\n    const y2 = x => m2 * x + b2;\n\n    let xIntersect = (m1 - m2) / (b2 - b1);\n    let yIntersect = y1(xIntersect);\n    let inYRange1 = yIntersect > yMin1 && yIntersect < yMax1;\n    let inXRange1 = xIntersect > xMin1 && yIntersect < xMax1;\n    let inYRange2 = yIntersect > yMin2 && yIntersect < yMax2;\n    let inXRange2 = xIntersect > xMin2 && xIntersect < xMax2;\n    return inXRange1 && inXRange2 && inYRange1 && inYRange2;\n  }\n\n  function polyNodesIntersect(poly) {\n    let a = poly.shift();\n    console.log(\"aaayyyy\", a);\n    let start = [[a[0], a[1]], [a[0], a[1]]];\n    poly.forEach(n => {\n      if (intersects(start, start)) {\n        return true;\n      }\n    });\n\n    if (poly.length != 0) {\n      return polyNodesIntersect(poly);\n    } else {\n      return false;\n    }\n  }\n\n  class Node extends PIXI.Sprite {\n    constructor() {\n      super();\n      this.on('pointerdown', this.pointerDown);\n      this.on('pointerup', this.pointerUp);\n      this.on('pointerupoutside', this.pointerUpOutside);\n      this.anchor.set(0.5);\n      this.activated = false;\n      this.interactive = true;\n      this.texture = DOT_TEXTURE;\n    }\n\n    pointerDown() {\n      if (this.first) {\n        this.first = false;\n        stencil.clear();\n        this.generatePolygon();\n      } else {\n        if (CurrentPolygon.length == 0) {\n          this.first = true;\n        }\n\n        CurrentPolygon.push([this.x, this.y]);\n        this.activated = true;\n        this.scale.x = this.scale.x * 1.2;\n        this.scale.y = this.scale.y * 1.2;\n        stencil.draw(CurrentPolygon);\n        app.stage.addChild(this);\n      }\n    }\n\n    pointerUpOutside() {}\n\n    pointerUp() {}\n\n    generatePolygon() {\n      Nodes.forEach(n => {\n        if (n.activated) {\n          n.scale.x = n.scale.x / 1.2;\n          n.scale.y = n.scale.y / 1.2;\n          n.activated = false;\n        }\n      });\n      let xS = CurrentPolygon.map(p => p[0]);\n      let yS = CurrentPolygon.map(p => p[1]);\n      let minX = Math.min(...xS);\n      let minY = Math.min(...yS);\n      let flatPolygon = [];\n      CurrentPolygon.forEach(p => {\n        flatPolygon.push(p[0] - minX);\n        flatPolygon.push(p[1] - minY);\n      });\n      let a = polygonArea(CurrentPolygon) / SQUARE_AREA;\n      let f = decimalToFrac(a);\n      console.log(\"polyarea\", a);\n      console.log(\"areatofrac\", decimalToFrac(a));\n      fraction.set(f[0], f[1]);\n      var graphics = new PIXI.Graphics();\n      graphics.beginFill(0xff3b55);\n      graphics.lineStyle(2, 0xffffff);\n      graphics.drawPolygon(flatPolygon);\n      graphics.endFill();\n      let d = new Draggable();\n      d.hitArea = new PIXI.Polygon(flatPolygon);\n      let t = app.renderer.generateTexture(graphics);\n      d.texture = t;\n      d.x = minX;\n      d.y = minY;\n      app.stage.addChild(d);\n      console.log(\"balls\", polyNodesIntersect(CurrentPolygon));\n    }\n\n  }\n\n  function set(a, b) {\n    let dx = SQUARE_DIM / (a - 1);\n    let dy = SQUARE_DIM / (b - 1);\n    let dim = SQUARE_DIM / 15;\n\n    for (let i = 0; i < a; i++) {\n      for (let j = 0; j < a; j++) {\n        let n = new Node();\n        Nodes.push(n);\n        n.x = WINDOW_WIDTH / 2 - SQUARE_DIM / 2 + i * dx;\n        n.y = WINDOW_HEIGHT / 2 - SQUARE_DIM / 2 + j * dy;\n        n.w = dx / 10;\n        n.height = dim;\n        n.width = dim;\n        app.stage.addChild(n);\n      }\n    }\n  }\n\n  function decimalToFrac(dec) {\n    for (let i = 1; i < 100; i++) {\n      for (let j = 0; j <= i; j++) {\n        if (Math.abs(j / i - dec) < 0.001) {\n          return [j, i];\n        }\n      }\n    }\n  } // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame);\n    app.renderer.resize(WINDOW_WIDTH, WINDOW_HEIGHT);\n  }\n\n  function polygonArea(poly) {\n    let area = 0;\n    let xS = poly.map(p => p[0]);\n    let yS = poly.map(p => p[1]); // Calculate value of shoelace formula \n\n    let n = poly.length;\n    let j = n - 1;\n\n    for (let i = 0; i < n; i++) {\n      area = area + (xS[j] + xS[i]) * (yS[j] - yS[i]);\n      j = i; // j is previous vertex to i \n    } // Return absolute value \n\n\n    return Math.abs(area / 2);\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n\n    WINDOW_WIDTH = frame.width;\n    WINDOW_HEIGHT = frame.height;\n    H_W_RATIO = frame.height / frame.width;\n    LANDSCAPE = H_W_RATIO < 3 / 4;\n    ARENA_WIDTH = LANDSCAPE ? 4 / 3 * frame.height : frame.width;\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3 / 4 * frame.width;\n  } // Loading Script\n\n\n  function load() {\n    console.log('load called');\n    let features = {};\n\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    let backGround = new makeBackground();\n    set(4, 4);\n    fraction = new Fraction(0, 1, 100);\n    fraction.x = SQUARE_DIM / 10;\n    fraction.y = SQUARE_DIM / 10;\n    app.stage.addChild(fraction);\n    stencil = new Stencil();\n    stencil.lineStyle(4, 0xff3b55);\n    stencil.x = 0;\n    stencil.y = 0;\n    app.stage.addChild(stencil); //stencil.lineTo(500,500)\n    //stencil.lineTo(400,100)\n\n    console.log(\"intersect\", intersects([[0, 0], [100, 100]], [[0, 100], [100, 0]]));\n    stencil.lineTo(100, 100);\n    stencil.moveTo(0, 100);\n    stencil.lineTo(100, 0);\n  } // Call load script\n\n\n  load(); // Not sure where else to put this.\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/gridnodes.js"],"names":["PIXI","blueGradient","CONST","QuestionMark","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","Fraction","Draggable","isObject","ASSETS","init","app","setup","LINE_PERCENTAGE","WINDOW_WIDTH","width","BAR_HEIGHT","height","WINDOW_HEIGHT","H_W_RATIO","LANDSCAPE","ARENA_WIDTH","ARENA_HEIGHT","SQUARE_DIM","SQUARE_AREA","stencil","Nodes","CurrentPolygon","fraction","BLUE_TEXTURE","Texture","from","GLASS_CIRCLE","DOT_TEXTURE","makeBackground","sprite","Sprite","BLUE_GRADIENT","x","y","interactive","stage","addChild","draw","Stencil","Graphics","constructor","nodes","console","log","clear","lineStyle","moveTo","n","lineTo","intersects","lineOnePointPair","lineTwoPointPair","x11","y11","x21","y21","x12","y12","x22","y22","yMax1","Math","max","yMin1","min","xMax1","xMin1","yMax2","yMin2","xMax2","xMin2","m1","m2","b1","b2","y1","y2","xIntersect","yIntersect","inYRange1","inXRange1","inYRange2","inXRange2","polyNodesIntersect","poly","a","shift","start","forEach","length","Node","on","pointerDown","pointerUp","pointerUpOutside","anchor","set","activated","texture","first","generatePolygon","push","scale","xS","map","p","yS","minX","minY","flatPolygon","polygonArea","f","decimalToFrac","graphics","beginFill","drawPolygon","endFill","d","hitArea","Polygon","t","renderer","generateTexture","b","dx","dy","dim","i","j","w","dec","abs","resize","newFrame","flex","updateLayoutParams","area","frame","load","features","props","backGround","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport blueGradient from \"../assets/blue-gradient.png\";\nimport * as CONST from \"./const.js\";\nimport QuestionMark from '../assets/QuestionMark.png'\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport {Fraction, Draggable} from \"./api.js\"\nimport { isObject } from \"util\";\nconst ASSETS = CONST.ASSETS\n\n\nexport const init = (app, setup) => {\n\n  // Layout Parameters\n  const LINE_PERCENTAGE = 0.8\n  let WINDOW_WIDTH = setup.width\n  let BAR_HEIGHT = setup.height/15\n  let WINDOW_HEIGHT = setup.height\n  let H_W_RATIO = setup.height/setup.width\n  let LANDSCAPE = H_W_RATIO < 3/4\n  let ARENA_WIDTH = LANDSCAPE ? 4/3*setup.height : setup.width\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3/4*setup.width\n  let SQUARE_DIM = ARENA_HEIGHT*0.6\n  let SQUARE_AREA = SQUARE_DIM*SQUARE_DIM\n  \n  let stencil;\n  let Nodes = []\n  let CurrentPolygon = []\n  let fraction;\n\n    // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.GLASS_CIRCLE)\n  const DOT_TEXTURE = new PIXI.Texture.from(ASSETS.GLASS_CIRCLE)\n\n  function makeBackground(){\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH\n    this.sprite.height = WINDOW_HEIGHT\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.interactive = true\n\n    app.stage.addChild(this.sprite)\n\n    this.draw = () => {\n        this.sprite.width = WINDOW_WIDTH\n        this.sprite.height = WINDOW_HEIGHT\n    }\n  }\n\n  class Stencil extends PIXI.Graphics {\n    constructor(){\n      super()\n    }\n\n    draw(nodes){\n      console.log(\"draw called\")\n\n      console.log(\"nodes\",nodes)\n      this.clear()\n      this.lineStyle(4,0xff3b55)\n      this.moveTo(nodes[0][0],nodes[0][1])\n      for (let n of nodes){\n        let x = n[0]\n        let y = n[1]\n        this.lineTo(x,y)\n      }\n    }\n  }\n\n  function intersects(lineOnePointPair,lineTwoPointPair){\n    let x11 = lineOnePointPair[0][0]\n    let y11 = lineOnePointPair[0][1]\n    let x21 = lineOnePointPair[1][0]\n    let y21 = lineOnePointPair[1][1]\n    let x12 = lineTwoPointPair[0][0]\n    let y12 = lineTwoPointPair[0][1]\n    let x22 = lineTwoPointPair[1][0]\n    let y22 = lineTwoPointPair[1][1]\n\n    let yMax1 = Math.max(y11,y21)\n    let yMin1 = Math.min(y11,y21)\n    let xMax1 = Math.max(x11,x21)\n    let xMin1 = Math.min(x11,x21)\n\n    let yMax2 = Math.max(y12,y22)\n    let yMin2 = Math.min(y12,y22)\n    let xMax2 = Math.max(x12,x22)\n    let xMin2 = Math.min(x12,x22)\n\n\n    let m1 = (y21 - y11)/(x21-x11)\n    let m2 = (y22 - y12)/(x22-x12)\n    let b1 = y11 - m1*x11\n    let b2 = y12 - m2*x12\n    \n    const y1 = x=>m1*x+b1\n    const y2 = x=>m2*x+b2\n\n    let xIntersect = (m1 - m2)/(b2-b1)\n    let yIntersect = y1(xIntersect)\n    \n    let inYRange1 = (yIntersect > yMin1) && (yIntersect < yMax1)\n    let inXRange1 = (xIntersect > xMin1) && (yIntersect < xMax1)\n    let inYRange2 = (yIntersect > yMin2) && (yIntersect < yMax2)\n    let inXRange2 = (xIntersect > xMin2) && (xIntersect < xMax2)\n    \n    return (inXRange1 && inXRange2 && inYRange1 && inYRange2)\n\n  }\n\n  function polyNodesIntersect(poly){\n        let a = poly.shift()\n        console.log(\"aaayyyy\",a)\n        let start = [[a[0],a[1]],[a[0],a[1]]]\n\n         poly.forEach(n=>{\n           if (intersects(start,start)){\n              return true\n           }\n         })\n        if (poly.length != 0){\n          return polyNodesIntersect(poly)\n        } else {\n          return false\n        }\n  }\n\n\n  class Node extends PIXI.Sprite {\n    constructor(){\n      super()\n      this.on('pointerdown',this.pointerDown)\n      this.on('pointerup',this.pointerUp)\n      this.on('pointerupoutside',this.pointerUpOutside)\n      this.anchor.set(0.5)\n      this.activated = false\n      this.interactive = true\n      this.texture = DOT_TEXTURE\n    }\n\n    pointerDown(){\n      if (this.first){\n        this.first = false\n        stencil.clear()\n        this.generatePolygon()\n      } else {\n        if (CurrentPolygon.length == 0){\n          this.first = true\n        }\n        CurrentPolygon.push([this.x,this.y])\n        this.activated = true\n        this.scale.x = this.scale.x*1.2\n        this.scale.y = this.scale.y*1.2\n        stencil.draw(CurrentPolygon)\n        app.stage.addChild(this)\n      }\n    }\n\n    pointerUpOutside(){\n\n    }\n\n    pointerUp(){\n      \n    }\n\n    generatePolygon(){\n      Nodes.forEach(n=>{\n        if (n.activated){\n          n.scale.x = n.scale.x/1.2\n          n.scale.y = n.scale.y/1.2\n          n.activated = false\n        }\n      })\n\n      let xS = CurrentPolygon.map(p=> p[0])\n      let yS = CurrentPolygon.map(p=> p[1])\n      let minX = Math.min(...xS)\n      let minY = Math.min(...yS)\n\n      let flatPolygon = []\n      CurrentPolygon.forEach(p=>{\n        flatPolygon.push(p[0]-minX)\n        flatPolygon.push(p[1]-minY)\n      })\n\n      let a = polygonArea(CurrentPolygon)/SQUARE_AREA\n      let f = decimalToFrac(a)\n      console.log(\"polyarea\",a)\n      console.log(\"areatofrac\",decimalToFrac(a))\n\n      fraction.set(f[0],f[1])\n      \n\n      var graphics = new PIXI.Graphics();\n      graphics.beginFill(0xff3b55);\n      graphics.lineStyle(2,0xffffff)\n      graphics.drawPolygon(flatPolygon);\n      graphics.endFill();\n\n      let d = new Draggable()\n      d.hitArea = new PIXI.Polygon(flatPolygon)\n      let t = app.renderer.generateTexture(graphics)\n      d.texture = t\n      d.x = minX\n      d.y = minY\n      app.stage.addChild(d)\n      console.log(\"balls\",polyNodesIntersect(CurrentPolygon))      \n    }\n  }\n\n  function set(a,b){\n    let dx = SQUARE_DIM/(a-1)\n    let dy = SQUARE_DIM/(b-1)\n    let dim = SQUARE_DIM/15\n    for (let i=0;i<a;i++){\n      for (let j=0;j<a;j++){\n        let n = new Node()\n        Nodes.push(n)\n        n.x = WINDOW_WIDTH/2 - SQUARE_DIM/2 + i*dx \n        n.y = WINDOW_HEIGHT/2 - SQUARE_DIM/2+j*dy\n        n.w = dx/10\n        n.height = dim\n        n.width = dim\n        app.stage.addChild(n)\n      }\n    }\n  }\n\n\n  function decimalToFrac(dec){\n    for (let i=1;i<100;i++){\n      for (let j=0;j<=i;j++){\n        if (Math.abs(j/i - dec) < 0.001) {\n          return [j,i]\n        }\n      }\n    }\n  }\n\n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n    app.renderer.resize(WINDOW_WIDTH,WINDOW_HEIGHT)\n  }\n\n\n  function polygonArea(poly) {\n     let area = 0\n     let xS = poly.map(p=> p[0])\n     let yS = poly.map(p=> p[1])\n \n      // Calculate value of shoelace formula \n      let n = poly.length\n      let j = n - 1 \n      for (let i = 0; i < n; i++) { \n          area = area + (xS[j] + xS[i]) * (yS[j] - yS[i]);\n          j = i;  // j is previous vertex to i \n      } \n    \n      // Return absolute value \n      return Math.abs(area / 2)\n  } \n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n    WINDOW_WIDTH = frame.width\n    WINDOW_HEIGHT = frame.height\n    H_W_RATIO = frame.height/frame.width\n    LANDSCAPE = H_W_RATIO < 3/4\n    ARENA_WIDTH = LANDSCAPE ? 4/3*frame.height : frame.width\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3/4*frame.width\n  }\n\n  // Loading Script\n  function load(){\n    console.log('load called')\n    let features = {}\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n    let backGround = new makeBackground()\n\n    set(4,4)\n\n\n    fraction = new Fraction(0,1,100)\n    fraction.x = SQUARE_DIM/10\n    fraction.y = SQUARE_DIM/10\n    app.stage.addChild(fraction)\n\n    stencil = new Stencil()\n    stencil.lineStyle(4,0xff3b55)\n    stencil.x = 0 \n    stencil.y = 0\n    app.stage.addChild(stencil)\n\n    //stencil.lineTo(500,500)\n    //stencil.lineTo(400,100)\n\n    console.log(\"intersect\",intersects([[0,0],[100,100]],[[0,100],[100,0]]))\n    stencil.lineTo(100,100)\n    stencil.moveTo(0,100)\n    stencil.lineTo(100,0)\n\n  }\n\n  // Call load script\n  load()\n  // Not sure where else to put this.\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n};\n"]},"metadata":{},"sourceType":"module"}