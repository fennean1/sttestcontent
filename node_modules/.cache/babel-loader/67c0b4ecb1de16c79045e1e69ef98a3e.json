{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { SSL_OP_TLS_BLOCK_PADDING_BUG, SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from \"constants\";\nimport { number } from \"prop-types\";\nimport { tsExpressionWithTypeArguments, thisExpression } from \"@babel/types\";\nconst ASSETS = CONST.ASSETS;\nexport const init = (app, setup) => {\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE);\n  const LINE_PERCENTAGE = 0.8;\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN);\n  let ActiveRow;\n  let LeftWhisker = new PIXI.Graphics();\n  let RightWhisker = new PIXI.Graphics();\n  app.stage.addChild(LeftWhisker);\n  app.stage.addChild(RightWhisker);\n  let A;\n  let B; // Initial State\n\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 20\n  };\n  let FirstRow;\n  ActiveRow = FirstRow;\n  var Rows = [FirstRow]; // Layout Parameters\n\n  let WINDOW_WIDTH = setup.width;\n  let WINDOW_HEIGHT = setup.height;\n  let H_W_RATIO = setup.height / setup.width;\n  let LANDSCAPE = H_W_RATIO < 3 / 4;\n  let ARENA_WIDTH = LANDSCAPE ? 4 / 3 * setup.height : setup.width;\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3 / 4 * setup.width;\n  let LINE_WIDTH = LINE_PERCENTAGE * WINDOW_WIDTH;\n  let LINE_THICKNESS = LINE_WIDTH / 200;\n  let TICK_THICKNESS = 2 * LINE_THICKNESS / 3;\n  let MAJOR_TICK_HEIGHT = LINE_WIDTH / 20;\n  let MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT / 2;\n  let DX = LINE_WIDTH / state.lineMax;\n  let LINE_START = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n  let STRIP_HEIGHT = LINE_WIDTH / 12; // Reference to entities.\n\n  let backGround;\n  let numberLine;\n  let pinA;\n  let pinB;\n  let stripA;\n  let stripB;\n  let stripBLabel;\n  let stripALabel;\n  let incButton;\n  let decButton;\n  let activePin; // Constructors (should not be called on re-draw)\n\n  function makeNumberLine() {\n    this.tickSpan = 1;\n    this.labelSpan = 1;\n    this.max = state.lineMax;\n    this.ticks = []; // size 120\n\n    this.labels = [];\n    this.line = new PIXI.Graphics();\n\n    this.init = n => {\n      this.line.lineStyle(LINE_THICKNESS, 0x000000);\n      this.line.x = ARENA_WIDTH / 2 - LINE_WIDTH / 2;\n      this.line.y = ARENA_HEIGHT / 2;\n      this.line.lineTo(LINE_WIDTH, 0);\n      this.draw();\n      app.stage.addChild(this.line);\n\n      for (let i = 0; i < 120; i++) {\n        let newTick = new PIXI.Graphics();\n        newTick.lineStyle(LINE_THICKNESS, 0x000000);\n        newTick.x = this.line.x;\n        newTick.y = this.line.y - LINE_THICKNESS / 2;\n        newTick.lineTo(0, MINOR_TICK_HEIGHT);\n        app.stage.addChild(newTick);\n        this.ticks.push(newTick); // Setup Labels Here\n\n        let newLabel = new PIXI.Text(i, {\n          fontFamily: \"Arial\",\n          fontSize: DX / 2,\n          fill: \"0x000000\",\n          align: \"center\"\n        });\n        newLabel.anchor.x = 0.5;\n        this.labels.push(newLabel);\n        newLabel.x = this.line.x + DX * i;\n        newLabel.y = this.line.y + MINOR_TICK_HEIGHT;\n        app.stage.addChild(newLabel);\n      }\n\n      this.increment(0);\n    };\n\n    this.getSetup = () => {// update tickspan etc. based on line max.\n    };\n\n    this.increment = inc => {\n      // Animation go here\n      this.max += inc; // Update State - (Context Specific)\n\n      state.lineMax = this.max;\n      updateLayoutParams();\n      this.ticks.forEach((e, i) => {\n        if (i > this.max) {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH + this.line.x\n          });\n        } else {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH / this.max * i + this.line.x\n          });\n        }\n      });\n      this.labels.forEach((e, i) => {\n        if (i > this.max) {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH + this.line.x\n          });\n          TweenLite.to(e, 0.5, {\n            alpha: 0\n          });\n        } else {\n          TweenLite.to(e, 0.5, {\n            x: LINE_WIDTH / this.max * i + this.line.x\n          });\n          TweenLite.to(e, 0.5, {\n            alpha: 1\n          });\n        }\n      });\n    };\n\n    this.draw = () => {\n      this.line.width = LINE_WIDTH;\n      this.line.height = LINE_THICKNESS;\n      this.line.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n      this.line.y = WINDOW_HEIGHT / 2;\n      this.ticks.forEach((e, i) => {\n        e.width = TICK_THICKNESS;\n        e.height = MINOR_TICK_HEIGHT;\n        e.y = this.line.y - LINE_THICKNESS / 2;\n\n        if (i > this.max) {\n          e.x = LINE_WIDTH + this.line.x;\n        } else {\n          e.x = LINE_WIDTH / this.max * i + this.line.x;\n        }\n      });\n      this.labels.forEach((e, i) => {\n        e.y = this.line.y + MINOR_TICK_HEIGHT;\n        e.style.fontSize = DX / 2;\n\n        if (i > this.max) {\n          e.x = LINE_WIDTH + this.line.x;\n        } else {\n          e.x = LINE_WIDTH / this.max * i + this.line.x;\n        }\n      });\n    };\n\n    this.init();\n  }\n\n  function makeBackground() {\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH;\n    this.sprite.height = WINDOW_HEIGHT;\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup', globalPointerUp);\n    this.sprite.interactive = true;\n    app.stage.addChild(this.sprite);\n\n    this.draw = () => {\n      this.sprite.width = WINDOW_WIDTH;\n      this.sprite.height = WINDOW_HEIGHT;\n    };\n  }\n\n  function makePin(id) {\n    this.sprite = new PIXI.Sprite();\n    this.sprite.id = id;\n    this.sprite.texture = PIN_TEXTURE;\n    this.sprite.interactive = true;\n    this.sprite.anchor.x = 0.5;\n    this.sprite.on('pointerdown', onDragStart);\n    this.sprite.on('pointermove', onDragMove);\n    this.sprite.on('pointerup', onDragEnd);\n    this.sprite.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n    this.sprite.val = 8;\n    app.stage.addChild(this.sprite);\n\n    this.sprite.round = () => {\n      // Pre Computation\n      let rawLineX = this.sprite.x - numberLine.line.x;\n      let n = Math.round(rawLineX / DX); // Setting\n\n      this.sprite.x = numberLine.line.x + n * DX;\n      this.sprite.val = n; // There's gotta be a better pattern than this\n\n      if (this.sprite.id == 0) {\n        state.valA = this.sprite.val;\n      } else if (this.sprite.id == 1) {\n        state.valB = this.sprite.val;\n      }\n    };\n\n    this.draw = () => {\n      this.sprite.width = STRIP_HEIGHT;\n      this.sprite.height = STRIP_HEIGHT;\n      this.sprite.y = WINDOW_HEIGHT / 2 + MINOR_TICK_HEIGHT + DX / 2;\n      this.sprite.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2 + this.sprite.val * DX;\n    };\n\n    this.draw();\n  } // Pin Drag Functions\n\n\n  function onDragStart(event) {\n    app.stage.addChild(this);\n    this.deltaTouch = {\n      x: this.x - event.data.global.x,\n      y: this.y - event.data.global.y\n    };\n    this.dragging = true;\n    this.data = event.data;\n  }\n\n  function onDragEnd(event) {\n    this.dragging = false;\n    this.data = null;\n    this.round();\n    FirstRow.draw(this.x - LINE_START);\n  }\n\n  function onDragMove(event) {\n    if (this.dragging) {\n      let width = this.x - LINE_START;\n      FirstRow.draw(width);\n      let newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch.x; // Keep within number line bounds.\n\n      if (this.x < WINDOW_WIDTH / 2 - LINE_WIDTH / 2) {\n        this.dragging = false;\n        this.x = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n      } else if (this.x > WINDOW_WIDTH / 2 + LINE_WIDTH / 2) {\n        this.dragging = false;\n        this.x = WINDOW_WIDTH / 2 + LINE_WIDTH / 2;\n      }\n    }\n  }\n\n  function makeArrowButton(inc) {\n    let button = new PIXI.Sprite.from(CONST.ASSETS.ARROW);\n    button.inc = inc;\n    button.interactive = true;\n    button.anchor.set(0.5);\n    button.on('pointerdown', () => {\n      numberLine.increment(inc);\n      resize(null, false);\n    });\n    app.stage.addChild(button);\n\n    button.draw = () => {\n      if (button.inc == -5) {\n        button.width = STRIP_HEIGHT / 2;\n        button.height = STRIP_HEIGHT / 2;\n        button.x = WINDOW_WIDTH - 1.1 * button.width;\n        button.y = WINDOW_HEIGHT / 2 + 1 / 2 * button.width;\n        button.rotation = Math.PI;\n      } else if (button.inc == 5) {\n        button.width = STRIP_HEIGHT / 2;\n        button.height = STRIP_HEIGHT / 2;\n        button.x = WINDOW_WIDTH - 1.1 * button.width;\n        button.y = WINDOW_HEIGHT / 2 - 1 / 2 * button.width;\n      }\n    };\n\n    return button;\n  }\n\n  app.stage.on('pointerdown', resizeLine); //app.stage.interactive = true\n\n  function resizeLine(event) {\n    let g = new PIXI.Graphics();\n    g.lineStyle(3, 0x000000);\n    g.drawRoundedRect(0, 0, FirstRow.width, 50, 1);\n    let R = app.renderer.generateTexture(g);\n    let s = new PIXI.Sprite();\n    FirstRow.container.addChild(s);\n    s.texture = R;\n    s.x = LINE_START;\n\n    let onComplete = () => {\n      FirstRow.sprites.push(s);\n      FirstRow.draw();\n    };\n\n    TweenMax.to(FirstRow, 0.5, {\n      denominator: FirstRow.denominator + 1,\n      onUpdate: FirstRow.draw,\n      onComplete: onComplete\n    });\n  }\n\n  function Row(num, den, width) {\n    // Internal Params\n    let touching = true; // Default values\n\n    this.numerator = num;\n    this.denominator = den;\n    this.width = width;\n    this.container = new PIXI.Container();\n    this.container.width = width;\n    this.container.interactive = true;\n    console.log(\"window height\", WINDOW_HEIGHT);\n    this.container.y = 0;\n    this.sprites = [];\n    this.blockWidth = width / this.denominator;\n    this.blockA = new PIXI.Graphics();\n    this.blockA.lineStyle(3, 0x000000);\n    this.blockA.drawRoundedRect(0, 0, this.blockWidth, 50, 1);\n    A = app.renderer.generateTexture(this.blockA);\n    this.blockB = new PIXI.Graphics();\n    this.blockB.beginFill(0xff4772);\n    this.blockB.lineStyle(3, 0x000000);\n    this.blockB.drawRoundedRect(0, 0, this.blockWidth, 50, 1);\n    B = app.renderer.generateTexture(this.blockB);\n\n    this.draw = width => {\n      if (width) {\n        this.width = width;\n      }\n\n      this.blockWidth = this.width / this.denominator;\n      this.blockA.clear();\n      this.blockA.lineStyle(3, 0x000000);\n      this.blockA.drawRoundedRect(0, 0, this.blockWidth, 50, 1);\n      A = app.renderer.generateTexture(this.blockA);\n      this.blockB.clear();\n      this.blockB.beginFill(0xff4772);\n      this.blockB.lineStyle(3, 0x000000);\n      this.blockB.drawRoundedRect(0, 0, this.blockWidth, 50, 1);\n      B = app.renderer.generateTexture(this.blockB);\n\n      for (let i = 0; i < this.sprites.length; i++) {\n        if (this.sprites[i].active) {\n          this.sprites[i].texture = B;\n        } else {\n          this.sprites[i].texture = A;\n        }\n\n        this.sprites[i].x = LINE_START + this.blockWidth * i;\n        this.sprites[i].y = 0;\n      }\n    };\n\n    for (let i = 0; i < this.denominator; i++) {\n      console.log(\"balls\");\n      let s = new PIXI.Sprite.from(A);\n      s.on('pointerdown', spritePointerDown);\n      s.on('pointerup', spritePointerUp);\n      s.on('pointermove', spritePointerMoved);\n      s.interactive = true;\n      s.active = false;\n      s.x = i * LINE_WIDTH / this.denominator;\n      s.y = WINDOW_HEIGHT / 2 - 50;\n      this.sprites.push(s);\n      this.container.addChild(s);\n    } //  Attached methods\n\n\n    this.container.on('pointerdown', containerPointerDown);\n    this.container.on('pointerup', containerPointerUp);\n    this.container.on('pointermove', containerPointerMove); // Add children\n\n    app.stage.addChild(this.container);\n    this.width = this.container.width;\n\n    function spritePointerDown(event) {\n      this.touched = true;\n      this.dragged = false;\n    }\n\n    function spritePointerMoved(event) {\n      if (this.touched) {\n        console.log(\"pointermove\");\n        this.dragged = true;\n      }\n    }\n\n    function spritePointerUp(event) {\n      this.touched = false;\n      console.log('this.draggeed', this.dragged);\n\n      if (!this.dragged) {\n        this.dragged = false;\n        this.active = !this.active;\n        this.alpha = 0.2;\n        this.texture = this.active ? B : A;\n        TweenLite.to(this, 0.4, {\n          alpha: 1\n        });\n      }\n    }\n\n    function containerPointerDown(event) {\n      this.data = event.data;\n      this.startWidth = this.width;\n      this.dragStartY = event.data.global.y;\n      this.touching = true;\n      touching = true;\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      };\n    }\n\n    function containerPointerUp(event) {\n      this.touching = false;\n      touching = false;\n    }\n\n    function containerPointerMove(event) {\n      if (this.touching) {\n        const newPosition = this.data.getLocalPosition(this.parent);\n        this.y = event.data.global.y + this.deltaTouch.y;\n        this.dragged = true;\n      }\n    }\n\n    this.draw(width);\n  }\n\n  function drawWhiskers() {\n    LeftWhisker.clear();\n    LeftWhisker.lineStyle(3, 0x000000);\n    LeftWhisker.moveTo(LINE_START, 0);\n    LeftWhisker.lineTo(LINE_START, WINDOW_HEIGHT / 2 - this.y);\n    RightWhisker.clear();\n    LeftWhisker.lineStyle(3, 0x000000);\n    LeftWhisker.moveTo(pinA.sprite.x, 0);\n    LeftWhisker.lineTo(pinA.sprite.x, WINDOW_HEIGHT / 2 - this.y);\n  }\n\n  function globalPointerUp() {\n    // Ughhh...\n    FirstRow.container.touching = false;\n    pinA.sprite.dragging = false; //pinA.sprite.round()\n    //pinB.sprite.round()\n    //stripA.draw()\n    //stripB.draw()\n    //stripALabel.draw()\n    //stripBLabel.draw()\n  } // Called on resize\n\n\n  function resize(newFrame, flex) {\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame);\n    app.renderer.resize(WINDOW_WIDTH, WINDOW_HEIGHT);\n    numberLine.draw();\n    backGround.draw();\n    pinA.draw();\n    incButton.draw();\n    decButton.draw();\n  }\n\n  function updateLayoutParams(newFrame) {\n    let frame;\n\n    if (newFrame) {\n      frame = newFrame;\n    } else {\n      frame = {\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      };\n    }\n\n    WINDOW_WIDTH = frame.width;\n    WINDOW_HEIGHT = frame.height;\n    H_W_RATIO = frame.height / frame.width;\n    LANDSCAPE = H_W_RATIO < 3 / 4;\n    ARENA_WIDTH = LANDSCAPE ? 4 / 3 * frame.height : frame.width;\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3 / 4 * frame.width;\n    LINE_WIDTH = LINE_PERCENTAGE * WINDOW_WIDTH;\n    LINE_THICKNESS = LINE_WIDTH / 200;\n    TICK_THICKNESS = LINE_THICKNESS / 2;\n    MAJOR_TICK_HEIGHT = LINE_WIDTH / 20;\n    MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT / 2;\n    DX = LINE_WIDTH / state.lineMax;\n    LINE_START = WINDOW_WIDTH / 2 - LINE_WIDTH / 2;\n    STRIP_HEIGHT = LINE_WIDTH / 12;\n  } // Loading Script\n\n\n  function load() {\n    let features = {\n      'strips': true\n    };\n\n    if (setup.props.features) {\n      features = setup.props.features;\n    }\n\n    backGround = new makeBackground();\n    numberLine = new makeNumberLine();\n    pinA = new makePin(0); //pinB = new makePin(1)\n    //stripA = new makeStrip(0)\n    //stripB = new makeStrip(1)\n    //stripALabel = makeStripLabel(0)\n    //stripBLabel = makeStripLabel(1)\n\n    incButton = makeArrowButton(5);\n    decButton = makeArrowButton(-5); //stripALabel.draw()\n    //stripBLabel.draw()\n\n    incButton.draw();\n    decButton.draw();\n    FirstRow = new Row(3, 4, pinA.sprite.x - LINE_START);\n  } // Call load script\n\n\n  load(); // Not sure where else to put this.\n\n  app.resize = frame => resize(frame);\n\n  app.resizable = true;\n};","map":{"version":3,"sources":["/Users/andrewfenner/Documents/MindResearch/Prototypes/newtestunit/src/js/fractionstacks.js"],"names":["PIXI","CONST","TweenMax","TimelineLite","Power2","Elastic","CSSPlugin","TweenLite","TimelineMax","SSL_OP_TLS_BLOCK_PADDING_BUG","SSL_OP_SSLEAY_080_CLIENT_DH_BUG","number","tsExpressionWithTypeArguments","thisExpression","ASSETS","init","app","setup","BLUE_TEXTURE","Texture","from","BLUE_CIRCLE","LINE_PERCENTAGE","PIN_TEXTURE","SHARP_PIN","ActiveRow","LeftWhisker","Graphics","RightWhisker","stage","addChild","A","B","state","valA","valB","lineMax","FirstRow","Rows","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","H_W_RATIO","LANDSCAPE","ARENA_WIDTH","ARENA_HEIGHT","LINE_WIDTH","LINE_THICKNESS","TICK_THICKNESS","MAJOR_TICK_HEIGHT","MINOR_TICK_HEIGHT","DX","LINE_START","STRIP_HEIGHT","backGround","numberLine","pinA","pinB","stripA","stripB","stripBLabel","stripALabel","incButton","decButton","activePin","makeNumberLine","tickSpan","labelSpan","max","ticks","labels","line","n","lineStyle","x","y","lineTo","draw","i","newTick","push","newLabel","Text","fontFamily","fontSize","fill","align","anchor","increment","getSetup","inc","updateLayoutParams","forEach","e","to","alpha","style","makeBackground","sprite","Sprite","BLUE_GRADIENT","on","globalPointerUp","interactive","makePin","id","texture","onDragStart","onDragMove","onDragEnd","val","round","rawLineX","Math","event","deltaTouch","data","global","dragging","newPosition","getLocalPosition","parent","makeArrowButton","button","ARROW","set","resize","rotation","PI","resizeLine","g","drawRoundedRect","R","renderer","generateTexture","s","container","onComplete","sprites","denominator","onUpdate","Row","num","den","touching","numerator","Container","console","log","blockWidth","blockA","blockB","beginFill","clear","length","active","spritePointerDown","spritePointerUp","spritePointerMoved","containerPointerDown","containerPointerUp","containerPointerMove","touched","dragged","startWidth","dragStartY","drawWhiskers","moveTo","newFrame","flex","frame","load","features","props","resizable"],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport * as CONST from \"./const.js\";\nimport { TweenMax, TimelineLite, Power2, Elastic, CSSPlugin, TweenLite, TimelineMax } from \"gsap/TweenMax\";\nimport { SSL_OP_TLS_BLOCK_PADDING_BUG, SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from \"constants\";\nimport { number } from \"prop-types\";\nimport { tsExpressionWithTypeArguments, thisExpression } from \"@babel/types\";\nconst ASSETS = CONST.ASSETS\n\nexport const init = (app, setup) => {\n\n  // Constants\n  const BLUE_TEXTURE = new PIXI.Texture.from(CONST.ASSETS.BLUE_CIRCLE)\n  const LINE_PERCENTAGE = 0.8\n  const PIN_TEXTURE = new PIXI.Texture.from(ASSETS.SHARP_PIN)\n\n  let ActiveRow;\n  let LeftWhisker  = new PIXI.Graphics()\n  let RightWhisker = new PIXI.Graphics()\n  app.stage.addChild(LeftWhisker)\n  app.stage.addChild(RightWhisker)\n\n  let A;\n  let B;\n\n // Initial State\n  let state = {\n    valA: 8,\n    valB: 8,\n    lineMax: 20,\n  }\n\n  let FirstRow\n  ActiveRow = FirstRow\n\n  var Rows = [FirstRow]\n\n  // Layout Parameters\n  let WINDOW_WIDTH = setup.width\n  let WINDOW_HEIGHT = setup.height\n  let H_W_RATIO = setup.height/setup.width\n  let LANDSCAPE = H_W_RATIO < 3/4\n  let ARENA_WIDTH = LANDSCAPE ? 4/3*setup.height : setup.width\n  let ARENA_HEIGHT = LANDSCAPE ? setup.height : 3/4*setup.width\n  let LINE_WIDTH = LINE_PERCENTAGE*WINDOW_WIDTH\n  let LINE_THICKNESS = LINE_WIDTH/200\n  let TICK_THICKNESS = 2*LINE_THICKNESS/3\n  let MAJOR_TICK_HEIGHT = LINE_WIDTH/20\n  let MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT/2\n  let DX = LINE_WIDTH/state.lineMax\n  let LINE_START = WINDOW_WIDTH/2 - LINE_WIDTH/2\n  let STRIP_HEIGHT = LINE_WIDTH/12\n\n  // Reference to entities.\n  let backGround;\n  let numberLine;\n  let pinA;\n  let pinB;\n  let stripA;\n  let stripB;\n  let stripBLabel;\n  let stripALabel;\n  let incButton;\n  let decButton;\n  let activePin;\n\n \n  // Constructors (should not be called on re-draw)\n  function makeNumberLine(){\n     this.tickSpan = 1\n     this.labelSpan = 1\n     this.max = state.lineMax\n     this.ticks = [] // size 120\n     this.labels = []\n     this.line = new PIXI.Graphics()\n\n     this.init = (n) => {\n        this.line.lineStyle(LINE_THICKNESS,0x000000)\n        this.line.x = ARENA_WIDTH/2-LINE_WIDTH/2\n        this.line.y = ARENA_HEIGHT/2\n        this.line.lineTo(LINE_WIDTH,0)\n        this.draw()\n        app.stage.addChild(this.line)\n\n        for (let i = 0;i<120;i++){\n            let newTick = new PIXI.Graphics()\n            newTick.lineStyle(LINE_THICKNESS,0x000000)\n            newTick.x = this.line.x \n            newTick.y = this.line.y - LINE_THICKNESS/2\n            newTick.lineTo(0,MINOR_TICK_HEIGHT)\n            app.stage.addChild(newTick)\n            this.ticks.push(newTick)\n\n            // Setup Labels Here\n            let newLabel = new PIXI.Text(i,{\n              fontFamily: \"Arial\",\n              fontSize: DX/2,\n              fill: \"0x000000\",\n              align: \"center\"\n            })\n            newLabel.anchor.x = 0.5\n            this.labels.push(newLabel)\n            newLabel.x = this.line.x + DX*i\n            newLabel.y = this.line.y + MINOR_TICK_HEIGHT\n            app.stage.addChild(newLabel)\n        }\n        this.increment(0)\n     }\n\n     this.getSetup = ()=> {\n         // update tickspan etc. based on line max.\n     }\n\n     this.increment = (inc) => {\n         // Animation go here\n         this.max += inc\n\n         // Update State - (Context Specific)\n         state.lineMax = this.max\n         updateLayoutParams()\n\n         this.ticks.forEach((e,i)=> {\n            if (i > this.max){\n                TweenLite.to(e,0.5,{x: LINE_WIDTH + this.line.x })\n            } else {\n                TweenLite.to(e,0.5,{x: LINE_WIDTH/this.max*i + this.line.x})\n            }\n         })\n\n         this.labels.forEach((e,i)=> {\n          if (i > this.max){\n              TweenLite.to(e,0.5,{x: LINE_WIDTH + this.line.x })\n              TweenLite.to(e,0.5,{alpha: 0})\n          } else {\n              TweenLite.to(e,0.5,{x: LINE_WIDTH/this.max*i + this.line.x})\n              TweenLite.to(e,0.5,{alpha: 1})\n          }\n       })\n     }\n\n     this.draw = () => {\n        this.line.width = LINE_WIDTH\n        this.line.height = LINE_THICKNESS\n        this.line.x = WINDOW_WIDTH/2 - LINE_WIDTH/2\n        this.line.y = WINDOW_HEIGHT/2\n        this.ticks.forEach((e,i)=> {\n            e.width = TICK_THICKNESS\n            e.height = MINOR_TICK_HEIGHT\n            e.y = this.line.y - LINE_THICKNESS/2\n            if (i > this.max){\n                e.x = LINE_WIDTH + this.line.x \n            } else {\n                e.x =  LINE_WIDTH/this.max*i + this.line.x\n            }\n         })\n         this.labels.forEach((e,i)=> {\n          e.y = this.line.y + MINOR_TICK_HEIGHT\n          e.style.fontSize = DX/2\n          if (i > this.max){\n              e.x = LINE_WIDTH + this.line.x \n          } else {\n              e.x =  LINE_WIDTH/this.max*i + this.line.x\n          }\n       })\n     }\n     this.init()\n  }\n\n  function makeBackground(){\n    // Setup Background\n    this.sprite = new PIXI.Sprite.from(CONST.ASSETS.BLUE_GRADIENT);\n    this.sprite.width = WINDOW_WIDTH\n    this.sprite.height = WINDOW_HEIGHT\n    this.sprite.x = 0;\n    this.sprite.y = 0;\n    this.sprite.on('pointerup',globalPointerUp)\n    this.sprite.interactive = true\n\n    app.stage.addChild(this.sprite)\n\n    this.draw = () => {\n        this.sprite.width = WINDOW_WIDTH\n        this.sprite.height = WINDOW_HEIGHT\n    }\n  }\n\n\n  function makePin(id){\n    this.sprite = new PIXI.Sprite()\n    this.sprite.id = id\n    this.sprite.texture = PIN_TEXTURE\n    this.sprite.interactive = true\n    this.sprite.anchor.x = 0.5\n    this.sprite.on('pointerdown',onDragStart)\n    this.sprite.on('pointermove',onDragMove)\n    this.sprite.on('pointerup',onDragEnd)\n    this.sprite.x = WINDOW_WIDTH/2 - LINE_WIDTH/2\n    this.sprite.val = 8\n    app.stage.addChild(this.sprite)\n\n    this.sprite.round = () => {\n\n      // Pre Computation\n      let rawLineX = this.sprite.x - numberLine.line.x\n      let n = Math.round(rawLineX/DX)\n\n      // Setting\n      this.sprite.x = numberLine.line.x + n*DX\n      this.sprite.val = n\n\n      // There's gotta be a better pattern than this\n      if (this.sprite.id == 0){\n        state.valA = this.sprite.val\n      } else if (this.sprite.id == 1){\n        state.valB = this.sprite.val\n      }\n    }\n\n    this.draw = () => { \n      this.sprite.width = STRIP_HEIGHT\n      this.sprite.height = STRIP_HEIGHT\n      this.sprite.y = WINDOW_HEIGHT/2 + MINOR_TICK_HEIGHT + DX/2\n      this.sprite.x = WINDOW_WIDTH/2 - LINE_WIDTH/2 + this.sprite.val*DX\n    }\n    this.draw()\n   }\n\n  // Pin Drag Functions\n  function onDragStart(event) {\n      app.stage.addChild(this)\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n      this.dragging = true;\n      this.data = event.data;\n  }\n\n  function onDragEnd(event) {\n    this.dragging = false;\n    this.data = null;\n    this.round()\n    FirstRow.draw(this.x - LINE_START)\n  }\n\n  function onDragMove(event) {\n    if (this.dragging) {\n      let width = this.x - LINE_START\n      FirstRow.draw(width)\n      let newPosition = this.data.getLocalPosition(this.parent);\n      this.x = newPosition.x + this.deltaTouch.x;\n\n      // Keep within number line bounds.\n      if (this.x < WINDOW_WIDTH/2-LINE_WIDTH/2){\n        this.dragging = false\n        this.x = WINDOW_WIDTH/2-LINE_WIDTH/2\n      } else if (this.x > WINDOW_WIDTH/2+LINE_WIDTH/2) {\n        this.dragging = false\n        this.x = WINDOW_WIDTH/2+LINE_WIDTH/2\n      }\n    }\n  }\n\n  function makeArrowButton(inc){\n    let button = new PIXI.Sprite.from(CONST.ASSETS.ARROW)\n    button.inc = inc\n    button.interactive = true\n    button.anchor.set(0.5)\n    button.on('pointerdown',()=>{\n      numberLine.increment(inc)\n      resize(null,false)\n    })\n    app.stage.addChild(button)\n\n    button.draw = () => {\n      if (button.inc == -5){\n        button.width = STRIP_HEIGHT/2\n        button.height = STRIP_HEIGHT/2\n        button.x = WINDOW_WIDTH - 1.1*button.width\n        button.y = WINDOW_HEIGHT/2 + 1/2*button.width\n        button.rotation = Math.PI\n      } else if (button.inc == 5){\n        button.width = STRIP_HEIGHT/2\n        button.height = STRIP_HEIGHT/2\n        button.x = WINDOW_WIDTH - 1.1*button.width\n        button.y = WINDOW_HEIGHT/2  - 1/2*button.width\n      }\n    }\n    return button\n  }\n\n  app.stage.on('pointerdown',resizeLine)\n  //app.stage.interactive = true\n\n  function resizeLine(event){\n    let g = new PIXI.Graphics()    \n    g.lineStyle(3,0x000000) \n    g.drawRoundedRect(0,0,FirstRow.width,50,1)\n    let R = app.renderer.generateTexture(g)\n\n    let s = new PIXI.Sprite()\n    FirstRow.container.addChild(s)\n    s.texture = R\n    s.x  = LINE_START\n    let onComplete = ()=>{\n      FirstRow.sprites.push(s)\n      FirstRow.draw()\n    }\n    TweenMax.to(FirstRow, 0.5, {denominator: FirstRow.denominator+1,onUpdate: FirstRow.draw,onComplete: onComplete})\n  }\n\n\n\n\n \n  function Row(num,den,width){\n\n    // Internal Params\n    let touching = true   \n    \n    // Default values\n    this.numerator = num\n    this.denominator = den\n    this.width = width\n\n  \n    this.container = new PIXI.Container()\n    this.container.width = width\n    this.container.interactive = true\n    console.log(\"window height\",WINDOW_HEIGHT)\n    this.container.y = 0\n    this.sprites = []\n  \n\n    this.blockWidth = width / this.denominator\n\n    this.blockA = new PIXI.Graphics()\n    this.blockA.lineStyle(3,0x000000) \n    this.blockA.drawRoundedRect(0,0,this.blockWidth,50,1)\n    A = app.renderer.generateTexture(this.blockA)\n\n    this.blockB = new PIXI.Graphics()\n    this.blockB.beginFill(0xff4772)\n    this.blockB.lineStyle(3,0x000000) \n    this.blockB.drawRoundedRect(0,0,this.blockWidth,50,1)\n    B = app.renderer.generateTexture(this.blockB)\n\n\n    this.draw = (width) => {\n\n      if (width) {\n        this.width = width\n      }\n      this.blockWidth = this.width/this.denominator\n\n      this.blockA.clear()\n      this.blockA.lineStyle(3,0x000000) \n      this.blockA.drawRoundedRect(0,0,this.blockWidth,50,1)\n      A = app.renderer.generateTexture(this.blockA)\n\n      this.blockB.clear()\n      this.blockB.beginFill(0xff4772)\n      this.blockB.lineStyle(3,0x000000) \n      this.blockB.drawRoundedRect(0,0,this.blockWidth,50,1)\n      B = app.renderer.generateTexture(this.blockB)\n\n      for (let i = 0;i<this.sprites.length;i++){\n        if (this.sprites[i].active){\n          this.sprites[i].texture = B\n        } else {\n          this.sprites[i].texture = A\n        }\n\n        this.sprites[i].x = LINE_START+this.blockWidth*i\n        this.sprites[i].y = 0\n      }\n    }\n\n    for (let i = 0;i<this.denominator;i++) {\n      console.log(\"balls\")\n      let s = new PIXI.Sprite.from(A)\n      s.on('pointerdown',spritePointerDown)\n      s.on('pointerup',spritePointerUp)\n      s.on('pointermove',spritePointerMoved)\n      s.interactive = true\n      s.active = false\n      s.x = i*LINE_WIDTH/this.denominator\n      s.y = WINDOW_HEIGHT/2 - 50\n      this.sprites.push(s)\n      this.container.addChild(s)\n    }\n      \n\n    //  Attached methods\n    this.container.on('pointerdown',containerPointerDown)\n    this.container.on('pointerup',containerPointerUp)\n    this.container.on('pointermove',containerPointerMove)\n\n    // Add children\n    app.stage.addChild(this.container)\n    this.width = this.container.width\n  \n\n    function spritePointerDown(event){\n      this.touched = true\n      this.dragged = false\n    }\n\n    function spritePointerMoved(event) {\n\n      if (this.touched){\n        console.log(\"pointermove\")\n        this.dragged = true\n      }\n    }\n\n    function spritePointerUp(event){\n         this.touched = false\n         console.log('this.draggeed',this.dragged)\n     if (!this.dragged) {\n        this.dragged = false\n        this.active = !this.active\n        this.alpha = 0.2\n        this.texture = this.active ? B : A\n        TweenLite.to(this,0.4,{alpha: 1})\n       }\n    }\n\n \n   function containerPointerDown(event) {\n      this.data = event.data\n      this.startWidth = this.width\n      this.dragStartY = event.data.global.y\n      this.touching = true\n      touching = true\n      this.deltaTouch = {\n        x: this.x - event.data.global.x,\n        y: this.y - event.data.global.y\n      }\n    }\n\n \n   function containerPointerUp(event) {\n      this.touching = false\n      touching = false\n    }\n\n    function containerPointerMove(event) {\n      if (this.touching){\n        const newPosition = this.data.getLocalPosition(this.parent);\n        this.y = event.data.global.y + this.deltaTouch.y\n        this.dragged = true\n      }\n    }\n\n\n    this.draw(width)\n\n  }\n\n  function drawWhiskers(){\n    LeftWhisker.clear()\n    LeftWhisker.lineStyle(3,0x000000)\n    LeftWhisker.moveTo(LINE_START,0)\n    LeftWhisker.lineTo(LINE_START,WINDOW_HEIGHT/2-this.y)\n\n    RightWhisker.clear()\n    LeftWhisker.lineStyle(3,0x000000)\n    LeftWhisker.moveTo(pinA.sprite.x,0)\n    LeftWhisker.lineTo(pinA.sprite.x,WINDOW_HEIGHT/2-this.y)\n  }\n\n  function globalPointerUp(){\n    // Ughhh...\n    FirstRow.container.touching = false\n    pinA.sprite.dragging = false\n  \n    //pinA.sprite.round()\n    //pinB.sprite.round()\n    //stripA.draw()\n    //stripB.draw()\n    //stripALabel.draw()\n    //stripBLabel.draw()\n  }\n  \n  // Called on resize\n  function resize(newFrame,flex){\n    // Make sure all layout parameters are up to date.\n    updateLayoutParams(newFrame)\n    app.renderer.resize(WINDOW_WIDTH,WINDOW_HEIGHT)\n    numberLine.draw()\n    backGround.draw()\n    pinA.draw()\n    incButton.draw()\n    decButton.draw()\n  }\n\n  function updateLayoutParams(newFrame){\n    let frame;\n    if (newFrame){\n      frame = newFrame\n    } else {\n      frame = {width: WINDOW_WIDTH,height: WINDOW_HEIGHT}\n    }\n    WINDOW_WIDTH = frame.width\n    WINDOW_HEIGHT = frame.height\n    H_W_RATIO = frame.height/frame.width\n    LANDSCAPE = H_W_RATIO < 3/4\n    ARENA_WIDTH = LANDSCAPE ? 4/3*frame.height : frame.width\n    ARENA_HEIGHT = LANDSCAPE ? frame.height : 3/4*frame.width\n    LINE_WIDTH = LINE_PERCENTAGE*WINDOW_WIDTH\n    LINE_THICKNESS = LINE_WIDTH/200\n    TICK_THICKNESS = LINE_THICKNESS/2\n    MAJOR_TICK_HEIGHT = LINE_WIDTH/20\n    MINOR_TICK_HEIGHT = MAJOR_TICK_HEIGHT/2\n    DX = LINE_WIDTH/state.lineMax\n    LINE_START = WINDOW_WIDTH/2 - LINE_WIDTH/2\n    STRIP_HEIGHT = LINE_WIDTH/12\n  }\n\n  // Loading Script\n  function load(){\n    let features = {'strips': true}\n    if (setup.props.features){\n      features = setup.props.features\n    }\n\n\n    backGround = new makeBackground()\n    numberLine = new makeNumberLine()\n    pinA = new makePin(0)\n    //pinB = new makePin(1)\n    //stripA = new makeStrip(0)\n    //stripB = new makeStrip(1)\n    //stripALabel = makeStripLabel(0)\n    //stripBLabel = makeStripLabel(1)\n    incButton = makeArrowButton(5)\n    decButton = makeArrowButton(-5)\n    //stripALabel.draw()\n    //stripBLabel.draw()\n    incButton.draw()\n    decButton.draw()\n    FirstRow = new Row(3,4,pinA.sprite.x - LINE_START)\n  }\n\n  // Call load script\n  load()\n  // Not sure where else to put this.\n  app.resize = (frame) => resize(frame)\n  app.resizable = true\n};\n"]},"metadata":{},"sourceType":"module"}